{"ast":null,"code":"import { LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_FAILED, LOGOUT_USER, REGISTER_USER, REGISTER_USER_SUCCESS, REGISTER_USER_FAILED, FORGET_PASSWORD, FORGET_PASSWORD_SUCCESS, FORGET_PASSWORD_FAILED } from \"./constants\";\nexport var loginUser = function loginUser(username, password) {\n  return {\n    type: LOGIN_USER,\n    payload: {\n      username: username,\n      password: password\n    }\n  };\n};\nexport var loginUserSuccess = function loginUserSuccess(user) {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n  };\n};\nexport var loginUserFailed = function loginUserFailed(error) {\n  return {\n    type: LOGIN_USER_FAILED,\n    payload: error\n  };\n};\nexport var registerUser = function registerUser(username, email, password) {\n  return {\n    type: REGISTER_USER,\n    payload: {\n      username: username,\n      email: email,\n      password: password\n    }\n  };\n};\nexport var registerUserSuccess = function registerUserSuccess(user) {\n  return {\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n  };\n};\nexport var registerUserFailed = function registerUserFailed(error) {\n  return {\n    type: REGISTER_USER_FAILED,\n    payload: error\n  };\n};\nexport var logoutUser = function logoutUser(history) {\n  return {\n    type: LOGOUT_USER,\n    payload: {\n      history: history\n    }\n  };\n};\nexport var forgetPassword = function forgetPassword(email, username) {\n  return {\n    type: FORGET_PASSWORD,\n    payload: {\n      email: email,\n      username: username\n    }\n  };\n};\nexport var forgetPasswordSuccess = function forgetPasswordSuccess(passwordResetStatus) {\n  return {\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus\n  };\n};\nexport var forgetPasswordFailed = function forgetPasswordFailed(error) {\n  return {\n    type: FORGET_PASSWORD_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/auth/actions.js"],"names":["LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","loginUser","username","password","type","payload","loginUserSuccess","user","loginUserFailed","error","registerUser","email","registerUserSuccess","registerUserFailed","logoutUser","history","forgetPassword","forgetPasswordSuccess","passwordResetStatus","forgetPasswordFailed"],"mappings":"AACA,SACIA,UADJ,EAEIC,kBAFJ,EAGIC,iBAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,qBANJ,EAOIC,oBAPJ,EAQIC,eARJ,EASIC,uBATJ,EAUIC,sBAVJ;AAaA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,QAAX;AAAA,SAAyB;AAC9CC,IAAAA,IAAI,EAAEb,UADwC;AAE9Cc,IAAAA,OAAO,EAAE;AAAEH,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ;AAFqC,GAAzB;AAAA,CAAlB;AAKP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA,SAAW;AACvCH,IAAAA,IAAI,EAAEZ,kBADiC;AAEvCa,IAAAA,OAAO,EAAEE;AAF8B,GAAX;AAAA,CAAzB;AAKP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACvCL,IAAAA,IAAI,EAAEX,iBADiC;AAEvCY,IAAAA,OAAO,EAAEI;AAF8B,GAAZ;AAAA,CAAxB;AAKP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACR,QAAD,EAAWS,KAAX,EAAkBR,QAAlB;AAAA,SAAgC;AACxDC,IAAAA,IAAI,EAAET,aADkD;AAExDU,IAAAA,OAAO,EAAE;AAAEH,MAAAA,QAAQ,EAARA,QAAF;AAAYS,MAAAA,KAAK,EAALA,KAAZ;AAAmBR,MAAAA,QAAQ,EAARA;AAAnB;AAF+C,GAAhC;AAAA,CAArB;AAKP,OAAO,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACL,IAAD;AAAA,SAAW;AAC1CH,IAAAA,IAAI,EAAER,qBADoC;AAE1CS,IAAAA,OAAO,EAAEE;AAFiC,GAAX;AAAA,CAA5B;AAKP,OAAO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,KAAD;AAAA,SAAY;AAC1CL,IAAAA,IAAI,EAAEP,oBADoC;AAE1CQ,IAAAA,OAAO,EAAEI;AAFiC,GAAZ;AAAA,CAA3B;AAKP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAc;AACpCX,IAAAA,IAAI,EAAEV,WAD8B;AAEpCW,IAAAA,OAAO,EAAE;AAAEU,MAAAA,OAAO,EAAPA;AAAF;AAF2B,GAAd;AAAA,CAAnB;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD,EAAOT,QAAP;AAAA,SAAqB;AAC/CE,IAAAA,IAAI,EAAEN,eADyC;AAE/CO,IAAAA,OAAO,EAAE;AAACM,MAAAA,KAAK,EAALA,KAAD;AAAOT,MAAAA,QAAQ,EAARA;AAAP;AAFsC,GAArB;AAAA,CAAvB;AAKP,OAAO,IAAMe,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,mBAAD;AAAA,SAA0B;AAC3Dd,IAAAA,IAAI,EAAEL,uBADqD;AAE3DM,IAAAA,OAAO,EAAEa;AAFkD,GAA1B;AAAA,CAA9B;AAKP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACV,KAAD;AAAA,SAAY;AAC5CL,IAAAA,IAAI,EAAEJ,sBADsC;AAE5CK,IAAAA,OAAO,EAAEI;AAFmC,GAAZ;AAAA,CAA7B","sourcesContent":["// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (username, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { username, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (email,username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: {email,username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}