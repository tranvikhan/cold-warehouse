{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\src\\\\screens\\\\status\\\\myLineChart.component.js\";\nimport { Layout, Text, useTheme, Select, SelectItem, IndexPath, Icon, SelectGroup } from '@ui-kitten/components';\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport AreaRoom from \"../../components/areaRoom.component\";\nexport default function MyLineChart(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      state = _ref.state;\n  var theme = useTheme();\n\n  var _React$useState = React.useState(new IndexPath(0, 0)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedIndex = _React$useState2[0],\n      setSelectedIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([['Kho 1', 'Kho 2'], ['Kho 3']]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      warehouse = _React$useState4[0],\n      setWarehouse = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      areaIndex = _React$useState6[0],\n      setAreaIndex = _React$useState6[1];\n\n  var _React$useState7 = React.useState([Math.random(), Math.random(), Math.random(), Math.random(), Math.random(), Math.random()]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dataArray = _React$useState8[0],\n      setDataArray = _React$useState8[1];\n\n  React.useEffect(function () {\n    setDataArray([Math.random(), Math.random(), Math.random(), Math.random(), Math.random(), Math.random()]);\n  }, [selectedIndex, areaIndex]);\n  var data = [{\n    id: 0,\n    title: 'Khu vực cá ba sa',\n    temperature: -18,\n    status: 'decrease'\n  }, {\n    id: 1,\n    title: 'Khu vực tôm thẻ',\n    temperature: -17,\n    status: 'increase'\n  }, {\n    id: 2,\n    title: 'Khu vực thát lát',\n    temperature: -10,\n    status: 'stability'\n  }, {\n    id: 3,\n    title: 'Khu vực tôm càng xanh',\n    temperature: -1,\n    status: 'stability'\n  }];\n  var styles = StyleSheet.create({\n    selectInput: {\n      width: '95%',\n      marginTop: 15,\n      marginBottom: 10\n    },\n    container: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    chartView: {\n      backgroundColor: theme['background-basic-color-4'],\n      width: '95%',\n      borderRadius: 10,\n      padding: 5\n    },\n    chartTitle: {\n      marginLeft: 4,\n      marginTop: 10\n    },\n    srollViewAre: {\n      height: Dimensions.get(\"window\").height * 0.24,\n      marginTop: 15,\n      width: '100%'\n    },\n    areRoomView: {\n      backgroundColor: theme['background-basic-color-4'],\n      padding: 20,\n      borderRadius: 20,\n      marginHorizontal: 5\n    },\n    areRoomFocus: {\n      backgroundColor: theme['color-primary-focus']\n    }\n  });\n  return React.createElement(Layout, {\n    style: styles.container,\n    level: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Select, {\n    style: styles.selectInput,\n    selectedIndex: selectedIndex,\n    value: warehouse[selectedIndex.section][selectedIndex.row],\n    onSelect: function onSelect(index) {\n      return setSelectedIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(SelectGroup, {\n    title: \"Kho c\\u1EE7a t\\xF4i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(SelectItem, {\n    title: \"Kho 1\",\n    key: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(SelectItem, {\n    title: \"Kho 2\",\n    key: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), React.createElement(SelectGroup, {\n    title: \"Kho \\u0111\\u01B0\\u1EE3c chia s\\u1EBD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(SelectItem, {\n    title: \"Kho 3\",\n    key: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.chartView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.chartTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, data[areaIndex].title), React.createElement(LineChart, {\n    withInnerLines: false,\n    data: {\n      labels: [\"19:02\", \"19:03\", \"19:04\", \"19:05\", \"19:06\", \"19:07\"],\n      datasets: [{\n        data: dataArray\n      }]\n    },\n    width: Dimensions.get(\"window\").width * 0.9,\n    height: Dimensions.get(\"window\").width * 0.5,\n    yAxisLabel: \"-\",\n    yAxisSuffix: \"\\xB0C\",\n    yAxisInterval: 1,\n    bezier: true,\n    style: {\n      marginVertical: 15,\n      borderRadius: 5\n    },\n    chartConfig: {\n      backgroundColor: \"#000000\",\n      backgroundGradientFrom: theme['background-basic-color-4'],\n      backgroundGradientTo: theme['background-basic-color-4'],\n      decimalPlaces: 2,\n      color: function color(lever) {\n        return theme['color-primary-default'];\n      },\n      labelColor: function labelColor(lever) {\n        return theme['text-basic-color'];\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"2\",\n        strokeWidth: \"4\",\n        stroke: theme['color-primary-default']\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.srollViewAre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    contentContainerStyle: {\n      paddingHorizontal: 10\n    },\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, data.map(function (dt) {\n    return React.createElement(AreaRoom, {\n      data: dt,\n      key: dt.id,\n      focus: dt.id == areaIndex ? true : false,\n      onPressView: function onPressView(key) {\n        setAreaIndex(key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["D:/ReactNative/myapp/src/screens/status/myLineChart.component.js"],"names":["Layout","Text","useTheme","Select","SelectItem","IndexPath","Icon","SelectGroup","React","LineChart","AreaRoom","MyLineChart","navigation","state","theme","useState","selectedIndex","setSelectedIndex","warehouse","setWarehouse","areaIndex","setAreaIndex","Math","random","dataArray","setDataArray","useEffect","data","id","title","temperature","status","styles","StyleSheet","create","selectInput","width","marginTop","marginBottom","container","flex","alignItems","chartView","backgroundColor","borderRadius","padding","chartTitle","marginLeft","srollViewAre","height","Dimensions","get","areRoomView","marginHorizontal","areRoomFocus","section","row","index","labels","datasets","marginVertical","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","lever","labelColor","style","propsForDots","r","strokeWidth","stroke","paddingHorizontal","map","dt","key"],"mappings":"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","sourcesContent":["import { Layout ,Text , useTheme, Select, SelectItem,IndexPath, Icon, SelectGroup} from '@ui-kitten/components';\r\nimport React from 'react'\r\nimport { Dimensions,ScrollView,View  ,StyleSheet,Alert } from 'react-native'\r\nimport {LineChart} from \"react-native-chart-kit\";\r\nimport AreaRoom from '../../components/areaRoom.component';\r\nexport default function MyLineChart({ navigation, state }) {\r\n    const theme = useTheme();\r\n    const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0,0));\r\n    const [warehouse,setWarehouse] =React.useState([['Kho 1','Kho 2'],['Kho 3']]);\r\n    const [areaIndex,setAreaIndex] = React.useState(0);\r\n    const [dataArray,setDataArray] =React.useState([\r\n        Math.random(),\r\n        Math.random(),\r\n        Math.random(),\r\n        Math.random(),\r\n        Math.random(),\r\n        Math.random()\r\n    ]);\r\n    React.useEffect(() => {\r\n        setDataArray([\r\n            Math.random(),\r\n            Math.random(),\r\n            Math.random(),\r\n            Math.random(),\r\n            Math.random(),\r\n            Math.random()\r\n        ]);   \r\n    }, [selectedIndex,areaIndex])\r\n    const data=[\r\n        {id:0,title:'Khu vực cá ba sa',temperature:-18,status:'decrease'},\r\n        {id:1,title:'Khu vực tôm thẻ',temperature:-17,status:'increase'},\r\n        {id:2,title:'Khu vực thát lát',temperature:-10,status:'stability'},\r\n        {id:3,title:'Khu vực tôm càng xanh',temperature:-1,status:'stability'},\r\n    ]\r\n\r\n    const styles = StyleSheet.create({\r\n        selectInput:{width:'95%',marginTop:15,marginBottom:10},\r\n        container:{flex:1,alignItems:'center'},\r\n        chartView:{backgroundColor: theme['background-basic-color-4'],width:'95%',borderRadius:10,padding:5},\r\n        chartTitle:{marginLeft:4,marginTop:10},\r\n        srollViewAre:{height:Dimensions.get(\"window\").height*0.24,marginTop:15,width:'100%'},\r\n        areRoomView:{backgroundColor: theme['background-basic-color-4'],padding:20,borderRadius:20,marginHorizontal:5},\r\n        areRoomFocus:{backgroundColor:theme['color-primary-focus']}\r\n    })\r\n\r\n    return (\r\n    <Layout style={styles.container} level='3'>\r\n    <Select\r\n        style={styles.selectInput}\r\n        selectedIndex={selectedIndex}\r\n        value={warehouse[selectedIndex.section][selectedIndex.row]}\r\n        onSelect={index => setSelectedIndex(index)}>\r\n        <SelectGroup title='Kho của tôi'>\r\n            <SelectItem title='Kho 1' key='A'/>\r\n            <SelectItem title='Kho 2' key='B'/> \r\n        </SelectGroup>\r\n        <SelectGroup title='Kho được chia sẽ'>\r\n            <SelectItem title='Kho 3' key='C'/>\r\n        </SelectGroup>\r\n    </Select>\r\n        <View style={styles.chartView}>\r\n        <Text style={styles.chartTitle}>{data[areaIndex].title}</Text>\r\n            <LineChart\r\n                withInnerLines={false}\r\n                data={{\r\n                labels: [\"19:02\", \"19:03\", \"19:04\", \"19:05\", \"19:06\", \"19:07\"],\r\n                datasets: [\r\n                    {\r\n                    data: dataArray\r\n                    }\r\n                ]\r\n                }}\r\n                width={Dimensions.get(\"window\").width*0.9} // from react-native\r\n                height={Dimensions.get(\"window\").width*0.5}\r\n                yAxisLabel=\"-\"\r\n                yAxisSuffix=\"°C\"\r\n                yAxisInterval={1} // optional, defaults to 1\r\n                bezier\r\n                style={{\r\n                marginVertical: 15,\r\n                borderRadius: 5\r\n                }}\r\n                chartConfig={{\r\n                    backgroundColor: \"#000000\",\r\n                    backgroundGradientFrom: theme['background-basic-color-4'],\r\n                    backgroundGradientTo: theme['background-basic-color-4'],\r\n                    decimalPlaces: 2, // optional, defaults to 2dp\r\n                    color:(lever)=> theme['color-primary-default'],\r\n                    labelColor:(lever)=> theme['text-basic-color'],\r\n                    style: {\r\n                    borderRadius: 16\r\n                    },\r\n                    propsForDots: {\r\n                    r: \"2\",\r\n                    strokeWidth: \"4\",\r\n                    stroke: theme['color-primary-default']\r\n                    }\r\n                }}\r\n            />        \r\n        </View>\r\n        <View style={styles.srollViewAre}>\r\n            <ScrollView horizontal contentContainerStyle={{paddingHorizontal:10}} showsHorizontalScrollIndicator={false}>\r\n                {data.map((dt)=> (\r\n                    <AreaRoom data={dt} key={dt.id} focus={(dt.id==areaIndex)?true:false} onPressView={(key)=>{setAreaIndex(key)}}/>\r\n                ))}\r\n            </ScrollView>\r\n        </View>\r\n    </Layout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}