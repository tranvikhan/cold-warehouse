{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\GIT HUB\\\\NCKH2020\\\\KHAN\\\\AndroidApp\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport AppNavigator from \"./src/Navigators/app.navigator\";\nimport { default as theme } from \"./src/assets/theme/custom-theme.json\";\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useStyleSheet, StyleService } from '@ui-kitten/components';\nimport { enableScreens } from 'react-native-screens';\nimport PushNotication from \"./src/screens/notification/pushNotication\";\nimport { useSelector } from 'react-redux';\nexport default function Application() {\n  var styles = useStyleSheet(mainStyle);\n  var themeColor = useSelector(function (state) {\n    return state.Layout.theme;\n  });\n  enableScreens();\n  return React.createElement(React.Fragment, null, React.createElement(IconRegistry, {\n    icons: EvaIconsPack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), React.createElement(ApplicationProvider, _extends({}, eva, {\n    theme: _objectSpread(_objectSpread({}, eva[themeColor]), {}, {\n      theme: theme\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(SafeAreaView, {\n    style: styles.droidSafeArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }))));\n}\nvar mainStyle = StyleService.create({\n  droidSafeArea: {\n    flex: 1,\n    backgroundColor: '#2c3e50',\n    paddingTop: Platform.OS === 'android' ? 25 : 0\n  }\n});","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/index.js"],"names":["React","eva","ApplicationProvider","IconRegistry","AppNavigator","default","theme","EvaIconsPack","useStyleSheet","StyleService","enableScreens","PushNotication","useSelector","Application","styles","mainStyle","themeColor","state","Layout","droidSafeArea","create","flex","backgroundColor","paddingTop","Platform","OS"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,mBAAT,EAA6BC,YAA7B,QAAgD,uBAAhD;AACA,OAAOC,YAAP;AACA,SAASC,OAAO,IAAIC,KAApB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA2C,uBAA3C;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,cAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,MAAMC,MAAM,GAAGN,aAAa,CAACO,SAAD,CAA5B;AACA,MAAMC,UAAU,GAAGJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAEA,KAAK,CAACC,MAAN,CAAaZ,KAAf;AAAA,GAAN,CAA9B;AACAI,EAAAA,aAAa;AAEd,SACE,0CAEC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGG,oBAAC,mBAAD,eAAyBN,GAAzB;AAA8B,IAAA,KAAK,kCAAOA,GAAG,CAACe,UAAD,CAAV;AAAuBV,MAAAA,KAAK,EAALA;AAAvB,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEQ,MAAM,CAACK,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,CAHH,CADF;AAWF;AACD,IAAMJ,SAAS,GAAEN,YAAY,CAACW,MAAb,CAAoB;AACnCD,EAAAA,aAAa,EAAE;AACXE,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,eAAe,EAAC,SAFL;AAGXC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC;AAHlC;AADoB,CAApB,CAAjB","sourcesContent":["import React from \"react\";\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider,IconRegistry} from '@ui-kitten/components';\nimport AppNavigator from './src/Navigators/app.navigator';\nimport { default as theme } from './src/assets/theme/custom-theme.json';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { Platform, SafeAreaView } from 'react-native';\nimport { useStyleSheet ,StyleService} from '@ui-kitten/components';\nimport { enableScreens } from 'react-native-screens';\nimport PushNotication from \"./src/screens/notification/pushNotication\";\nimport {useSelector} from 'react-redux';\n\nexport default function Application() {\n    const styles = useStyleSheet(mainStyle);\n    const themeColor = useSelector(state=>state.Layout.theme);\n    enableScreens();\n\n   return(\n     <>\n    {/* <PushNotication */}\n      <IconRegistry icons={EvaIconsPack}/>\n        <ApplicationProvider {...eva} theme={{ ...eva[themeColor],theme}}>\n          <SafeAreaView style={styles.droidSafeArea}>\n              <AppNavigator/> \n          </SafeAreaView>\n        </ApplicationProvider>\n      </>\n    );\n}\nconst mainStyle= StyleService.create({\n  droidSafeArea: {\n      flex: 1,\n      backgroundColor:'#2c3e50',\n      paddingTop: Platform.OS === 'android' ? 25 : 0\n  },\n});\n"]},"metadata":{},"sourceType":"module"}