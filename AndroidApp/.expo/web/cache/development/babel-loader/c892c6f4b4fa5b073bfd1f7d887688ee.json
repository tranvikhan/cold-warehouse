{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(getActivatesApi),\n    _marked2 = _regeneratorRuntime.mark(getStationsApi),\n    _marked3 = _regeneratorRuntime.mark(addActivateApi),\n    _marked4 = _regeneratorRuntime.mark(deleteActivateApi),\n    _marked5 = _regeneratorRuntime.mark(watchGetActivates),\n    _marked6 = _regeneratorRuntime.mark(watchGetStations),\n    _marked7 = _regeneratorRuntime.mark(watchAddActivate),\n    _marked8 = _regeneratorRuntime.mark(watchDeleteActivate),\n    _marked9 = _regeneratorRuntime.mark(roomActivateSaga);\n\nimport { requestApi } from \"../../helpers/api\";\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\nimport { getAreaData, getCubeData, getCurrentData, getSensorData, getRoomStructure, getActivatesFailed, getActivatesSuccess, getStationsSuccess, getStationsFailed, addActivateSuccess, addActivateFailed, deleteActivateSuccess, deleteActivateFailed } from \"../actions\";\nimport { ADD_ACTIVATE, DELETE_ACTIVATE, GET_ACTIVATES, GET_STATIONS } from \"../constants\";\n\nfunction getActivatesApi(_ref) {\n  var _ref$payload, user, room_id, res;\n\n  return _regeneratorRuntime.wrap(function getActivatesApi$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref$payload = _ref.payload, user = _ref$payload.user, room_id = _ref$payload.room_id;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(requestApi, {\n            method: \"get\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/activate/all\",\n            params: {\n              room_id: room_id\n            }\n          });\n\n        case 4:\n          res = _context.sent;\n\n          if (!(res.status === \"success\")) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getActivatesSuccess(res.result.activates));\n\n        case 8:\n          _context.next = 12;\n          break;\n\n        case 10:\n          _context.next = 12;\n          return put(getActivatesFailed(res.result));\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 18;\n          return put(getActivatesFailed(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n\nfunction getStationsApi(_ref2) {\n  var _ref2$payload, user, room_id, username, password, res;\n\n  return _regeneratorRuntime.wrap(function getStationsApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref2$payload = _ref2.payload, user = _ref2$payload.user, room_id = _ref2$payload.room_id, username = _ref2$payload.username, password = _ref2$payload.password;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(requestApi, {\n            method: \"post\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/activate/getStation\",\n            data: {\n              room_id: room_id,\n              username: username,\n              password: password\n            }\n          });\n\n        case 4:\n          res = _context2.sent;\n\n          if (!(res.status === \"success\")) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(getStationsSuccess(res.result.stations));\n\n        case 8:\n          _context2.next = 12;\n          break;\n\n        case 10:\n          _context2.next = 12;\n          return put(getStationsFailed(res.result));\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(getStationsFailed(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 14]]);\n}\n\nfunction addActivateApi(_ref3) {\n  var _ref3$payload, user, room_id, username, password, station_id, station_name, res;\n\n  return _regeneratorRuntime.wrap(function addActivateApi$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _ref3$payload = _ref3.payload, user = _ref3$payload.user, room_id = _ref3$payload.room_id, username = _ref3$payload.username, password = _ref3$payload.password, station_id = _ref3$payload.station_id, station_name = _ref3$payload.station_name;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(requestApi, {\n            method: \"post\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/activate/add\",\n            data: {\n              room_id: room_id,\n              username: username,\n              password: password,\n              station_id: station_id,\n              station_name: station_name\n            }\n          });\n\n        case 4:\n          res = _context3.sent;\n\n          if (!(res.status === \"success\")) {\n            _context3.next = 20;\n            break;\n          }\n\n          _context3.next = 8;\n          return put(addActivateSuccess(res.result.activate));\n\n        case 8:\n          _context3.next = 10;\n          return put(getRoomStructure(user, room_id));\n\n        case 10:\n          _context3.next = 12;\n          return put(getAreaData(user, room_id));\n\n        case 12:\n          _context3.next = 14;\n          return put(getCurrentData(user, room_id));\n\n        case 14:\n          _context3.next = 16;\n          return put(getSensorData(user, room_id));\n\n        case 16:\n          _context3.next = 18;\n          return put(getCubeData(user, room_id));\n\n        case 18:\n          _context3.next = 22;\n          break;\n\n        case 20:\n          _context3.next = 22;\n          return put(addActivateFailed(res.result));\n\n        case 22:\n          _context3.next = 28;\n          break;\n\n        case 24:\n          _context3.prev = 24;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 28;\n          return put(addActivateFailed(_context3.t0));\n\n        case 28:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 24]]);\n}\n\nfunction deleteActivateApi(_ref4) {\n  var _ref4$payload, user, room_id, activate_id, res;\n\n  return _regeneratorRuntime.wrap(function deleteActivateApi$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _ref4$payload = _ref4.payload, user = _ref4$payload.user, room_id = _ref4$payload.room_id, activate_id = _ref4$payload.activate_id;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(requestApi, {\n            method: \"delete\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/activate\",\n            data: {\n              room_id: room_id,\n              activate_id: activate_id\n            }\n          });\n\n        case 4:\n          res = _context4.sent;\n\n          if (!(res.status === \"success\")) {\n            _context4.next = 20;\n            break;\n          }\n\n          _context4.next = 8;\n          return put(deleteActivateSuccess(activate_id));\n\n        case 8:\n          _context4.next = 10;\n          return put(getRoomStructure(user, room_id));\n\n        case 10:\n          _context4.next = 12;\n          return put(getAreaData(user, room_id));\n\n        case 12:\n          _context4.next = 14;\n          return put(getCurrentData(user, room_id));\n\n        case 14:\n          _context4.next = 16;\n          return put(getSensorData(user, room_id));\n\n        case 16:\n          _context4.next = 18;\n          return put(getCubeData(user, room_id));\n\n        case 18:\n          _context4.next = 22;\n          break;\n\n        case 20:\n          _context4.next = 22;\n          return put(deleteActivateFailed(res.result));\n\n        case 22:\n          _context4.next = 28;\n          break;\n\n        case 24:\n          _context4.prev = 24;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 28;\n          return put(deleteActivateFailed(_context4.t0));\n\n        case 28:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 24]]);\n}\n\nfunction watchGetActivates() {\n  return _regeneratorRuntime.wrap(function watchGetActivates$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(GET_ACTIVATES, getActivatesApi);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchGetStations() {\n  return _regeneratorRuntime.wrap(function watchGetStations$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(GET_STATIONS, getStationsApi);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchAddActivate() {\n  return _regeneratorRuntime.wrap(function watchAddActivate$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(ADD_ACTIVATE, addActivateApi);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchDeleteActivate() {\n  return _regeneratorRuntime.wrap(function watchDeleteActivate$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(DELETE_ACTIVATE, deleteActivateApi);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction roomActivateSaga() {\n  return _regeneratorRuntime.wrap(function roomActivateSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchGetActivates), fork(watchGetStations), fork(watchAddActivate), fork(watchDeleteActivate)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nexport default roomActivateSaga;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomActivate/saga.js"],"names":["getActivatesApi","getStationsApi","addActivateApi","deleteActivateApi","watchGetActivates","watchGetStations","watchAddActivate","watchDeleteActivate","roomActivateSaga","requestApi","all","call","fork","takeEvery","put","getAreaData","getCubeData","getCurrentData","getSensorData","getRoomStructure","getActivatesFailed","getActivatesSuccess","getStationsSuccess","getStationsFailed","addActivateSuccess","addActivateFailed","deleteActivateSuccess","deleteActivateFailed","ADD_ACTIVATE","DELETE_ACTIVATE","GET_ACTIVATES","GET_STATIONS","payload","user","room_id","method","headers","accessToken","url","params","res","status","result","activates","username","password","data","stations","station_id","station_name","activate","activate_id"],"mappings":"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","sourcesContent":["import { requestApi } from \"../../helpers/api\";\r\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  getAreaData,\r\n  getCubeData,\r\n  getCurrentData,\r\n  getSensorData,\r\n  getRoomStructure,\r\n  getActivatesFailed,\r\n  getActivatesSuccess,\r\n  getStationsSuccess,\r\n  getStationsFailed,\r\n  addActivateSuccess,\r\n  addActivateFailed,\r\n  deleteActivateSuccess,\r\n  deleteActivateFailed,\r\n} from \"../actions\";\r\nimport {\r\n  ADD_ACTIVATE,\r\n  DELETE_ACTIVATE,\r\n  GET_ACTIVATES,\r\n  GET_STATIONS,\r\n} from \"../constants\";\r\n\r\nfunction* getActivatesApi({ payload: { user, room_id } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate/all\",\r\n      params: { room_id },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(getActivatesSuccess(res.result.activates));\r\n    } else {\r\n      yield put(getActivatesFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getActivatesFailed(error));\r\n  }\r\n}\r\n\r\nfunction* getStationsApi({ payload: { user, room_id, username, password } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate/getStation\",\r\n      data: { room_id, username, password },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(getStationsSuccess(res.result.stations));\r\n    } else {\r\n      yield put(getStationsFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getStationsFailed(error));\r\n  }\r\n}\r\n\r\nfunction* addActivateApi({\r\n  payload: { user, room_id, username, password, station_id, station_name },\r\n}) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate/add\",\r\n      data: {\r\n        room_id,\r\n        username,\r\n        password,\r\n        station_id,\r\n        station_name,\r\n      },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(addActivateSuccess(res.result.activate));\r\n\r\n      //refesh data\r\n      yield put(getRoomStructure(user, room_id));\r\n\r\n      yield put(getAreaData(user, room_id));\r\n      yield put(getCurrentData(user, room_id));\r\n      yield put(getSensorData(user, room_id));\r\n      yield put(getCubeData(user, room_id));\r\n    } else {\r\n      yield put(addActivateFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(addActivateFailed(error));\r\n  }\r\n}\r\n\r\nfunction* deleteActivateApi({ payload: { user, room_id, activate_id } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate\",\r\n      data: { room_id, activate_id },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(deleteActivateSuccess(activate_id));\r\n\r\n      //refesh data\r\n      yield put(getRoomStructure(user, room_id));\r\n\r\n      yield put(getAreaData(user, room_id));\r\n      yield put(getCurrentData(user, room_id));\r\n      yield put(getSensorData(user, room_id));\r\n      yield put(getCubeData(user, room_id));\r\n    } else {\r\n      yield put(deleteActivateFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteActivateFailed(error));\r\n  }\r\n}\r\n\r\nfunction* watchGetActivates() {\r\n  yield takeEvery(GET_ACTIVATES, getActivatesApi);\r\n}\r\n\r\nfunction* watchGetStations() {\r\n  yield takeEvery(GET_STATIONS, getStationsApi);\r\n}\r\n\r\nfunction* watchAddActivate() {\r\n  yield takeEvery(ADD_ACTIVATE, addActivateApi);\r\n}\r\n\r\nfunction* watchDeleteActivate() {\r\n  yield takeEvery(DELETE_ACTIVATE, deleteActivateApi);\r\n}\r\n\r\nfunction* roomActivateSaga() {\r\n  yield all([\r\n    fork(watchGetActivates),\r\n    fork(watchGetStations),\r\n    fork(watchAddActivate),\r\n    fork(watchDeleteActivate),\r\n  ]);\r\n}\r\n\r\nexport default roomActivateSaga;\r\n"]},"metadata":{},"sourceType":"module"}