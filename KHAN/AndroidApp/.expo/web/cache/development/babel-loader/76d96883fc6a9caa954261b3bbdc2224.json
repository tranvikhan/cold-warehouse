{"ast":null,"code":"import { GET_CURR_ROOM_SENSOR_MAP, GET_CURR_ROOM_SENSOR_MAP_SUCCESS, GET_CURR_ROOM_SENSOR_MAP_FAILED, ADD_SENSOR, ADD_SENSOR_SUCCESS, ADD_SENSOR_FAILED, UPDATE_SENSOR, UPDATE_SENSOR_SUCCESS, UPDATE_SENSOR_FAILED, DELETE_SENSOR, DELETE_SENSOR_SUCCESS, DELETE_SENSOR_FAILED } from \"./constants\";\nexport var getRoomStructure = function getRoomStructure(user, room_id) {\n  return {\n    type: GET_CURR_ROOM_SENSOR_MAP,\n    payload: {\n      user: user,\n      room_id: room_id\n    }\n  };\n};\nexport var getRoomStructureSuccess = function getRoomStructureSuccess(data) {\n  return {\n    type: GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var getRoomStructureFailed = function getRoomStructureFailed(error) {\n  return {\n    type: GET_CURR_ROOM_SENSOR_MAP_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var addSensor = function addSensor(user, room_id, sensor_id, location) {\n  return {\n    type: ADD_SENSOR,\n    payload: {\n      user: user,\n      room_id: room_id,\n      sensor_id: sensor_id,\n      location: location\n    }\n  };\n};\nexport var addSensorSuccess = function addSensorSuccess(data) {\n  return {\n    type: ADD_SENSOR_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var addSensorFailed = function addSensorFailed(error) {\n  return {\n    type: ADD_SENSOR_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var deleteSensor = function deleteSensor(user, room_id, sensor_id) {\n  return {\n    type: DELETE_SENSOR,\n    payload: {\n      user: user,\n      room_id: room_id,\n      sensor_id: sensor_id\n    }\n  };\n};\nexport var deleteSensorSuccess = function deleteSensorSuccess(data) {\n  return {\n    type: DELETE_SENSOR_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var deleteSensorFailed = function deleteSensorFailed(error) {\n  return {\n    type: DELETE_SENSOR_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var updateSensor = function updateSensor(user, room_id, sensor_id, location) {\n  return {\n    type: UPDATE_SENSOR,\n    payload: {\n      user: user,\n      room_id: room_id,\n      sensor_id: sensor_id,\n      location: location\n    }\n  };\n};\nexport var updateSensorSuccess = function updateSensorSuccess(data) {\n  return {\n    type: UPDATE_SENSOR_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var updateSensorFailed = function updateSensorFailed(error) {\n  return {\n    type: UPDATE_SENSOR_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomStructrure/actions.js"],"names":["GET_CURR_ROOM_SENSOR_MAP","GET_CURR_ROOM_SENSOR_MAP_SUCCESS","GET_CURR_ROOM_SENSOR_MAP_FAILED","ADD_SENSOR","ADD_SENSOR_SUCCESS","ADD_SENSOR_FAILED","UPDATE_SENSOR","UPDATE_SENSOR_SUCCESS","UPDATE_SENSOR_FAILED","DELETE_SENSOR","DELETE_SENSOR_SUCCESS","DELETE_SENSOR_FAILED","getRoomStructure","user","room_id","type","payload","getRoomStructureSuccess","data","getRoomStructureFailed","error","addSensor","sensor_id","location","addSensorSuccess","addSensorFailed","deleteSensor","deleteSensorSuccess","deleteSensorFailed","updateSensor","updateSensorSuccess","updateSensorFailed"],"mappings":"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","sourcesContent":["import {\r\n  GET_CURR_ROOM_SENSOR_MAP,\r\n  GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n  GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n  ADD_SENSOR,\r\n  ADD_SENSOR_SUCCESS,\r\n  ADD_SENSOR_FAILED,\r\n  UPDATE_SENSOR,\r\n  UPDATE_SENSOR_SUCCESS,\r\n  UPDATE_SENSOR_FAILED,\r\n  DELETE_SENSOR,\r\n  DELETE_SENSOR_SUCCESS,\r\n  DELETE_SENSOR_FAILED,\r\n} from \"./constants\";\r\n\r\nexport const getRoomStructure = (user, room_id) => ({\r\n  type: GET_CURR_ROOM_SENSOR_MAP,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n  },\r\n});\r\nexport const getRoomStructureSuccess = (data) => ({\r\n  type: GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n  payload: { data },\r\n});\r\n\r\nexport const getRoomStructureFailed = (error) => ({\r\n  type: GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const addSensor = (user, room_id, sensor_id, location) => ({\r\n  type: ADD_SENSOR,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    sensor_id,\r\n    location,\r\n  },\r\n});\r\nexport const addSensorSuccess = (data) => ({\r\n  type: ADD_SENSOR_SUCCESS,\r\n  payload: { data },\r\n});\r\n\r\nexport const addSensorFailed = (error) => ({\r\n  type: ADD_SENSOR_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteSensor = (user, room_id, sensor_id) => ({\r\n  type: DELETE_SENSOR,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    sensor_id,\r\n  },\r\n});\r\nexport const deleteSensorSuccess = (data) => ({\r\n  type: DELETE_SENSOR_SUCCESS,\r\n  payload: { data },\r\n});\r\n\r\nexport const deleteSensorFailed = (error) => ({\r\n  type: DELETE_SENSOR_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const updateSensor = (user, room_id, sensor_id, location) => ({\r\n  type: UPDATE_SENSOR,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    sensor_id,\r\n    location,\r\n  },\r\n});\r\nexport const updateSensorSuccess = (data) => ({\r\n  type: UPDATE_SENSOR_SUCCESS,\r\n  payload: { data },\r\n});\r\n\r\nexport const updateSensorFailed = (error) => ({\r\n  type: UPDATE_SENSOR_FAILED,\r\n  payload: { error },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}