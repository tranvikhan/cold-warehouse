{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\GIT HUB\\\\NCKH2020\\\\KHAN\\\\AndroidApp\\\\src\\\\screens\\\\auth\\\\signIn.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Icon, Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { loginUser } from \"../../redux/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport MyAlert from \"../../components/alert.component\";\n\nvar LoadingIndicator = function LoadingIndicator(props) {\n  if (props.isLoading) return React.createElement(View, {\n    style: [props.style, styles.indicator],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Spinner, {\n    size: \"small\",\n    status: \"basic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n  return React.createElement(React.Fragment, null);\n};\n\nvar SignIn = function SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"vikhan\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    usernameColor: \"basic\",\n    passwordColor: \"basic\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      check = _React$useState4[0],\n      setCheck = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"123456\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      visible = _React$useState8[0],\n      _setVisible = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      secureTextEntry = _React$useState10[0],\n      setSecureTextEntry = _React$useState10[1];\n\n  var state = useSelector(function (state) {\n    return state.Auth;\n  });\n  var dispatch = useDispatch();\n\n  var submitLogin = function submitLogin() {\n    setCheck({\n      usernameColor: username === \"\" ? \"danger\" : \"basic\",\n      passwordColor: password === \"\" ? \"danger\" : \"basic\"\n    });\n    if (username != \"\" && password != \"\") dispatch(loginUser(username, password));\n  };\n\n  var toggleSecureEntry = function toggleSecureEntry() {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  React.useEffect(function () {\n    _setVisible(state.error && !state.loading);\n  }, [state.loading]);\n\n  var renderIcon = function renderIcon(props) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: toggleSecureEntry,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, React.createElement(Icon, _extends({}, props, {\n      name: secureTextEntry ? 'eye-off' : 'eye',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  return React.createElement(Layout, {\n    style: styles.container,\n    level: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(MyAlert, {\n    status: \"danger\",\n    title: \"L\\u1ED7i\",\n    text: state.error,\n    visible: visible,\n    setVisible: function setVisible(value) {\n      return _setVisible(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/images/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    category: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"QU\\u1EA2N L\\xDD NHI\\u1EC6T \\u0110\\u1ED8 KHO L\\u1EA0NH\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    size: \"large\",\n    selectionColor: \"#3C4ED5\",\n    placeholder: \"Nh\\u1EADp t\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    value: username,\n    status: check.usernameColor,\n    onChangeText: function onChangeText(nextValue) {\n      return setUsername(nextValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.inputView), {}, {\n      marginBottom: 10\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    size: \"large\",\n    selectionColor: \"#3C4ED5\",\n    value: password,\n    placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u\",\n    accessoryRight: renderIcon,\n    secureTextEntry: secureTextEntry,\n    status: check.passwordColor,\n    onChangeText: function onChangeText(nextValue) {\n      return setPassword(nextValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    appearance: \"ghost\",\n    style: styles.forgot,\n    status: \"basic\",\n    onPress: function onPress() {\n      navigation.navigate('ForgotPassword');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Qu\\xEAn m\\u1EADt kh\\u1EA9u ?\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    size: \"large\",\n    status: \"primary\",\n    onPress: submitLogin,\n    accessoryLeft: function accessoryLeft() {\n      return React.createElement(LoadingIndicator, {\n        isLoading: state.loading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 90\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"\\u0110\\u0102NG NH\\u1EACP\")), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    size: \"large\",\n    appearance: \"outline\",\n    status: \"basic\",\n    onPress: function onPress() {\n      navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"\\u0110\\u0102NG K\\xCD\"))));\n};\n\nexport default SignIn;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logo: {\n    marginTop: 40,\n    height: 90,\n    resizeMode: \"contain\",\n    marginBottom: 40\n  },\n  inputView: {\n    marginBottom: 25,\n    width: \"85%\"\n  },\n  indicator: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    marginBottom: 40,\n    textAlign: \"center\",\n    width: \"85%\"\n  },\n  forgot: {\n    marginBottom: 25\n  }\n});","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/screens/auth/signIn.component.js"],"names":["React","Button","Icon","Input","Layout","Spinner","Text","loginUser","useSelector","useDispatch","MyAlert","LoadingIndicator","props","isLoading","style","styles","indicator","SignIn","navigation","useState","username","setUsername","usernameColor","passwordColor","check","setCheck","password","setPassword","visible","setVisible","secureTextEntry","setSecureTextEntry","state","Auth","dispatch","submitLogin","toggleSecureEntry","useEffect","error","loading","renderIcon","container","value","scrollView","logo","require","text","inputView","nextValue","marginBottom","forgot","navigate","StyleSheet","create","flex","width","justifyContent","alignItems","marginTop","height","resizeMode","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Image, ScrollView, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { Button,  Icon, Input, Layout, Spinner, Text } from '@ui-kitten/components';\r\nimport { loginUser } from '../../redux/actions';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport MyAlert from '../../components/alert.component';\r\n\r\n\r\nconst LoadingIndicator = (props) => {\r\n  if(props.isLoading)\r\n  return (\r\n    <View style={[props.style, styles.indicator]}>\r\n    <Spinner size='small' status='basic'/>\r\n    </View>);\r\n    return <></>;\r\n};\r\n\r\n\r\n\r\nconst SignIn = ({ navigation}) => {\r\n  const [username,setUsername] = React.useState(\"vikhan\");\r\n  const [check,setCheck] = React.useState({\r\n    usernameColor:\"basic\",\r\n    passwordColor:\"basic\",\r\n  });\r\n\r\n  const [password,setPassword] = React.useState(\"123456\");\r\n  const [visible,setVisible] = React.useState(false);\r\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\r\n  const state = useSelector(state => state.Auth);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  const submitLogin = ()=>{\r\n    setCheck({\r\n        usernameColor: username ===\"\" ?\"danger\":\"basic\",\r\n        passwordColor: password ===\"\" ?\"danger\":\"basic\",\r\n      }\r\n    );\r\n    if(username !=\"\" && password !=\"\") dispatch(loginUser(username,password));\r\n  }\r\n\r\n  const toggleSecureEntry = () => {\r\n    setSecureTextEntry(!secureTextEntry);\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    setVisible(state.error && !state.loading)\r\n  },[state.loading])\r\n \r\n  const renderIcon = (props) => (\r\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\r\n      <Icon {...props} name={secureTextEntry ? 'eye-off' : 'eye'}/>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n\r\n  \r\n\r\n\r\n  return (\r\n      <Layout style={styles.container} level='1'>\r\n        <MyAlert status=\"danger\" title=\"Lỗi\" text={state.error} visible={visible} setVisible={(value)=>setVisible(value) } ></MyAlert>\r\n        <ScrollView showsHorizontalScrollIndicator={false}  contentContainerStyle={styles.scrollView}>\r\n        <Image style={styles.logo} source={require('../../assets/images/logo.png') }/>\r\n        <Text style={styles.text} category='h5'>\r\n         QUẢN LÝ NHIỆT ĐỘ KHO LẠNH\r\n        </Text>\r\n        <View style={styles.inputView}>\r\n          <Input\r\n            size='large'\r\n            selectionColor=\"#3C4ED5\"\r\n            placeholder='Nhập tên đăng nhập'\r\n            value={username}\r\n            status={check.usernameColor}\r\n            onChangeText={nextValue => setUsername(nextValue)}\r\n          />\r\n        </View>\r\n        <View style={{...styles.inputView,marginBottom:10}}>\r\n        <Input\r\n          size='large'\r\n          selectionColor=\"#3C4ED5\"\r\n          value={password}\r\n          placeholder='Nhập mật khẩu'\r\n          accessoryRight={renderIcon}\r\n          secureTextEntry={secureTextEntry}\r\n          status={check.passwordColor}\r\n          onChangeText={nextValue => setPassword(nextValue)}\r\n        />\r\n        </View>\r\n        <Button appearance='ghost' style={styles.forgot} status='basic' onPress={()=>{navigation.navigate('ForgotPassword');}}>\r\n          Quên mật khẩu ?\r\n        </Button>\r\n        <View style={styles.inputView}>\r\n          <Button size='large' status='primary' onPress={submitLogin} accessoryLeft={()=><LoadingIndicator isLoading ={state.loading}/>}>\r\n            ĐĂNG NHẬP\r\n          </Button>\r\n          \r\n        </View>\r\n        <View style={styles.inputView}>\r\n          <Button size='large' appearance='outline' status='basic' onPress={()=>{navigation.navigate('SignUp');}}>\r\n            ĐĂNG KÍ\r\n          </Button>\r\n          \r\n        </View>\r\n        </ScrollView>\r\n      </Layout>\r\n  );\r\n};\r\n\r\n\r\nexport default SignIn;\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  scrollView:{\r\n    width:'100%',\r\n    justifyContent: 'center', \r\n    alignItems: 'center',\r\n  },\r\n  logo:{\r\n    marginTop:40,\r\n    height:90,\r\n    resizeMode: \"contain\",\r\n    marginBottom:40\r\n  },\r\n  inputView:{\r\n    marginBottom:25,\r\n    width: \"85%\",\r\n  },\r\n  indicator:{\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text:{\r\n    marginBottom:40,\r\n    textAlign:\"center\",\r\n    width: \"85%\",\r\n  },\r\n  forgot:{\r\n    marginBottom:25\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}