{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GIT HUB\\\\NCKH2020\\\\KHAN\\\\AndroidApp\\\\src\\\\screens\\\\user\\\\user.component.js\";\nimport { Avatar, Icon, Layout, ListItem, Text, Toggle, useTheme } from \"@ui-kitten/components\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions\";\nimport { toggleTheme } from \"../../redux/actions\";\nexport default function User() {\n  var _this = this;\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkNotification = _React$useState2[0],\n      setCheckNotification = _React$useState2[1];\n\n  var state = useSelector(function (state) {\n    return state.Auth;\n  });\n  var themeColor = useSelector(function (state) {\n    return state.Layout.theme;\n  });\n  var dispatch = useDispatch();\n\n  var getTheme = function getTheme() {\n    return themeColor == \"dark\";\n  };\n\n  var _React$useState3 = React.useState(getTheme),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checkDarkMode = _React$useState4[0],\n      setCheckDarkMode = _React$useState4[1];\n\n  var toggleThemeColor = function toggleThemeColor(isDark) {\n    dispatch(toggleTheme(isDark ? \"dark\" : \"light\"));\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    listItem: {\n      margin: 5,\n      borderRadius: 10,\n      minHeight: 55\n    },\n    category: {\n      marginTop: 10,\n      marginLeft: 8\n    },\n    userAvatar: {\n      margin: 15\n    },\n    onPress: {\n      backgroundColor: \"red\"\n    }\n  });\n  return React.createElement(Layout, {\n    style: styles.container,\n    level: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    disabled: true,\n    style: styles.listItem,\n    title: state.user.user.fullname,\n    description: state.user.user.email,\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Avatar, {\n        size: \"giant\",\n        source: {\n          uri: state.user.user.avatar\n        },\n        style: styles.userAvatar,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.category,\n    category: \"p2\",\n    appearance: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"T\\xE0i kho\\u1EA3n\"), React.createElement(ListItem, {\n    onPress: function onPress() {\n      Alert.alert(String(state.user.user));\n    },\n    style: styles.listItem,\n    title: \"Th\\xF4ng tin\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"info-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(ListItem, {\n    style: styles.listItem,\n    title: \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"unlock-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(ListItem, {\n    onPress: function onPress() {\n      dispatch(logoutUser());\n    },\n    style: styles.listItem,\n    title: \"\\u0110\\u0103ng xu\\u1EA5t\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"log-out-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.category,\n    category: \"p2\",\n    appearance: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Giao di\\u1EC7n\"), React.createElement(ListItem, {\n    style: styles.listItem,\n    title: \"Ch\\u1EBF \\u0111\\u1ED9 t\\u1ED1i\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"globe-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      }));\n    },\n    accessoryRight: function accessoryRight(props) {\n      return React.createElement(Toggle, {\n        checked: checkDarkMode,\n        onChange: function onChange() {\n          setCheckDarkMode(!checkDarkMode);\n          toggleThemeColor(!checkDarkMode);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.category,\n    category: \"p2\",\n    appearance: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Th\\xF4ng b\\xE1o\"), React.createElement(ListItem, {\n    style: styles.listItem,\n    title: \"Th\\xF4ng b\\xE1o\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"moon-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      }));\n    },\n    accessoryRight: function accessoryRight(props) {\n      return React.createElement(Toggle, {\n        checked: checkNotification,\n        onChange: function onChange() {\n          setCheckNotification(!checkNotification);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/screens/user/user.component.js"],"names":["Avatar","Icon","Layout","ListItem","Text","Toggle","useTheme","React","useSelector","useDispatch","logoutUser","toggleTheme","User","theme","useState","checkNotification","setCheckNotification","state","Auth","themeColor","dispatch","getTheme","checkDarkMode","setCheckDarkMode","toggleThemeColor","isDark","styles","StyleSheet","create","container","flex","listItem","margin","borderRadius","minHeight","category","marginTop","marginLeft","userAvatar","onPress","backgroundColor","user","fullname","email","props","uri","avatar","Alert","alert","String"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,QAPF,QAQO,uBARP;;;;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT;AACA,SAASC,WAAT;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,MAAMC,KAAK,GAAGP,QAAQ,EAAtB;;AAD6B,wBAEqBC,KAAK,CAACO,QAAN,CAAe,IAAf,CAFrB;AAAA;AAAA,MAEtBC,iBAFsB;AAAA,MAEHC,oBAFG;;AAG7B,MAAMC,KAAK,GAAGT,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAzB;AACA,MAAMC,UAAU,GAAGX,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACf,MAAN,CAAaW,KAAxB;AAAA,GAAD,CAA9B;AACA,MAAMO,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,MAAMY,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,WAAOF,UAAU,IAAI,MAArB;AACD,GAFD;;AAP6B,yBAUaZ,KAAK,CAACO,QAAN,CAAeO,QAAf,CAVb;AAAA;AAAA,MAUtBC,aAVsB;AAAA,MAUPC,gBAVO;;AAW7B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACnCL,IAAAA,QAAQ,CAACT,WAAW,CAACc,MAAM,GAAG,MAAH,GAAY,OAAnB,CAAZ,CAAR;AACD,GAFD;;AAIA,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG,KADoB;AAI/BC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,CADA;AAERC,MAAAA,YAAY,EAAE,EAFN;AAGRC,MAAAA,SAAS,EAAE;AAHH,KAJqB;AAS/BC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,EADH;AAERC,MAAAA,UAAU,EAAE;AAFJ,KATqB;AAa/BC,IAAAA,UAAU,EAAE;AACVN,MAAAA,MAAM,EAAE;AADE,KAbmB;AAgB/BO,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAE;AADV;AAhBsB,GAAlB,CAAf;AAqBA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEd,MAAM,CAACG,SAAtB;AAAiC,IAAA,KAAK,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,8BAA8B,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACK,QAFhB;AAGE,IAAA,KAAK,EAAEd,KAAK,CAACwB,IAAN,CAAWA,IAAX,CAAgBC,QAHzB;AAIE,IAAA,WAAW,EAAEzB,KAAK,CAACwB,IAAN,CAAWA,IAAX,CAAgBE,KAJ/B;AAKE,IAAA,aAAa,EAAE,uBAACC,KAAD;AAAA,aACb,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE5B,KAAK,CAACwB,IAAN,CAAWA,IAAX,CAAgBK;AAAvB,SAFV;AAGE,QAAA,KAAK,EAAEpB,MAAM,CAACY,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa;AAAA,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACS,QAApB;AAA8B,IAAA,QAAQ,EAAC,IAAvC;AAA4C,IAAA,UAAU,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAdF,EAiBE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbY,MAAAA,KAAK,CAACC,KAAN,CAAYC,MAAM,CAAChC,KAAK,CAACwB,IAAN,CAAWA,IAAZ,CAAlB;AACD,KAHH;AAIE,IAAA,KAAK,EAAEf,MAAM,CAACK,QAJhB;AAKE,IAAA,KAAK,EAAC,cALR;AAME,IAAA,aAAa,EAAE,uBAACa,KAAD;AAAA,aAAW,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAyBE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAElB,MAAM,CAACK,QADhB;AAEE,IAAA,KAAK,EAAC,kCAFR;AAGE,IAAA,aAAa,EAAE,uBAACa,KAAD;AAAA,aAAW,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SAAgCA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA8BE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbxB,MAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACD,KAHH;AAIE,IAAA,KAAK,EAAEgB,MAAM,CAACK,QAJhB;AAKE,IAAA,KAAK,EAAC,0BALR;AAME,IAAA,aAAa,EAAE,uBAACa,KAAD;AAAA,aAAW,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SAAiCA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EAsCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACS,QAApB;AAA8B,IAAA,QAAQ,EAAC,IAAvC;AAA4C,IAAA,UAAU,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtCF,EAyCE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACK,QADhB;AAEE,IAAA,KAAK,EAAC,gCAFR;AAGE,IAAA,aAAa,EAAE,uBAACa,KAAD;AAAA,aAAW,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SAA+BA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KAHjB;AAIE,IAAA,cAAc,EAAE,wBAACA,KAAD;AAAA,aACd,oBAAC,MAAD;AACE,QAAA,OAAO,EAAEtB,aADX;AAEE,QAAA,QAAQ,EAAE,oBAAM;AACdC,UAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAE,UAAAA,gBAAgB,CAAC,CAACF,aAAF,CAAhB;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,EAuDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACS,QAApB;AAA8B,IAAA,QAAQ,EAAC,IAAvC;AAA4C,IAAA,UAAU,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvDF,EA0DE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACK,QADhB;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,aAAa,EAAE,uBAACa,KAAD;AAAA,aAAW,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KAHjB;AAIE,IAAA,cAAc,EAAE,wBAACA,KAAD;AAAA,aACd,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE7B,iBADX;AAEE,QAAA,QAAQ,EAAE,oBAAM;AACdC,UAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DF,CADF,CADF;AA4ED","sourcesContent":["import {\r\n  Avatar,\r\n  Icon,\r\n  Layout,\r\n  ListItem,\r\n  Text,\r\n  Toggle,\r\n  useTheme,\r\n} from \"@ui-kitten/components\";\r\nimport { StyleSheet, ScrollView, Alert } from \"react-native\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions\";\r\nimport { toggleTheme } from \"../../redux/actions\";\r\n\r\nexport default function User() {\r\n  const theme = useTheme();\r\n  const [checkNotification, setCheckNotification] = React.useState(true);\r\n  const state = useSelector((state) => state.Auth);\r\n  const themeColor = useSelector((state) => state.Layout.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const getTheme = () => {\r\n    return themeColor == \"dark\";\r\n  };\r\n  const [checkDarkMode, setCheckDarkMode] = React.useState(getTheme);\r\n  const toggleThemeColor = (isDark) => {\r\n    dispatch(toggleTheme(isDark ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    listItem: {\r\n      margin: 5,\r\n      borderRadius: 10,\r\n      minHeight: 55,\r\n    },\r\n    category: {\r\n      marginTop: 10,\r\n      marginLeft: 8,\r\n    },\r\n    userAvatar: {\r\n      margin: 15,\r\n    },\r\n    onPress: {\r\n      backgroundColor: \"red\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Layout style={styles.container} level=\"2\">\r\n      <ScrollView showsHorizontalScrollIndicator={false}>\r\n        <ListItem\r\n          disabled\r\n          style={styles.listItem}\r\n          title={state.user.user.fullname}\r\n          description={state.user.user.email}\r\n          accessoryLeft={(props) => (\r\n            <Avatar\r\n              size=\"giant\"\r\n              source={{ uri: state.user.user.avatar }}\r\n              style={styles.userAvatar}\r\n            ></Avatar>\r\n          )}\r\n        />\r\n        <Text style={styles.category} category=\"p2\" appearance=\"hint\">\r\n          Tài khoản\r\n        </Text>\r\n        <ListItem\r\n          onPress={() => {\r\n            Alert.alert(String(state.user.user));\r\n          }}\r\n          style={styles.listItem}\r\n          title=\"Thông tin\"\r\n          accessoryLeft={(props) => <Icon name=\"info-outline\" {...props} />}\r\n        />\r\n        <ListItem\r\n          style={styles.listItem}\r\n          title=\"Đổi mật khẩu\"\r\n          accessoryLeft={(props) => <Icon name=\"unlock-outline\" {...props} />}\r\n        />\r\n        <ListItem\r\n          onPress={() => {\r\n            dispatch(logoutUser());\r\n          }}\r\n          style={styles.listItem}\r\n          title=\"Đăng xuất\"\r\n          accessoryLeft={(props) => <Icon name=\"log-out-outline\" {...props} />}\r\n        />\r\n        <Text style={styles.category} category=\"p2\" appearance=\"hint\">\r\n          Giao diện\r\n        </Text>\r\n        <ListItem\r\n          style={styles.listItem}\r\n          title=\"Chế độ tối\"\r\n          accessoryLeft={(props) => <Icon name=\"globe-outline\" {...props} />}\r\n          accessoryRight={(props) => (\r\n            <Toggle\r\n              checked={checkDarkMode}\r\n              onChange={() => {\r\n                setCheckDarkMode(!checkDarkMode);\r\n                toggleThemeColor(!checkDarkMode);\r\n              }}\r\n            ></Toggle>\r\n          )}\r\n        />\r\n        <Text style={styles.category} category=\"p2\" appearance=\"hint\">\r\n          Thông báo\r\n        </Text>\r\n        <ListItem\r\n          style={styles.listItem}\r\n          title=\"Thông báo\"\r\n          accessoryLeft={(props) => <Icon name=\"moon-outline\" {...props} />}\r\n          accessoryRight={(props) => (\r\n            <Toggle\r\n              checked={checkNotification}\r\n              onChange={() => {\r\n                setCheckNotification(!checkNotification);\r\n              }}\r\n            ></Toggle>\r\n          )}\r\n        />\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}