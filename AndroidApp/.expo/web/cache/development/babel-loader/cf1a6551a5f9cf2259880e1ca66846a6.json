{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\src\\\\components\\\\areaRoom.component.js\",\n    _this = this;\n\nimport React, { useEffect } from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Icon, Text, useTheme } from '@ui-kitten/components';\nexport default function AreaRoom(props) {\n  var theme = useTheme();\n  var styles = StyleSheet.create({\n    areaRoomView: {\n      flex: 1,\n      backgroundColor: theme['background-basic-color-4'],\n      paddingHorizontal: 20,\n      paddingVertical: 20,\n      borderRadius: 15,\n      marginHorizontal: 5,\n      alignItems: 'center',\n      minWidth: 150\n    },\n    areaRoomFocus: {\n      backgroundColor: theme['color-primary-active']\n    },\n    title: {},\n    icon: {\n      width: 40,\n      height: 40\n    },\n    horizontalContent: {\n      flexDirection: 'row',\n      marginTop: 15\n    },\n    temperature: {}\n  });\n  var getTheme = props.focus == true ? [styles.areaRoomView, styles.areaRoomFocus] : styles.areaRoomView;\n\n  var onPressView = function onPressView() {\n    props.onPressView(props.data.id);\n  };\n\n  return React.createElement(Pressable, {\n    onPress: onPressView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: getTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    category: \"s1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, props.data.title), React.createElement(View, {\n    style: styles.horizontalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(MyIcon, {\n    type: props.data.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.temperature,\n    category: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, props.data.temperature + '°C'))));\n}\n\nvar MyIcon = function MyIcon(props) {\n  var theme = useTheme();\n  var styles = StyleSheet.create({\n    icon: {\n      width: 25,\n      height: 25\n    }\n  });\n\n  var _React$useState = React.useState('thermometer-outline'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(theme['text-success-color']),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      color = _React$useState4[0],\n      setColor = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (props.type == 'increase') {\n      setName('thermometer-plus-outline');\n      setColor(theme['text-danger-color']);\n    }\n\n    if (props.type == 'decrease') {\n      setName('thermometer-minus-outline');\n      setColor(theme['text-warning-color']);\n    }\n\n    if (props.type == 'stability') {\n      setName('thermometer-outline');\n      setColor(theme['text-success-color']);\n    }\n  }, [props.type]);\n  return React.createElement(Icon, {\n    name: name,\n    style: styles.icon,\n    fill: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["D:/ReactNative/myapp/src/components/areaRoom.component.js"],"names":["React","useEffect","Icon","Text","useTheme","AreaRoom","props","theme","styles","StyleSheet","create","areaRoomView","flex","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginHorizontal","alignItems","minWidth","areaRoomFocus","title","icon","width","height","horizontalContent","flexDirection","marginTop","temperature","getTheme","focus","onPressView","data","id","status","MyIcon","useState","name","setName","color","setColor","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport {Pressable, StyleSheet, View,Alert} from 'react-native'\r\nimport {Icon, Text, useTheme} from '@ui-kitten/components'\r\n\r\nexport default function AreaRoom(props) {\r\n    const theme = useTheme();\r\n    const styles = StyleSheet.create({\r\n        areaRoomView:{\r\n            flex:1,\r\n            backgroundColor: theme['background-basic-color-4'],\r\n            paddingHorizontal:20,\r\n            paddingVertical:20,\r\n            borderRadius:15,\r\n            marginHorizontal:5,\r\n            alignItems: 'center',\r\n            minWidth:150\r\n        },\r\n        areaRoomFocus:{\r\n            backgroundColor:theme['color-primary-active']\r\n        },\r\n        title:{\r\n            \r\n        },\r\n        icon:{\r\n             width: 40, \r\n             height: 40,\r\n        },\r\n        horizontalContent:{\r\n          flexDirection: 'row',\r\n          marginTop:15\r\n        },\r\n        temperature:{\r\n        }\r\n    })\r\n    const getTheme = (props.focus==true)?[styles.areaRoomView,styles.areaRoomFocus] :styles.areaRoomView \r\n    const onPressView = () =>{\r\n        props.onPressView(props.data.id);\r\n    }\r\n\r\n    return (\r\n        <Pressable onPress={onPressView}>\r\n            <View \r\n            style={getTheme}>\r\n            <Text style={styles.title} category='s1'>{props.data.title}</Text>\r\n            <View style={styles.horizontalContent}>\r\n                <MyIcon type={props.data.status} />\r\n                <Text style={styles.temperature} category='h6'>{props.data.temperature +'°C'}</Text>\r\n            </View>\r\n            \r\n        </View>\r\n        </Pressable>\r\n        \r\n    )\r\n}\r\n\r\nconst MyIcon = (props) =>{\r\n    const theme = useTheme();\r\n    const styles = StyleSheet.create({\r\n        icon:{\r\n             width: 25, \r\n             height: 25,\r\n        }\r\n    })\r\n    const [name,setName] = React.useState('thermometer-outline');\r\n    const [color,setColor] = React.useState(theme['text-success-color']);\r\n    React.useEffect(() => {\r\n        if(props.type =='increase'){\r\n            setName('thermometer-plus-outline');\r\n            setColor(theme['text-danger-color']);\r\n        }\r\n        if(props.type == 'decrease'){\r\n            setName('thermometer-minus-outline');\r\n            setColor(theme['text-warning-color']);\r\n        }\r\n        if(props.type == 'stability'){\r\n            setName('thermometer-outline');\r\n            setColor(theme['text-success-color']);\r\n        }\r\n    },[props.type]) \r\n\r\n    return(\r\n        <Icon  name={name} style={styles.icon} fill={color}/>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}