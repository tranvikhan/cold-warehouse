{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\node_modules\\\\expo-graphics\\\\lib\\\\GLView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { GLView as EXGLView } from 'expo-gl';\nimport invariant from 'invariant';\nimport React from 'react';\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\n\nvar GLView = function (_React$Component) {\n  _inherits(GLView, _React$Component);\n\n  var _super = _createSuper(GLView);\n\n  function GLView() {\n    _classCallCheck(this, GLView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GLView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _onContextCreate = _this$props.onContextCreate,\n          props = _objectWithoutProperties(_this$props, [\"onContextCreate\"]);\n\n      return React.createElement(EXGLView, _extends({}, props, {\n        onContextCreate: function onContextCreate(gl) {\n          var scale = PixelRatio.get();\n          invariant(_onContextCreate, 'ExpoGraphics.GLView: prop `onContextCreate` must be defined.');\n\n          _onContextCreate({\n            gl: gl,\n            width: gl.drawingBufferWidth / scale,\n            height: gl.drawingBufferHeight / scale,\n            scale: scale,\n            pixelRatio: scale,\n            canvas: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return GLView;\n}(React.Component);\n\nexport { GLView as default };","map":{"version":3,"sources":["D:/ReactNative/myapp/node_modules/expo-graphics/lib/GLView.js"],"names":["GLView","EXGLView","invariant","React","props","onContextCreate","gl","scale","PixelRatio","get","width","drawingBufferWidth","height","drawingBufferHeight","pixelRatio","canvas","Component"],"mappings":";;;;;;;;;;;;;AACA,SAASA,MAAM,IAAIC,QAAnB,QAAmC,SAAnC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;IAIqBH,M;;;;;;;;;;;;;6BACV;AAAA,wBAC+B,KAAKI,KADpC;AAAA,UACCC,gBADD,eACCA,eADD;AAAA,UACqBD,KADrB;;AAEP,aACE,oBAAC,QAAD,eACMA,KADN;AAEE,QAAA,eAAe,EAAE,yBAAAE,EAAE,EAAI;AACrB,cAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,EAAd;AAEAP,UAAAA,SAAS,CACPG,gBADO,EAEP,8DAFO,CAAT;;AAKAA,UAAAA,gBAAe,CAAC;AACdC,YAAAA,EAAE,EAAFA,EADc;AAEdI,YAAAA,KAAK,EAAEJ,EAAE,CAACK,kBAAH,GAAwBJ,KAFjB;AAGdK,YAAAA,MAAM,EAAEN,EAAE,CAACO,mBAAH,GAAyBN,KAHnB;AAIdA,YAAAA,KAAK,EAALA,KAJc;AAKdO,YAAAA,UAAU,EAAEP,KALE;AAMdQ,YAAAA,MAAM,EAAE;AANM,WAAD,CAAf;AAQD,SAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAsBD;;;;EAzBiCZ,KAAK,CAACa,S;;SAArBhB,M","sourcesContent":["// @flow\nimport { GLView as EXGLView } from 'expo-gl';\nimport invariant from 'invariant';\nimport React from 'react';\nimport { PixelRatio } from 'react-native';\n\n// import EXGLView from '../__tests__/GLView.mock';\nexport default class GLView extends React.Component {\n  render() {\n    const { onContextCreate, ...props } = this.props;\n    return (\n      <EXGLView\n        {...props}\n        onContextCreate={gl => {\n          const scale = PixelRatio.get();\n\n          invariant(\n            onContextCreate,\n            'ExpoGraphics.GLView: prop `onContextCreate` must be defined.'\n          );\n\n          onContextCreate({\n            gl,\n            width: gl.drawingBufferWidth / scale,\n            height: gl.drawingBufferHeight / scale,\n            scale,\n            pixelRatio: scale,\n            canvas: null,\n          });\n        }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}