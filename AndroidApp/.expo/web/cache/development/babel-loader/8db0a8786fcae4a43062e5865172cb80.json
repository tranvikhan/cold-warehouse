{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getNode } from 'react-native-web-hooks';\nvar STATE = {\n  NONE: -1,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2,\n  TOUCH_ROTATE: 3,\n  TOUCH_PAN: 4,\n  TOUCH_DOLLY_PAN: 5,\n  TOUCH_DOLLY_ROTATE: 6\n};\nvar EPS = 0.000001;\nvar useDOM = false;\nexport var OrbitControls = function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, ref) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    _this.object = object;\n    _this.enabled = true;\n    _this.target = new Vector3();\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity;\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity;\n    _this.minPolarAngle = 0;\n    _this.maxPolarAngle = Math.PI;\n    _this.minAzimuthAngle = -Infinity;\n    _this.maxAzimuthAngle = Infinity;\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05;\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0;\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0;\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = false;\n    _this.keyPanSpeed = 7.0;\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0;\n    _this.enableKeys = true;\n    _this.keys = {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    };\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    };\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n    _this.changeEvent = {\n      type: 'change'\n    };\n    _this.startEvent = {\n      type: 'start'\n    };\n    _this.endEvent = {\n      type: 'end'\n    };\n    _this.state = STATE.NONE;\n    _this.spherical = new Spherical();\n    _this.sphericalDelta = new Spherical();\n    _this.scale = 1;\n    _this.panOffset = new Vector3();\n    _this.zoomChanged = false;\n    _this.rotateStart = new Vector2();\n    _this.rotateEnd = new Vector2();\n    _this.rotateDelta = new Vector2();\n    _this.panStart = new Vector2();\n    _this.panEnd = new Vector2();\n    _this.panDelta = new Vector2();\n    _this.dollyStart = new Vector2();\n    _this.dollyEnd = new Vector2();\n    _this.dollyDelta = new Vector2();\n\n    _this.getPolarAngle = function () {\n      return _this.spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return _this.spherical.theta;\n    };\n\n    _this.saveState = function () {\n      _this.target0.copy(_this.target);\n\n      _this.position0.copy(_this.object.position);\n\n      _this.zoom0 = _this.object.zoom;\n    };\n\n    _this.reset = function () {\n      _this.target.copy(_this.target0);\n\n      _this.object.position.copy(_this.position0);\n\n      _this.object.zoom = _this.zoom0;\n\n      _this.object.updateProjectionMatrix();\n\n      _this.dispatchEvent(_this.changeEvent);\n\n      _this.update();\n\n      _this.state = STATE.NONE;\n    };\n\n    _this.dispose = function () {\n      if (_this.domElement) {\n        _this.domElement.removeEventListener('contextmenu', _this.onContextMenu, false);\n\n        _this.domElement.removeEventListener('mousedown', _this.onMouseDown, false);\n\n        _this.domElement.removeEventListener('wheel', _this.onMouseWheel, false);\n\n        if (useDOM) {\n          _this.domElement.removeEventListener('touchstart', _this.onTouchStart, false);\n\n          _this.domElement.removeEventListener('touchend', _this.onTouchEnd, false);\n\n          _this.domElement.removeEventListener('touchmove', _this.onTouchMove, false);\n\n          if (typeof window !== 'undefined') {\n            window.document.removeEventListener('mousemove', _this.onMouseMove, false);\n            window.document.removeEventListener('mouseup', _this.onMouseUp, false);\n            window.removeEventListener('keydown', _this.onKeyDown, false);\n          }\n        }\n      }\n    };\n\n    _this.getAutoRotationAngle = function () {\n      return 2 * Math.PI / 60 / 60 * _this.autoRotateSpeed;\n    };\n\n    _this.getZoomScale = function () {\n      return Math.pow(0.95, _this.zoomSpeed);\n    };\n\n    _this.rotateLeft = function (angle) {\n      _this.sphericalDelta.theta -= angle;\n    };\n\n    _this.rotateUp = function (angle) {\n      _this.sphericalDelta.phi -= angle;\n    };\n\n    _this.dollyIn = function (dollyScale) {\n      if (_this.object.isPerspectiveCamera) {\n        _this.scale /= dollyScale;\n      } else if (_this.object.isOrthographicCamera) {\n        _this.object.zoom = Math.max(_this.minZoom, Math.min(_this.maxZoom, _this.object.zoom * dollyScale));\n\n        _this.object.updateProjectionMatrix();\n\n        _this.zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        _this.enableZoom = false;\n      }\n    };\n\n    _this.dollyOut = function (dollyScale) {\n      if (_this.object.isPerspectiveCamera) {\n        _this.scale *= dollyScale;\n      } else if (_this.object.isOrthographicCamera) {\n        _this.object.zoom = Math.max(_this.minZoom, Math.min(_this.maxZoom, _this.object.zoom / dollyScale));\n\n        _this.object.updateProjectionMatrix();\n\n        _this.zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        _this.enableZoom = false;\n      }\n    };\n\n    _this.width = 0;\n\n    _this.getElementWidth = function () {\n      return _this.width;\n    };\n\n    _this.height = 0;\n\n    _this.getElementHeight = function () {\n      return _this.height;\n    };\n\n    _this.handleMouseDownRotate = function (_ref) {\n      var clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      _this.rotateStart.set(clientX, clientY);\n    };\n\n    _this.handleMouseDownDolly = function (_ref2) {\n      var clientX = _ref2.clientX,\n          clientY = _ref2.clientY;\n\n      _this.dollyStart.set(clientX, clientY);\n    };\n\n    _this.handleMouseDownPan = function (_ref3) {\n      var clientX = _ref3.clientX,\n          clientY = _ref3.clientY;\n\n      _this.panStart.set(clientX, clientY);\n    };\n\n    _this.handleMouseMoveRotate = function (_ref4) {\n      var clientX = _ref4.clientX,\n          clientY = _ref4.clientY;\n\n      _this.rotateEnd.set(clientX, clientY);\n\n      _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart).multiplyScalar(_this.rotateSpeed);\n\n      _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / _this.getElementHeight());\n\n      _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / _this.getElementHeight());\n\n      _this.rotateStart.copy(_this.rotateEnd);\n\n      _this.update();\n    };\n\n    _this.handleMouseMoveDolly = function (_ref5) {\n      var clientX = _ref5.clientX,\n          clientY = _ref5.clientY;\n\n      _this.dollyEnd.set(clientX, clientY);\n\n      _this.dollyDelta.subVectors(_this.dollyEnd, _this.dollyStart);\n\n      if (_this.dollyDelta.y > 0) {\n        _this.dollyIn(_this.getZoomScale());\n      } else if (_this.dollyDelta.y < 0) {\n        _this.dollyOut(_this.getZoomScale());\n      }\n\n      _this.dollyStart.copy(_this.dollyEnd);\n\n      _this.update();\n    };\n\n    _this.handleMouseMovePan = function (_ref6) {\n      var clientX = _ref6.clientX,\n          clientY = _ref6.clientY;\n\n      _this.panEnd.set(clientX, clientY);\n\n      _this.panDelta.subVectors(_this.panEnd, _this.panStart).multiplyScalar(_this.panSpeed);\n\n      _this.pan(_this.panDelta.x, _this.panDelta.y);\n\n      _this.panStart.copy(_this.panEnd);\n\n      _this.update();\n    };\n\n    _this.handleMouseWheel = function (_ref7) {\n      var deltaY = _ref7.deltaY;\n\n      if (deltaY < 0) {\n        _this.dollyOut(_this.getZoomScale());\n      } else if (deltaY > 0) {\n        _this.dollyIn(_this.getZoomScale());\n      }\n\n      _this.update();\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _a, _b;\n\n      var needsUpdate = false;\n\n      switch (event.keyCode) {\n        case _this.keys.UP:\n          _this.pan(0, _this.keyPanSpeed);\n\n          needsUpdate = true;\n          break;\n\n        case _this.keys.BOTTOM:\n          _this.pan(0, -_this.keyPanSpeed);\n\n          needsUpdate = true;\n          break;\n\n        case _this.keys.LEFT:\n          _this.pan(_this.keyPanSpeed, 0);\n\n          needsUpdate = true;\n          break;\n\n        case _this.keys.RIGHT:\n          _this.pan(-_this.keyPanSpeed, 0);\n\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n        _this.update();\n      }\n    };\n\n    _this.handleTouchStartRotate = function (_ref8) {\n      var touches = _ref8.touches;\n\n      if (touches.length == 1) {\n        _this.rotateStart.set(touches[0].pageX, touches[0].pageY);\n      } else {\n        var x = 0.5 * (touches[0].pageX + touches[1].pageX);\n        var y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n        _this.rotateStart.set(x, y);\n      }\n    };\n\n    _this.handleTouchStartPan = function (_ref9) {\n      var touches = _ref9.touches;\n\n      if (touches.length === 1) {\n        _this.panStart.set(touches[0].pageX, touches[0].pageY);\n      } else {\n        var x = 0.5 * (touches[0].pageX + touches[1].pageX);\n        var y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n        _this.panStart.set(x, y);\n      }\n    };\n\n    _this.handleTouchStartDolly = function (_ref10) {\n      var touches = _ref10.touches;\n      var dx = touches[0].pageX - touches[1].pageX;\n      var dy = touches[0].pageY - touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      _this.dollyStart.set(0, distance);\n    };\n\n    _this.handleTouchStartDollyPan = function (event) {\n      if (_this.enableZoom) _this.handleTouchStartDolly(event);\n      if (_this.enablePan) _this.handleTouchStartPan(event);\n    };\n\n    _this.handleTouchStartDollyRotate = function (event) {\n      if (_this.enableZoom) _this.handleTouchStartDolly(event);\n      if (_this.enableRotate) _this.handleTouchStartRotate(event);\n    };\n\n    _this.handleTouchMoveRotate = function (_ref11) {\n      var touches = _ref11.touches;\n\n      if (touches.length === 1) {\n        _this.rotateEnd.set(touches[0].pageX, touches[0].pageY);\n      } else {\n        var x = 0.5 * (touches[0].pageX + touches[1].pageX);\n        var y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n        _this.rotateEnd.set(x, y);\n      }\n\n      _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart).multiplyScalar(_this.rotateSpeed);\n\n      _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / _this.getElementHeight());\n\n      _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / _this.getElementHeight());\n\n      _this.rotateStart.copy(_this.rotateEnd);\n    };\n\n    _this.handleTouchMovePan = function (_ref12) {\n      var touches = _ref12.touches;\n\n      if (touches.length == 1) {\n        _this.panEnd.set(touches[0].pageX, touches[0].pageY);\n      } else {\n        var x = 0.5 * (touches[0].pageX + touches[1].pageX);\n        var y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n        _this.panEnd.set(x, y);\n      }\n\n      _this.panDelta.subVectors(_this.panEnd, _this.panStart).multiplyScalar(_this.panSpeed);\n\n      _this.pan(_this.panDelta.x, _this.panDelta.y);\n\n      _this.panStart.copy(_this.panEnd);\n    };\n\n    _this.handleTouchMoveDolly = function (_ref13) {\n      var touches = _ref13.touches;\n      if (!Array.isArray(touches)) touches = [];\n      if (!touches[0]) touches[0] = {\n        pageX: 0,\n        pageY: 0\n      };\n      if (!touches[1]) touches[1] = {\n        pageX: touches[0].pageX || 0,\n        pageY: touches[0].pageY || 0\n      };\n      var dx = touches[0].pageX - touches[1].pageX;\n      var dy = touches[0].pageY - touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      _this.dollyEnd.set(0, distance);\n\n      _this.dollyDelta.set(0, _this.dollyEnd.y / Math.pow(_this.dollyStart.y, _this.zoomSpeed));\n\n      _this.dollyIn(_this.dollyDelta.y);\n\n      _this.dollyStart.copy(_this.dollyEnd);\n    };\n\n    _this.handleTouchMoveDollyPan = function (event) {\n      if (_this.enableZoom) _this.handleTouchMoveDolly(event);\n      if (_this.enablePan) _this.handleTouchMovePan(event);\n    };\n\n    _this.handleTouchMoveDollyRotate = function (event) {\n      if (_this.enableZoom) _this.handleTouchMoveDolly(event);\n      if (_this.enableRotate) _this.handleTouchMoveRotate(event);\n    };\n\n    _this.onMouseDown = function (event) {\n      var _a, _b;\n\n      if (_this.enabled === false) return;\n      (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n      _this.domElement.focus ? _this.domElement.focus() : window.focus();\n\n      switch (event.button) {\n        case 0:\n          switch (_this.mouseButtons.LEFT) {\n            case MOUSE.ROTATE:\n              if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                if (_this.enablePan === false) return;\n\n                _this.handleMouseDownPan(event);\n\n                _this.state = STATE.PAN;\n              } else {\n                if (_this.enableRotate === false) return;\n\n                _this.handleMouseDownRotate(event);\n\n                _this.state = STATE.ROTATE;\n              }\n\n              break;\n\n            case MOUSE.PAN:\n              if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                if (_this.enableRotate === false) return;\n\n                _this.handleMouseDownRotate(event);\n\n                _this.state = STATE.ROTATE;\n              } else {\n                if (_this.enablePan === false) return;\n\n                _this.handleMouseDownPan(event);\n\n                _this.state = STATE.PAN;\n              }\n\n              break;\n\n            default:\n              _this.state = STATE.NONE;\n          }\n\n          break;\n\n        case 1:\n          switch (_this.mouseButtons.MIDDLE) {\n            case MOUSE.DOLLY:\n              if (_this.enableZoom === false) return;\n\n              _this.handleMouseDownDolly(event);\n\n              _this.state = STATE.DOLLY;\n              break;\n\n            default:\n              _this.state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (_this.mouseButtons.RIGHT) {\n            case MOUSE.ROTATE:\n              if (_this.enableRotate === false) return;\n\n              _this.handleMouseDownRotate(event);\n\n              _this.state = STATE.ROTATE;\n              break;\n\n            case MOUSE.PAN:\n              if (_this.enablePan === false) return;\n\n              _this.handleMouseDownPan(event);\n\n              _this.state = STATE.PAN;\n              break;\n\n            default:\n              _this.state = STATE.NONE;\n          }\n\n          break;\n      }\n\n      if (_this.state !== STATE.NONE) {\n        if (useDOM) {\n          window.document.addEventListener('mousemove', _this.onMouseMove, false);\n          window.document.addEventListener('mouseup', _this.onMouseUp, false);\n        }\n\n        _this.dispatchEvent(_this.startEvent);\n      }\n    };\n\n    _this.onMouseMove = function (event) {\n      var _a, _b;\n\n      if (_this.enabled === false) return;\n      (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n      switch (_this.state) {\n        case STATE.ROTATE:\n          if (_this.enableRotate === false) return;\n\n          _this.handleMouseMoveRotate(event);\n\n          break;\n\n        case STATE.DOLLY:\n          if (_this.enableZoom === false) return;\n\n          _this.handleMouseMoveDolly(event);\n\n          break;\n\n        case STATE.PAN:\n          if (_this.enablePan === false) return;\n\n          _this.handleMouseMovePan(event);\n\n          break;\n      }\n    };\n\n    _this.onMouseUp = function (event) {\n      if (_this.enabled === false) return;\n\n      _this.handleMouseUp();\n\n      if (useDOM) {\n        window.document.removeEventListener('mousemove', _this.onMouseMove, false);\n        window.document.removeEventListener('mouseup', _this.onMouseUp, false);\n      }\n\n      _this.dispatchEvent(_this.endEvent);\n\n      _this.state = STATE.NONE;\n    };\n\n    _this.onMouseWheel = function (event) {\n      var _a, _b, _c, _d;\n\n      if (_this.enabled === false || _this.enableZoom === false || _this.state !== STATE.NONE && _this.state !== STATE.ROTATE) return;\n      (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = event).stopPropagation) === null || _d === void 0 ? void 0 : _d.call(_c);\n\n      _this.dispatchEvent(_this.startEvent);\n\n      _this.handleMouseWheel(event);\n\n      _this.dispatchEvent(_this.endEvent);\n    };\n\n    _this.onKeyDown = function (event) {\n      if (_this.enabled === false || _this.enableKeys === false || _this.enablePan === false) return;\n\n      _this.handleKeyDown(event);\n    };\n\n    _this.onTouchStart = function (event) {\n      var _a, _b;\n\n      if (_this.enabled === false) return;\n      (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n      switch (event.touches.length) {\n        case 1:\n          switch (_this.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (_this.enableRotate === false) return;\n\n              _this.handleTouchStartRotate(event);\n\n              _this.state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (_this.enablePan === false) return;\n\n              _this.handleTouchStartPan(event);\n\n              _this.state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              _this.state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (_this.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (_this.enableZoom === false && _this.enablePan === false) return;\n\n              _this.handleTouchStartDollyPan(event);\n\n              _this.state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (_this.enableZoom === false && _this.enableRotate === false) return;\n\n              _this.handleTouchStartDollyRotate(event);\n\n              _this.state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              _this.state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          _this.state = STATE.NONE;\n      }\n\n      if (_this.state !== STATE.NONE) {\n        _this.dispatchEvent(_this.startEvent);\n      }\n    };\n\n    _this.onTouchMove = function (event) {\n      var _a, _b, _c, _d;\n\n      if (_this.enabled === false) return;\n      (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = event).stopPropagation) === null || _d === void 0 ? void 0 : _d.call(_c);\n\n      switch (_this.state) {\n        case STATE.TOUCH_ROTATE:\n          if (_this.enableRotate === false) return;\n\n          _this.handleTouchMoveRotate(event);\n\n          _this.update();\n\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (_this.enablePan === false) return;\n\n          _this.handleTouchMovePan(event);\n\n          _this.update();\n\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (_this.enableZoom === false && _this.enablePan === false) return;\n\n          _this.handleTouchMoveDollyPan(event);\n\n          _this.update();\n\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (_this.enableZoom === false && _this.enableRotate === false) return;\n\n          _this.handleTouchMoveDollyRotate(event);\n\n          _this.update();\n\n          break;\n\n        default:\n          _this.state = STATE.NONE;\n      }\n    };\n\n    _this.onTouchEnd = function (event) {\n      if (_this.enabled === false) return;\n\n      _this.handleTouchEnd();\n\n      _this.dispatchEvent(_this.endEvent);\n\n      _this.state = STATE.NONE;\n    };\n\n    _this.onContextMenu = function (event) {\n      var _a, _b;\n\n      if (_this.enabled === false) return;\n      (_b = (_a = event).preventDefault) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n\n    if (ref && Platform.OS === 'web' && typeof window !== 'undefined') {\n      _this.domElement = getNode(ref) || window.document;\n    }\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom;\n\n    if (_this.domElement) {\n      _this.domElement.addEventListener('contextmenu', _this.onContextMenu, false);\n\n      _this.domElement.addEventListener('mousedown', _this.onMouseDown, false);\n\n      _this.domElement.addEventListener('wheel', _this.onMouseWheel, false);\n\n      if (useDOM) {\n        _this.domElement.addEventListener('touchstart', _this.onTouchStart, false);\n\n        _this.domElement.addEventListener('touchend', _this.onTouchEnd, false);\n\n        _this.domElement.addEventListener('touchmove', _this.onTouchMove, false);\n      }\n\n      window.addEventListener('keydown', _this.onKeyDown, false);\n    }\n\n    _this.update = function () {\n      var offset = new Vector3();\n      var quat = new Quaternion().setFromUnitVectors(_this.object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().inverse();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      return function () {\n        var position = _this.object.position;\n        offset.copy(position).sub(_this.target);\n        offset.applyQuaternion(quat);\n\n        _this.spherical.setFromVector3(offset);\n\n        if (_this.autoRotate && _this.state === STATE.NONE) {\n          _this.rotateLeft(_this.getAutoRotationAngle());\n        }\n\n        if (_this.enableDamping) {\n          _this.spherical.theta += _this.sphericalDelta.theta * _this.dampingFactor;\n          _this.spherical.phi += _this.sphericalDelta.phi * _this.dampingFactor;\n        } else {\n          _this.spherical.theta += _this.sphericalDelta.theta;\n          _this.spherical.phi += _this.sphericalDelta.phi;\n        }\n\n        _this.spherical.theta = Math.max(_this.minAzimuthAngle, Math.min(_this.maxAzimuthAngle, _this.spherical.theta));\n        _this.spherical.phi = Math.max(_this.minPolarAngle, Math.min(_this.maxPolarAngle, _this.spherical.phi));\n\n        _this.spherical.makeSafe();\n\n        _this.spherical.radius *= _this.scale;\n        _this.spherical.radius = Math.max(_this.minDistance, Math.min(_this.maxDistance, _this.spherical.radius));\n\n        if (_this.enableDamping === true) {\n          _this.target.addScaledVector(_this.panOffset, _this.dampingFactor);\n        } else {\n          _this.target.add(_this.panOffset);\n        }\n\n        offset.setFromSpherical(_this.spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(_this.target).add(offset);\n\n        _this.object.lookAt(_this.target);\n\n        if (_this.enableDamping === true) {\n          _this.sphericalDelta.theta *= 1 - _this.dampingFactor;\n          _this.sphericalDelta.phi *= 1 - _this.dampingFactor;\n\n          _this.panOffset.multiplyScalar(1 - _this.dampingFactor);\n        } else {\n          _this.sphericalDelta.set(0, 0, 0);\n\n          _this.panOffset.set(0, 0, 0);\n        }\n\n        _this.scale = 1;\n\n        if (_this.zoomChanged || lastPosition.distanceToSquared(_this.object.position) > EPS || 8 * (1 - lastQuaternion.dot(_this.object.quaternion)) > EPS) {\n          _this.dispatchEvent(_this.changeEvent);\n\n          lastPosition.copy(_this.object.position);\n          lastQuaternion.copy(_this.object.quaternion);\n          _this.zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.panLeft = function () {\n      var v = new Vector3();\n      return function (distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n\n        _this.panOffset.add(v);\n      };\n    }();\n\n    _this.panUp = function () {\n      var v = new Vector3();\n      return function (distance, objectMatrix) {\n        if (_this.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(_this.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n\n        _this.panOffset.add(v);\n      };\n    }();\n\n    _this.pan = function () {\n      var offset = new Vector3();\n      return function (deltaX, deltaY) {\n        var element = _this.domElement === window.document ? _this.domElement.body : _this.domElement;\n\n        if (_this.object.isPerspectiveCamera) {\n          var position = _this.object.position;\n          offset.copy(position).sub(_this.target);\n          var targetDistance = offset.length();\n          targetDistance *= Math.tan(_this.object.fov / 2 * Math.PI / 180.0);\n\n          _this.panLeft(2 * deltaX * targetDistance / _this.getElementHeight(), _this.object.matrix);\n\n          _this.panUp(2 * deltaY * targetDistance / _this.getElementHeight(), _this.object.matrix);\n        } else if (_this.object.isOrthographicCamera) {\n          _this.panLeft(deltaX * (_this.object.right - _this.object.left) / _this.object.zoom / _this.getElementWidth(), _this.object.matrix);\n\n          _this.panUp(deltaY * (_this.object.top - _this.object.bottom) / _this.object.zoom / _this.getElementHeight(), _this.object.matrix);\n        } else {\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          _this.enablePan = false;\n        }\n      };\n    }();\n\n    _this.update();\n\n    return _this;\n  }\n\n  _createClass(OrbitControls, [{\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {}\n  }, {\n    key: \"handleTouchEnd\",\n    value: function handleTouchEnd() {}\n  }]);\n\n  return OrbitControls;\n}(EventDispatcher);","map":{"version":3,"sources":["../src/OrbitControls.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * A custom TypeScript port of OrbitControls with exposed touch methods for native overrides.\n *\n * @author EvanBacon / https://github.com/evanbacon\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\nimport {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Matrix4,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n  Camera,\n} from 'three';\nimport { Platform } from 'react-native';\nimport { getNode } from 'react-native-web-hooks';\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst STATE = {\n  NONE: -1,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2,\n  TOUCH_ROTATE: 3,\n  TOUCH_PAN: 4,\n  TOUCH_DOLLY_PAN: 5,\n  TOUCH_DOLLY_ROTATE: 6,\n};\nconst EPS = 0.000001;\n\nconst useDOM = false;\n\nexport class OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  enabled: boolean = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  target: Vector3 = new Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  minDistance: number = 0;\n  maxDistance: number = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  minZoom: number = 0;\n  maxZoom: number = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  minPolarAngle: number = 0; // radians\n  maxPolarAngle: number = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  minAzimuthAngle: number = -Infinity; // radians\n  maxAzimuthAngle: number = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  enableDamping = false;\n  dampingFactor = 0.05;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  enableZoom = true;\n  zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  enableRotate = true;\n  rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  enablePan = true;\n  panSpeed = 1.0;\n  screenSpacePanning = false; // if true, pan in screen-space\n  keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  autoRotate = false;\n  autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  enableKeys = true;\n\n  // The four arrow keys\n  keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  };\n\n  // Touch fingers\n  touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n  // for reset\n  target0: Vector3;\n  position0: Vector3;\n  zoom0: number;\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  public update: () => boolean;\n\n  // PRIVATE\n\n  //\n  // internals\n  //\n\n  private changeEvent = { type: 'change' };\n  private startEvent = { type: 'start' };\n  private endEvent = { type: 'end' };\n\n  private state = STATE.NONE;\n\n  // current position in spherical coordinates\n  private spherical = new Spherical();\n  private sphericalDelta = new Spherical();\n\n  private scale = 1;\n  private panOffset = new Vector3();\n  private zoomChanged = false;\n\n  private rotateStart = new Vector2();\n  private rotateEnd = new Vector2();\n  private rotateDelta = new Vector2();\n\n  private panStart = new Vector2();\n  private panEnd = new Vector2();\n  private panDelta = new Vector2();\n\n  private dollyStart = new Vector2();\n  private dollyEnd = new Vector2();\n  private dollyDelta = new Vector2();\n\n  private panLeft: (distance: number, objectMatrix: Matrix4) => void;\n  private panUp: (distance: number, objectMatrix: Matrix4) => void;\n  private pan: (deltaX: number, deltaY: number) => void;\n\n  public domElement?: any;\n\n  constructor(\n    public object: Camera & {\n      // Add missing camera types\n      fov: number;\n      top: number;\n      right: number;\n      left: number;\n      bottom: number;\n      zoom: number;\n      updateProjectionMatrix: () => void;\n      isOrthographicCamera?: boolean;\n      isPerspectiveCamera?: boolean;\n    },\n    ref?: any\n  ) {\n    super();\n\n    if (ref && Platform.OS === 'web' && typeof window !== 'undefined') {\n      this.domElement = getNode(ref) || window.document;\n    }\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    //\n\n    if (this.domElement) {\n      this.domElement.addEventListener(\n        'contextmenu',\n        this.onContextMenu,\n        false\n      );\n\n      this.domElement.addEventListener('mousedown', this.onMouseDown, false);\n      this.domElement.addEventListener('wheel', this.onMouseWheel, false);\n\n      if (useDOM) {\n        this.domElement.addEventListener(\n          'touchstart',\n          this.onTouchStart,\n          false\n        );\n        this.domElement.addEventListener('touchend', this.onTouchEnd, false);\n        this.domElement.addEventListener('touchmove', this.onTouchMove, false);\n      }\n\n      window.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    // force an update at start\n\n    this.update = (() => {\n      const offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        this.object.up,\n        new Vector3(0, 1, 0)\n      );\n      const quatInverse = quat.clone().inverse();\n\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n\n      return (): boolean => {\n        const position = this.object.position;\n\n        offset.copy(position).sub(this.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(offset);\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n          this.rotateLeft(this.getAutoRotationAngle());\n        }\n\n        if (this.enableDamping) {\n          this.spherical.theta +=\n            this.sphericalDelta.theta * this.dampingFactor;\n          this.spherical.phi += this.sphericalDelta.phi * this.dampingFactor;\n        } else {\n          this.spherical.theta += this.sphericalDelta.theta;\n          this.spherical.phi += this.sphericalDelta.phi;\n        }\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(\n          this.minAzimuthAngle,\n          Math.min(this.maxAzimuthAngle, this.spherical.theta)\n        );\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(\n          this.minPolarAngle,\n          Math.min(this.maxPolarAngle, this.spherical.phi)\n        );\n\n        this.spherical.makeSafe();\n\n        this.spherical.radius *= this.scale;\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(\n          this.minDistance,\n          Math.min(this.maxDistance, this.spherical.radius)\n        );\n\n        // move target to panned location\n\n        if (this.enableDamping === true) {\n          this.target.addScaledVector(this.panOffset, this.dampingFactor);\n        } else {\n          this.target.add(this.panOffset);\n        }\n\n        offset.setFromSpherical(this.spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(this.target).add(offset);\n\n        this.object.lookAt(this.target);\n\n        if (this.enableDamping === true) {\n          this.sphericalDelta.theta *= 1 - this.dampingFactor;\n          this.sphericalDelta.phi *= 1 - this.dampingFactor;\n\n          this.panOffset.multiplyScalar(1 - this.dampingFactor);\n        } else {\n          this.sphericalDelta.set(0, 0, 0);\n\n          this.panOffset.set(0, 0, 0);\n        }\n\n        this.scale = 1;\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > this.EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          this.zoomChanged ||\n          lastPosition.distanceToSquared(this.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n        ) {\n          this.dispatchEvent(this.changeEvent);\n\n          lastPosition.copy(this.object.position);\n          lastQuaternion.copy(this.object.quaternion);\n          this.zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.panLeft = (() => {\n      const v = new Vector3();\n\n      return (distance: number, objectMatrix: Matrix4) => {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        this.panOffset.add(v);\n      };\n    })();\n\n    this.panUp = (() => {\n      const v = new Vector3();\n\n      return (distance: number, objectMatrix: Matrix4) => {\n        if (this.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(this.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n\n        this.panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    this.pan = (() => {\n      const offset = new Vector3();\n\n      return (deltaX: number, deltaY: number) => {\n        const element =\n          this.domElement === window.document\n            ? this.domElement.body\n            : this.domElement;\n\n        if (this.object.isPerspectiveCamera) {\n          // perspective\n          const position = this.object.position;\n          offset.copy(position).sub(this.target);\n          let targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((this.object.fov / 2) * Math.PI) / 180.0);\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          this.panLeft(\n            (2 * deltaX * targetDistance) / this.getElementHeight(),\n            this.object.matrix\n          );\n          this.panUp(\n            (2 * deltaY * targetDistance) / this.getElementHeight(),\n            this.object.matrix\n          );\n        } else if (this.object.isOrthographicCamera) {\n          // orthographic\n          this.panLeft(\n            (deltaX * (this.object.right - this.object.left)) /\n              this.object.zoom /\n              this.getElementWidth(),\n            this.object.matrix\n          );\n          this.panUp(\n            (deltaY * (this.object.top - this.object.bottom)) /\n              this.object.zoom /\n              this.getElementHeight(),\n            this.object.matrix\n          );\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.'\n          );\n          this.enablePan = false;\n        }\n      };\n    })();\n\n    this.update();\n  }\n\n  getPolarAngle = () => this.spherical.phi;\n\n  getAzimuthalAngle = () => this.spherical.theta;\n\n  saveState = () => {\n    this.target0.copy(this.target);\n    this.position0.copy(this.object.position);\n    this.zoom0 = this.object.zoom;\n  };\n\n  reset = () => {\n    this.target.copy(this.target0);\n    this.object.position.copy(this.position0);\n    this.object.zoom = this.zoom0;\n\n    this.object.updateProjectionMatrix();\n    this.dispatchEvent(this.changeEvent);\n\n    this.update();\n\n    this.state = STATE.NONE;\n  };\n\n  dispose = () => {\n    if (this.domElement) {\n      this.domElement.removeEventListener(\n        'contextmenu',\n        this.onContextMenu,\n        false\n      );\n      this.domElement.removeEventListener('mousedown', this.onMouseDown, false);\n      this.domElement.removeEventListener('wheel', this.onMouseWheel, false);\n\n      if (useDOM) {\n        this.domElement.removeEventListener(\n          'touchstart',\n          this.onTouchStart,\n          false\n        );\n        this.domElement.removeEventListener('touchend', this.onTouchEnd, false);\n        this.domElement.removeEventListener(\n          'touchmove',\n          this.onTouchMove,\n          false\n        );\n        // Skip Node.js envs\n        if (typeof window !== 'undefined') {\n          window.document.removeEventListener(\n            'mousemove',\n            this.onMouseMove,\n            false\n          );\n          window.document.removeEventListener('mouseup', this.onMouseUp, false);\n          window.removeEventListener('keydown', this.onKeyDown, false);\n        }\n      }\n    }\n\n    //this.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  // Private methods\n\n  private getAutoRotationAngle = (): number => {\n    return ((2 * Math.PI) / 60 / 60) * this.autoRotateSpeed;\n  };\n\n  private getZoomScale = (): number => {\n    return 0.95 ** this.zoomSpeed;\n  };\n\n  private rotateLeft = (angle: number) => {\n    this.sphericalDelta.theta -= angle;\n  };\n\n  private rotateUp = (angle: number) => {\n    this.sphericalDelta.phi -= angle;\n  };\n\n  private dollyIn = (dollyScale: number) => {\n    if (this.object.isPerspectiveCamera) {\n      this.scale /= dollyScale;\n    } else if (this.object.isOrthographicCamera) {\n      this.object.zoom = Math.max(\n        this.minZoom,\n        Math.min(this.maxZoom, this.object.zoom * dollyScale)\n      );\n      this.object.updateProjectionMatrix();\n      this.zoomChanged = true;\n    } else {\n      console.warn(\n        'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n      );\n      this.enableZoom = false;\n    }\n  };\n\n  private dollyOut = (dollyScale: number) => {\n    if (this.object.isPerspectiveCamera) {\n      this.scale *= dollyScale;\n    } else if (this.object.isOrthographicCamera) {\n      this.object.zoom = Math.max(\n        this.minZoom,\n        Math.min(this.maxZoom, this.object.zoom / dollyScale)\n      );\n      this.object.updateProjectionMatrix();\n      this.zoomChanged = true;\n    } else {\n      console.warn(\n        'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n      );\n      this.enableZoom = false;\n    }\n  };\n\n  //\n  // event callbacks - update the object state\n  //\n\n  width: number = 0;\n\n  getElementWidth = (): number => {\n    return this.width;\n  };\n\n  height: number = 0;\n\n  getElementHeight = (): number => {\n    return this.height;\n  };\n\n  private handleMouseDownRotate = ({ clientX, clientY }) => {\n    this.rotateStart.set(clientX, clientY);\n  };\n\n  private handleMouseDownDolly = ({ clientX, clientY }) => {\n    this.dollyStart.set(clientX, clientY);\n  };\n\n  private handleMouseDownPan = ({ clientX, clientY }) => {\n    this.panStart.set(clientX, clientY);\n  };\n\n  private handleMouseMoveRotate = ({ clientX, clientY }) => {\n    this.rotateEnd.set(clientX, clientY);\n\n    this.rotateDelta\n      .subVectors(this.rotateEnd, this.rotateStart)\n      .multiplyScalar(this.rotateSpeed);\n\n    // const element =\n    //   this.domElement === document ? this.domElement.body : this.domElement;\n\n    this.rotateLeft(\n      (2 * Math.PI * this.rotateDelta.x) / this.getElementHeight()\n    ); // yes, height\n\n    this.rotateUp((2 * Math.PI * this.rotateDelta.y) / this.getElementHeight());\n\n    this.rotateStart.copy(this.rotateEnd);\n\n    this.update();\n  };\n\n  private handleMouseMoveDolly = ({ clientX, clientY }) => {\n    this.dollyEnd.set(clientX, clientY);\n\n    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart);\n\n    if (this.dollyDelta.y > 0) {\n      this.dollyIn(this.getZoomScale());\n    } else if (this.dollyDelta.y < 0) {\n      this.dollyOut(this.getZoomScale());\n    }\n\n    this.dollyStart.copy(this.dollyEnd);\n\n    this.update();\n  };\n\n  private handleMouseMovePan = ({ clientX, clientY }) => {\n    this.panEnd.set(clientX, clientY);\n\n    this.panDelta\n      .subVectors(this.panEnd, this.panStart)\n      .multiplyScalar(this.panSpeed);\n\n    this.pan(this.panDelta.x, this.panDelta.y);\n\n    this.panStart.copy(this.panEnd);\n\n    this.update();\n  };\n\n  private handleMouseUp(/*event*/) {\n    // no-op\n  }\n\n  private handleMouseWheel = ({ deltaY }) => {\n    if (deltaY < 0) {\n      this.dollyOut(this.getZoomScale());\n    } else if (deltaY > 0) {\n      this.dollyIn(this.getZoomScale());\n    }\n\n    this.update();\n  };\n\n  private handleKeyDown = event => {\n    let needsUpdate = false;\n\n    switch (event.keyCode) {\n      case this.keys.UP:\n        this.pan(0, this.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case this.keys.BOTTOM:\n        this.pan(0, -this.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case this.keys.LEFT:\n        this.pan(this.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case this.keys.RIGHT:\n        this.pan(-this.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault?.();\n\n      this.update();\n    }\n  };\n\n  private handleTouchStartRotate = ({ touches }) => {\n    if (touches.length == 1) {\n      this.rotateStart.set(touches[0].pageX, touches[0].pageY);\n    } else {\n      const x = 0.5 * (touches[0].pageX + touches[1].pageX);\n      const y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n      this.rotateStart.set(x, y);\n    }\n  };\n\n  private handleTouchStartPan = ({ touches }) => {\n    if (touches.length === 1) {\n      this.panStart.set(touches[0].pageX, touches[0].pageY);\n    } else {\n      const x = 0.5 * (touches[0].pageX + touches[1].pageX);\n      const y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n      this.panStart.set(x, y);\n    }\n  };\n\n  private handleTouchStartDolly = ({ touches }) => {\n    const dx = touches[0].pageX - touches[1].pageX;\n    const dy = touches[0].pageY - touches[1].pageY;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    this.dollyStart.set(0, distance);\n  };\n\n  private handleTouchStartDollyPan = event => {\n    if (this.enableZoom) this.handleTouchStartDolly(event);\n\n    if (this.enablePan) this.handleTouchStartPan(event);\n  };\n\n  private handleTouchStartDollyRotate = event => {\n    if (this.enableZoom) this.handleTouchStartDolly(event);\n\n    if (this.enableRotate) this.handleTouchStartRotate(event);\n  };\n\n  private handleTouchMoveRotate = ({ touches }) => {\n    if (touches.length === 1) {\n      this.rotateEnd.set(touches[0].pageX, touches[0].pageY);\n    } else {\n      const x = 0.5 * (touches[0].pageX + touches[1].pageX);\n      const y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n      this.rotateEnd.set(x, y);\n    }\n\n    this.rotateDelta\n      .subVectors(this.rotateEnd, this.rotateStart)\n      .multiplyScalar(this.rotateSpeed);\n\n    this.rotateLeft(\n      (2 * Math.PI * this.rotateDelta.x) / this.getElementHeight()\n    ); // yes, height\n\n    this.rotateUp((2 * Math.PI * this.rotateDelta.y) / this.getElementHeight());\n\n    this.rotateStart.copy(this.rotateEnd);\n  };\n\n  private handleTouchMovePan = ({ touches }) => {\n    if (touches.length == 1) {\n      this.panEnd.set(touches[0].pageX, touches[0].pageY);\n    } else {\n      const x = 0.5 * (touches[0].pageX + touches[1].pageX);\n      const y = 0.5 * (touches[0].pageY + touches[1].pageY);\n\n      this.panEnd.set(x, y);\n    }\n\n    this.panDelta\n      .subVectors(this.panEnd, this.panStart)\n      .multiplyScalar(this.panSpeed);\n\n    this.pan(this.panDelta.x, this.panDelta.y);\n\n    this.panStart.copy(this.panEnd);\n  };\n\n  private handleTouchMoveDolly = ({ touches }) => {\n    if (!Array.isArray(touches)) touches = [];\n    if (!touches[0]) touches[0] = { pageX: 0, pageY: 0 };\n    if (!touches[1])\n      touches[1] = {\n        pageX: touches[0].pageX || 0,\n        pageY: touches[0].pageY || 0,\n      };\n    const dx = touches[0].pageX - touches[1].pageX;\n    const dy = touches[0].pageY - touches[1].pageY;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    this.dollyEnd.set(0, distance);\n\n    this.dollyDelta.set(\n      0,\n      this.dollyEnd.y / this.dollyStart.y ** this.zoomSpeed\n    );\n\n    this.dollyIn(this.dollyDelta.y);\n\n    this.dollyStart.copy(this.dollyEnd);\n  };\n\n  private handleTouchMoveDollyPan = event => {\n    if (this.enableZoom) this.handleTouchMoveDolly(event);\n\n    if (this.enablePan) this.handleTouchMovePan(event);\n  };\n\n  private handleTouchMoveDollyRotate = event => {\n    if (this.enableZoom) this.handleTouchMoveDolly(event);\n\n    if (this.enableRotate) this.handleTouchMoveRotate(event);\n  };\n\n  private handleTouchEnd(/*event*/) {\n    // no-op\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  private onMouseDown = event => {\n    if (this.enabled === false) return;\n\n    // Prevent the browser from scrolling.\n\n    event.preventDefault?.();\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    this.domElement.focus ? this.domElement.focus() : window.focus();\n\n    switch (event.button) {\n      case 0:\n        switch (this.mouseButtons.LEFT) {\n          case MOUSE.ROTATE:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (this.enablePan === false) return;\n\n              this.handleMouseDownPan(event);\n\n              this.state = STATE.PAN;\n            } else {\n              if (this.enableRotate === false) return;\n\n              this.handleMouseDownRotate(event);\n\n              this.state = STATE.ROTATE;\n            }\n\n            break;\n\n          case MOUSE.PAN:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (this.enableRotate === false) return;\n\n              this.handleMouseDownRotate(event);\n\n              this.state = STATE.ROTATE;\n            } else {\n              if (this.enablePan === false) return;\n\n              this.handleMouseDownPan(event);\n\n              this.state = STATE.PAN;\n            }\n\n            break;\n\n          default:\n            this.state = STATE.NONE;\n        }\n\n        break;\n\n      case 1:\n        switch (this.mouseButtons.MIDDLE) {\n          case MOUSE.DOLLY:\n            if (this.enableZoom === false) return;\n\n            this.handleMouseDownDolly(event);\n\n            this.state = STATE.DOLLY;\n\n            break;\n\n          default:\n            this.state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (this.mouseButtons.RIGHT) {\n          case MOUSE.ROTATE:\n            if (this.enableRotate === false) return;\n\n            this.handleMouseDownRotate(event);\n\n            this.state = STATE.ROTATE;\n\n            break;\n\n          case MOUSE.PAN:\n            if (this.enablePan === false) return;\n\n            this.handleMouseDownPan(event);\n\n            this.state = STATE.PAN;\n\n            break;\n\n          default:\n            this.state = STATE.NONE;\n        }\n\n        break;\n    }\n\n    if (this.state !== STATE.NONE) {\n      if (useDOM) {\n        window.document.addEventListener('mousemove', this.onMouseMove, false);\n        window.document.addEventListener('mouseup', this.onMouseUp, false);\n      }\n\n      this.dispatchEvent(this.startEvent);\n    }\n  };\n\n  private onMouseMove = event => {\n    if (this.enabled === false) return;\n\n    event.preventDefault?.();\n\n    switch (this.state) {\n      case STATE.ROTATE:\n        if (this.enableRotate === false) return;\n\n        this.handleMouseMoveRotate(event);\n\n        break;\n\n      case STATE.DOLLY:\n        if (this.enableZoom === false) return;\n\n        this.handleMouseMoveDolly(event);\n\n        break;\n\n      case STATE.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleMouseMovePan(event);\n\n        break;\n    }\n  };\n\n  private onMouseUp = event => {\n    if (this.enabled === false) return;\n\n    this.handleMouseUp(/* event */);\n\n    if (useDOM) {\n      window.document.removeEventListener('mousemove', this.onMouseMove, false);\n      window.document.removeEventListener('mouseup', this.onMouseUp, false);\n    }\n\n    this.dispatchEvent(this.endEvent);\n\n    this.state = STATE.NONE;\n  };\n\n  onMouseWheel = event => {\n    if (\n      this.enabled === false ||\n      this.enableZoom === false ||\n      (this.state !== STATE.NONE && this.state !== STATE.ROTATE)\n    )\n      return;\n\n    event.preventDefault?.();\n    event.stopPropagation?.();\n\n    this.dispatchEvent(this.startEvent);\n\n    this.handleMouseWheel(event);\n\n    this.dispatchEvent(this.endEvent);\n  };\n\n  onKeyDown = event => {\n    if (\n      this.enabled === false ||\n      this.enableKeys === false ||\n      this.enablePan === false\n    )\n      return;\n\n    this.handleKeyDown(event);\n  };\n\n  onTouchStart = event => {\n    if (this.enabled === false) return;\n\n    event.preventDefault?.();\n\n    switch (event.touches.length) {\n      case 1:\n        switch (this.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (this.enableRotate === false) return;\n\n            this.handleTouchStartRotate(event);\n\n            this.state = STATE.TOUCH_ROTATE;\n\n            break;\n\n          case TOUCH.PAN:\n            if (this.enablePan === false) return;\n\n            this.handleTouchStartPan(event);\n\n            this.state = STATE.TOUCH_PAN;\n\n            break;\n\n          default:\n            this.state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (this.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (this.enableZoom === false && this.enablePan === false) return;\n\n            this.handleTouchStartDollyPan(event);\n\n            this.state = STATE.TOUCH_DOLLY_PAN;\n\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n            if (this.enableZoom === false && this.enableRotate === false)\n              return;\n\n            this.handleTouchStartDollyRotate(event);\n\n            this.state = STATE.TOUCH_DOLLY_ROTATE;\n\n            break;\n\n          default:\n            this.state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        this.state = STATE.NONE;\n    }\n\n    if (this.state !== STATE.NONE) {\n      this.dispatchEvent(this.startEvent);\n    }\n  };\n\n  onTouchMove = event => {\n    if (this.enabled === false) return;\n\n    event.preventDefault?.();\n    event.stopPropagation?.();\n\n    switch (this.state) {\n      case STATE.TOUCH_ROTATE:\n        if (this.enableRotate === false) return;\n\n        this.handleTouchMoveRotate(event);\n\n        this.update();\n\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (this.enablePan === false) return;\n\n        this.handleTouchMovePan(event);\n\n        this.update();\n\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (this.enableZoom === false && this.enablePan === false) return;\n\n        this.handleTouchMoveDollyPan(event);\n\n        this.update();\n\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (this.enableZoom === false && this.enableRotate === false) return;\n\n        this.handleTouchMoveDollyRotate(event);\n\n        this.update();\n\n        break;\n\n      default:\n        this.state = STATE.NONE;\n    }\n  };\n\n  onTouchEnd = event => {\n    if (this.enabled === false) return;\n\n    this.handleTouchEnd(/* event */);\n\n    this.dispatchEvent(this.endEvent);\n\n    this.state = STATE.NONE;\n  };\n\n  onContextMenu = event => {\n    if (this.enabled === false) return;\n\n    event.preventDefault?.();\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}