{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_AREA_DATA, GET_AREA_DATA_SUCCESS, GET_AREA_DATA_FAILED, GET_CURRENT_DATA, GET_CURRENT_DATA_SUCCESS, GET_CURRENT_DATA_FAILED, GET_SENSOR_DATA, GET_SENSOR_DATA_SUCCESS, GET_SENSOR_DATA_FAILED, GET_CUBE_DATA, GET_CUBE_DATA_SUCCESS, GET_CUBE_DATA_FAILED } from \"./constants\";\nvar INIT_STATE = {\n  areaData: null,\n  sensorData: null,\n  cubeData: null,\n  currentData: null,\n  loading: false,\n  error: null\n};\n\nvar RoomData = function RoomData() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_AREA_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        areaData: null\n      });\n\n    case GET_AREA_DATA_SUCCESS:\n      var cr = state.areaData ? _toConsumableArray(state.areaData) : new Array();\n      cr.push(action.payload.data);\n\n      if (cr.length > 10) {\n        cr.shift();\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        areaData: cr,\n        loading: false,\n        error: null\n      });\n\n    case GET_AREA_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error,\n        areaData: null\n      });\n\n    case GET_CURRENT_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        cubeData: null\n      });\n\n    case GET_CURRENT_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentData: action.payload.data,\n        loading: false,\n        error: null\n      });\n\n    case GET_CURRENT_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentData: null,\n        loading: false,\n        error: action.payload.error\n      });\n\n    case GET_SENSOR_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case GET_SENSOR_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sensorData: action.payload.data,\n        loading: false,\n        error: null\n      });\n\n    case GET_SENSOR_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sensorData: null,\n        loading: false,\n        error: action.payload.error\n      });\n\n    case GET_CUBE_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        cubeData: null\n      });\n\n    case GET_CUBE_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cubeData: action.payload.data,\n        loading: false,\n        error: null\n      });\n\n    case GET_CUBE_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cubeData: null,\n        loading: false,\n        error: action.payload.error\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default RoomData;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomData/reducers.js"],"names":["GET_AREA_DATA","GET_AREA_DATA_SUCCESS","GET_AREA_DATA_FAILED","GET_CURRENT_DATA","GET_CURRENT_DATA_SUCCESS","GET_CURRENT_DATA_FAILED","GET_SENSOR_DATA","GET_SENSOR_DATA_SUCCESS","GET_SENSOR_DATA_FAILED","GET_CUBE_DATA","GET_CUBE_DATA_SUCCESS","GET_CUBE_DATA_FAILED","INIT_STATE","areaData","sensorData","cubeData","currentData","loading","error","RoomData","state","action","type","cr","Array","push","payload","data","length","shift"],"mappings":"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","sourcesContent":["import {\r\n    GET_AREA_DATA,\r\n    GET_AREA_DATA_SUCCESS,\r\n    GET_AREA_DATA_FAILED,\r\n\r\n    GET_CURRENT_DATA,\r\n    GET_CURRENT_DATA_SUCCESS,\r\n    GET_CURRENT_DATA_FAILED,\r\n\r\n    GET_SENSOR_DATA,\r\n    GET_SENSOR_DATA_SUCCESS,\r\n    GET_SENSOR_DATA_FAILED,\r\n\r\n    GET_CUBE_DATA,\r\n    GET_CUBE_DATA_SUCCESS,\r\n    GET_CUBE_DATA_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    areaData:null,\r\n    sensorData:null,\r\n    cubeData:null,\r\n    currentData:null,\r\n    loading:false,\r\n    error:null,\r\n};\r\nconst RoomData = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_AREA_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                areaData:null,\r\n            }\r\n        case GET_AREA_DATA_SUCCESS:\r\n         \r\n            let cr = (state.areaData)?[...state.areaData]: new Array();\r\n             cr.push(action.payload.data);\r\n            if(cr.length >10){\r\n                cr.shift()\r\n            } \r\n            return {\r\n                ...state,\r\n                areaData: cr,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_AREA_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error: action.payload.error,\r\n                areaData:null,\r\n            }\r\n        case GET_CURRENT_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                cubeData:null\r\n            }\r\n        case GET_CURRENT_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_CURRENT_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                currentData:null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        case GET_SENSOR_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n            }\r\n        case GET_SENSOR_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                sensorData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_SENSOR_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                sensorData: null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        case GET_CUBE_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                cubeData:null\r\n            }\r\n        case GET_CUBE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cubeData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_CUBE_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                cubeData: null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default RoomData;"]},"metadata":{},"sourceType":"module"}