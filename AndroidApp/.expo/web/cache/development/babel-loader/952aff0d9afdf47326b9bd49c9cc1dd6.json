{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GIT HUB\\\\NCKH2020\\\\KHAN\\\\AndroidApp\\\\src\\\\screens\\\\status\\\\myLineChart.component.js\";\nimport { Layout, Text, useTheme, Select, SelectItem, IndexPath, Icon, SelectGroup } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AreaRoom from \"../../components/areaRoom.component\";\nimport { setCurrentRoom } from \"../../redux/actions\";\nimport { useNavigationState } from \"@react-navigation/native\";\nexport default function MyLineChart(props) {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var myRoom = useSelector(function (state) {\n    return state.RoomList.myRoom;\n  });\n  var sharedRoom = useSelector(function (state) {\n    return state.RoomList.sharedRoom;\n  });\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mtemp = _React$useState2[0],\n      setMTemp = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      stemp = _React$useState4[0],\n      setSTemp = _React$useState4[1];\n\n  var screenName = useNavigationState(function (state) {\n    return state.routes[state.index].name;\n  });\n  var theme = useTheme();\n\n  var _React$useState5 = React.useState(new IndexPath(0, 0)),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selectedIndex = _React$useState6[0],\n      setSelectedIndex = _React$useState6[1];\n\n  var _React$useState7 = React.useState([[\"Kho 1\", \"Kho 2\"], [\"Kho 3\"]]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      warehouse = _React$useState8[0],\n      setWarehouse = _React$useState8[1];\n\n  React.useEffect(function () {\n    var a = _toConsumableArray(warehouse[0]);\n\n    var b = _toConsumableArray(warehouse[1]);\n\n    if (myRoom) {\n      a = _toConsumableArray(myRoom).map(function (r) {\n        return r.room.name;\n      });\n      setMTemp(a);\n    }\n\n    if (sharedRoom) {\n      b = _toConsumableArray(sharedRoom).map(function (r) {\n        return r.room.name;\n      });\n      setSTemp(b);\n    }\n\n    setWarehouse([_toConsumableArray(a), _toConsumableArray(b)]);\n    console.log([_toConsumableArray(a), _toConsumableArray(b)]);\n  }, [myRoom, sharedRoom]);\n  React.useEffect(function () {\n    console.log(\"run\");\n\n    if (selectedIndex.section === 0 && myRoom && myRoom[selectedIndex.row]) {\n      dispatch(setCurrentRoom(myRoom[selectedIndex.row]));\n    } else if (selectedIndex.section === 1 && sharedRoom && sharedRoom[selectedIndex.row]) {\n      dispatch(setCurrentRoom(sharedRoom[selectedIndex.row]));\n    }\n  }, [selectedIndex]);\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      areaIndex = _React$useState10[0],\n      setAreaIndex = _React$useState10[1];\n\n  var _React$useState11 = React.useState({\n    datas: [],\n    labels: []\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      dataArray = _React$useState12[0],\n      setDataArray = _React$useState12[1];\n\n  React.useEffect(function () {\n    if (areaData && areaIndex != null) {\n      console.log(areaIndex);\n\n      var coppyLable = _toConsumableArray(areaData).map(function (dt) {\n        return dt.areas[areaIndex] ? \"khan\" : \"null\";\n      });\n\n      var copyData = _toConsumableArray(areaData).map(function (dt) {\n        return dt.areas[areaIndex] ? dt.areas[areaIndex].average ? dt.areas[areaIndex].average : dt.areas[areaIndex].value : 0;\n      });\n\n      setDataArray({\n        datas: _toConsumableArray(copyData),\n        labels: _toConsumableArray(coppyLable)\n      });\n    } else {\n      setAreaIndex(null);\n    }\n  }, [areaIndex]);\n\n  var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      data = _React$useState14[0],\n      setData = _React$useState14[1];\n\n  var areaData = useSelector(function (state) {\n    return state.RoomData.areaData;\n  });\n  React.useEffect(function () {\n    if (areaData && areaData[0] && areaData[areaData.length - 1].areas[0]) {\n      if (areaData[areaData.length - 1].areas.length != data.length) {\n        if (areaIndex == null) setAreaIndex(0);\n        setData(_toConsumableArray(areaData[areaData.length - 1].areas).map(function (area, index) {\n          return {\n            id: area._id,\n            index: index,\n            title: area.name,\n            status: \"stability\",\n            temperature: Math.round((area.average ? area.average : area.value) * 100) / 100\n          };\n        }));\n      } else {\n        if (areaIndex != null && screenName && screenName === \"LineChart\" && props.parentScreen && props.parentScreen === \"Status\") {\n          setData(_toConsumableArray(areaData[areaData.length - 1].areas).map(function (area, index) {\n            return {\n              id: area._id,\n              index: index,\n              title: area.name,\n              status: \"stability\",\n              temperature: Math.round((area.average ? area.average : area.value) * 100) / 100\n            };\n          }));\n\n          var coppyLable = _toConsumableArray(areaData).map(function (dt) {\n            return dt.areas[areaIndex] ? \"khan\" : \"null\";\n          });\n\n          var copyData = _toConsumableArray(areaData).map(function (dt) {\n            return dt.areas[areaIndex] ? dt.areas[areaIndex].average ? dt.areas[areaIndex].average : dt.areas[areaIndex].value : 0;\n          });\n\n          setDataArray({\n            datas: _toConsumableArray(copyData),\n            labels: _toConsumableArray(coppyLable)\n          });\n        }\n      }\n    } else {\n      setData([]);\n      setDataArray({\n        datas: [],\n        labels: []\n      });\n      setAreaIndex(null);\n    }\n  }, [areaData, props.parentScreen]);\n  var styles = StyleSheet.create({\n    selectInput: {\n      width: \"95%\",\n      marginTop: 15,\n      marginBottom: 10\n    },\n    container: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    chartView: {\n      backgroundColor: theme[\"background-basic-color-4\"],\n      width: \"95%\",\n      borderRadius: 10,\n      padding: 5\n    },\n    chartTitle: {\n      marginLeft: 4,\n      marginTop: 10\n    },\n    srollViewAre: {\n      height: Dimensions.get(\"window\").height * 0.24,\n      marginTop: 15,\n      width: \"100%\"\n    },\n    areRoomView: {\n      backgroundColor: theme[\"background-basic-color-4\"],\n      padding: 20,\n      borderRadius: 20,\n      marginHorizontal: 5\n    },\n    areRoomFocus: {\n      backgroundColor: theme[\"color-primary-focus\"]\n    }\n  });\n  return React.createElement(Layout, {\n    style: styles.container,\n    level: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, React.createElement(Select, {\n    style: styles.selectInput,\n    selectedIndex: selectedIndex,\n    value: warehouse[selectedIndex.section][selectedIndex.row],\n    onSelect: function onSelect(index) {\n      return setSelectedIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, React.createElement(SelectGroup, {\n    title: \"Kho c\\u1EE7a t\\xF4i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, mtemp.map(function (t) {\n    return React.createElement(SelectItem, {\n      title: t,\n      key: t,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(SelectGroup, {\n    title: \"Kho \\u0111\\u01B0\\u1EE3c chia s\\u1EBD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, stemp.map(function (t) {\n    return React.createElement(SelectItem, {\n      title: t,\n      key: t,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    });\n  }))), React.createElement(View, {\n    style: styles.chartView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, areaIndex != null && data && React.createElement(Text, {\n    style: styles.chartTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, data[areaIndex].title), areaIndex != null && dataArray && dataArray && dataArray.datas[0] && React.createElement(LineChart, {\n    withInnerLines: false,\n    data: {\n      labels: dataArray.labels,\n      datasets: [{\n        data: dataArray.datas\n      }]\n    },\n    width: Dimensions.get(\"window\").width * 0.9,\n    height: Dimensions.get(\"window\").width * 0.5,\n    yAxisLabel: \"-\",\n    yAxisSuffix: \"\\xB0C\",\n    yAxisInterval: 1,\n    bezier: true,\n    style: {\n      marginVertical: 15,\n      borderRadius: 5\n    },\n    chartConfig: {\n      backgroundColor: \"#000000\",\n      backgroundGradientFrom: theme[\"background-basic-color-4\"],\n      backgroundGradientTo: theme[\"background-basic-color-4\"],\n      decimalPlaces: 2,\n      color: function color(lever) {\n        return theme[\"color-primary-default\"];\n      },\n      labelColor: function labelColor(lever) {\n        return theme[\"text-basic-color\"];\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"2\",\n        strokeWidth: \"4\",\n        stroke: theme[\"color-primary-default\"]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.srollViewAre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    contentContainerStyle: {\n      paddingHorizontal: 10\n    },\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, data && data[0] && data.map(function (dt) {\n    return React.createElement(AreaRoom, {\n      data: dt,\n      key: dt.index,\n      focus: dt.index === areaIndex ? true : false,\n      onPressView: function onPressView() {\n        console.log(dt.index);\n        setAreaIndex(dt.index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/screens/status/myLineChart.component.js"],"names":["Layout","Text","useTheme","Select","SelectItem","IndexPath","Icon","SelectGroup","React","LineChart","useSelector","useDispatch","AreaRoom","setCurrentRoom","useNavigationState","MyLineChart","props","dispatch","myRoom","state","RoomList","sharedRoom","useState","mtemp","setMTemp","stemp","setSTemp","screenName","routes","index","name","theme","selectedIndex","setSelectedIndex","warehouse","setWarehouse","useEffect","a","b","map","r","room","console","log","section","row","areaIndex","setAreaIndex","datas","labels","dataArray","setDataArray","areaData","coppyLable","dt","areas","copyData","average","value","data","setData","RoomData","length","area","id","_id","title","status","temperature","Math","round","parentScreen","styles","StyleSheet","create","selectInput","width","marginTop","marginBottom","container","flex","alignItems","chartView","backgroundColor","borderRadius","padding","chartTitle","marginLeft","srollViewAre","height","Dimensions","get","areRoomView","marginHorizontal","areRoomFocus","t","datasets","marginVertical","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","lever","labelColor","style","propsForDots","strokeWidth","stroke","paddingHorizontal"],"mappings":"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","sourcesContent":["import {\r\n  Layout,\r\n  Text,\r\n  useTheme,\r\n  Select,\r\n  SelectItem,\r\n  IndexPath,\r\n  Icon,\r\n  SelectGroup,\r\n} from \"@ui-kitten/components\";\r\nimport React from \"react\";\r\nimport { Dimensions, ScrollView, View, StyleSheet, Alert } from \"react-native\";\r\nimport { LineChart } from \"react-native-chart-kit\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AreaRoom from \"../../components/areaRoom.component\";\r\nimport { setCurrentRoom } from \"../../redux/actions\";\r\nimport { useNavigationState } from \"@react-navigation/native\";\r\nexport default function MyLineChart(props) {\r\n  const dispatch = useDispatch();\r\n  const myRoom = useSelector((state) => state.RoomList.myRoom);\r\n  const sharedRoom = useSelector((state) => state.RoomList.sharedRoom);\r\n  const [mtemp, setMTemp] = React.useState([]);\r\n  const [stemp, setSTemp] = React.useState([]);\r\n  const screenName = useNavigationState(\r\n    (state) => state.routes[state.index].name\r\n  );\r\n  const theme = useTheme();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0, 0));\r\n  const [warehouse, setWarehouse] = React.useState([\r\n    [\"Kho 1\", \"Kho 2\"],\r\n    [\"Kho 3\"],\r\n  ]);\r\n  React.useEffect(() => {\r\n    let a = [...warehouse[0]];\r\n    let b = [...warehouse[1]];\r\n    if (myRoom) {\r\n      a = [...myRoom].map((r) => r.room.name);\r\n      setMTemp(a);\r\n    }\r\n    if (sharedRoom) {\r\n      b = [...sharedRoom].map((r) => r.room.name);\r\n      setSTemp(b);\r\n    }\r\n    setWarehouse([[...a], [...b]]);\r\n\r\n    console.log([[...a], [...b]]);\r\n  }, [myRoom, sharedRoom]);\r\n  React.useEffect(() => {\r\n    console.log(\"run\");\r\n    if (selectedIndex.section === 0 && myRoom && myRoom[selectedIndex.row]) {\r\n      dispatch(setCurrentRoom(myRoom[selectedIndex.row]));\r\n    } else if (\r\n      selectedIndex.section === 1 &&\r\n      sharedRoom &&\r\n      sharedRoom[selectedIndex.row]\r\n    ) {\r\n      dispatch(setCurrentRoom(sharedRoom[selectedIndex.row]));\r\n    }\r\n  }, [selectedIndex]);\r\n\r\n  const [areaIndex, setAreaIndex] = React.useState(null);\r\n  const [dataArray, setDataArray] = React.useState({\r\n    datas: [],\r\n    labels: [],\r\n  });\r\n  React.useEffect(() => {\r\n    if (areaData && areaIndex != null) {\r\n      console.log(areaIndex);\r\n      let coppyLable = [...areaData].map((dt) =>\r\n        dt.areas[areaIndex] ? \"khan\" : \"null\"\r\n      );\r\n      let copyData = [...areaData].map((dt) =>\r\n        dt.areas[areaIndex]\r\n          ? dt.areas[areaIndex].average\r\n            ? dt.areas[areaIndex].average\r\n            : dt.areas[areaIndex].value\r\n          : 0\r\n      );\r\n      setDataArray({\r\n        datas: [...copyData],\r\n        labels: [...coppyLable],\r\n      });\r\n    } else {\r\n      setAreaIndex(null);\r\n    }\r\n  }, [areaIndex]);\r\n\r\n  const [data, setData] = React.useState([]);\r\n  const areaData = useSelector((state) => state.RoomData.areaData);\r\n  React.useEffect(() => {\r\n    if (areaData && areaData[0] && areaData[areaData.length - 1].areas[0]) {\r\n      if (areaData[areaData.length - 1].areas.length != data.length) {\r\n        if (areaIndex == null) setAreaIndex(0);\r\n        setData(\r\n          [...areaData[areaData.length - 1].areas].map((area, index) => ({\r\n            id: area._id,\r\n            index: index,\r\n            title: area.name,\r\n            status: \"stability\",\r\n            temperature:\r\n              Math.round((area.average ? area.average : area.value) * 100) /\r\n              100,\r\n          }))\r\n        );\r\n      } else {\r\n        if (\r\n          areaIndex != null &&\r\n          screenName &&\r\n          screenName === \"LineChart\" &&\r\n          props.parentScreen &&\r\n          props.parentScreen === \"Status\"\r\n        ) {\r\n          setData(\r\n            [...areaData[areaData.length - 1].areas].map((area, index) => ({\r\n              id: area._id,\r\n              index: index,\r\n              title: area.name,\r\n              status: \"stability\",\r\n              temperature:\r\n                Math.round((area.average ? area.average : area.value) * 100) /\r\n                100,\r\n            }))\r\n          );\r\n\r\n          let coppyLable = [...areaData].map((dt) =>\r\n            dt.areas[areaIndex] ? \"khan\" : \"null\"\r\n          );\r\n          let copyData = [...areaData].map((dt) =>\r\n            dt.areas[areaIndex]\r\n              ? dt.areas[areaIndex].average\r\n                ? dt.areas[areaIndex].average\r\n                : dt.areas[areaIndex].value\r\n              : 0\r\n          );\r\n          setDataArray({\r\n            datas: [...copyData],\r\n            labels: [...coppyLable],\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      setData([]);\r\n      setDataArray({\r\n        datas: [],\r\n        labels: [],\r\n      });\r\n      setAreaIndex(null);\r\n    }\r\n  }, [areaData, props.parentScreen]);\r\n\r\n  const styles = StyleSheet.create({\r\n    selectInput: { width: \"95%\", marginTop: 15, marginBottom: 10 },\r\n    container: { flex: 1, alignItems: \"center\" },\r\n    chartView: {\r\n      backgroundColor: theme[\"background-basic-color-4\"],\r\n      width: \"95%\",\r\n      borderRadius: 10,\r\n      padding: 5,\r\n    },\r\n    chartTitle: { marginLeft: 4, marginTop: 10 },\r\n    srollViewAre: {\r\n      height: Dimensions.get(\"window\").height * 0.24,\r\n      marginTop: 15,\r\n      width: \"100%\",\r\n    },\r\n    areRoomView: {\r\n      backgroundColor: theme[\"background-basic-color-4\"],\r\n      padding: 20,\r\n      borderRadius: 20,\r\n      marginHorizontal: 5,\r\n    },\r\n    areRoomFocus: { backgroundColor: theme[\"color-primary-focus\"] },\r\n  });\r\n\r\n  return (\r\n    <Layout style={styles.container} level=\"3\">\r\n      <Select\r\n        style={styles.selectInput}\r\n        selectedIndex={selectedIndex}\r\n        value={warehouse[selectedIndex.section][selectedIndex.row]}\r\n        onSelect={(index) => setSelectedIndex(index)}\r\n      >\r\n        <SelectGroup title=\"Kho của tôi\">\r\n          {mtemp.map((t) => (\r\n            <SelectItem title={t} key={t} />\r\n          ))}\r\n        </SelectGroup>\r\n        <SelectGroup title=\"Kho được chia sẽ\">\r\n          {stemp.map((t) => (\r\n            <SelectItem title={t} key={t} />\r\n          ))}\r\n        </SelectGroup>\r\n      </Select>\r\n      <View style={styles.chartView}>\r\n        {areaIndex != null && data && (\r\n          <Text style={styles.chartTitle}>{data[areaIndex].title}</Text>\r\n        )}\r\n        {areaIndex != null && dataArray && dataArray && dataArray.datas[0] && (\r\n          <LineChart\r\n            withInnerLines={false}\r\n            data={{\r\n              labels: dataArray.labels,\r\n              datasets: [\r\n                {\r\n                  data: dataArray.datas,\r\n                },\r\n              ],\r\n            }}\r\n            width={Dimensions.get(\"window\").width * 0.9} // from react-native\r\n            height={Dimensions.get(\"window\").width * 0.5}\r\n            yAxisLabel=\"-\"\r\n            yAxisSuffix=\"°C\"\r\n            yAxisInterval={1} // optional, defaults to 1\r\n            bezier\r\n            style={{\r\n              marginVertical: 15,\r\n              borderRadius: 5,\r\n            }}\r\n            chartConfig={{\r\n              backgroundColor: \"#000000\",\r\n              backgroundGradientFrom: theme[\"background-basic-color-4\"],\r\n              backgroundGradientTo: theme[\"background-basic-color-4\"],\r\n              decimalPlaces: 2, // optional, defaults to 2dp\r\n              color: (lever) => theme[\"color-primary-default\"],\r\n              labelColor: (lever) => theme[\"text-basic-color\"],\r\n              style: {\r\n                borderRadius: 16,\r\n              },\r\n              propsForDots: {\r\n                r: \"2\",\r\n                strokeWidth: \"4\",\r\n                stroke: theme[\"color-primary-default\"],\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </View>\r\n      <View style={styles.srollViewAre}>\r\n        <ScrollView\r\n          horizontal\r\n          contentContainerStyle={{ paddingHorizontal: 10 }}\r\n          showsHorizontalScrollIndicator={false}\r\n        >\r\n          {data &&\r\n            data[0] &&\r\n            data.map((dt) => (\r\n              <AreaRoom\r\n                data={dt}\r\n                key={dt.index}\r\n                focus={dt.index === areaIndex ? true : false}\r\n                onPressView={() => {\r\n                  console.log(dt.index);\r\n                  setAreaIndex(dt.index);\r\n                }}\r\n              />\r\n            ))}\r\n        </ScrollView>\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}