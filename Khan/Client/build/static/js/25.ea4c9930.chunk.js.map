{"version":3,"sources":["components/AppMenu.js","components/LeftSidebar.js"],"names":["MenuItemWithChildren","item","linkClassNames","subMenuClassNames","activatedMenuItemIds","Icon","icon","className","classNames","indexOf","id","to","aria-expanded","badge","variant","text","name","children","map","child","i","Fragment","key","active","MenuItem","linkClassName","MenuItemLink","path","AppMenu","Component","componentDidMount","this","props","menu","menuItems","initMenu","history","listen","location","action","changeActiveMenuFromLocation","componentDidUpdate","prevProps","mode","menuRef","MetisMenu","on","event","window","addEventListener","menuClick","e","target","contains","hide","detail","shownElement","removeEventListener","render","isHorizontal","activatedKeys","header","defaultProps","withRouter","connect","state","UserProfile","src","user","avatar","alt","username","fullname","data-toggle","tag","right","divider","SideNav","LeftSidebar","constructor","super","document","handleOtherClick","componentWillUnmount","menuNodeRef","body","isMobileOnly","classList","remove","handleClick","bind","console","log","isCondensed","ref","node","Auth","loading","error"],"mappings":"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","file":"static/js/25.ea4c9930.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport MetisMenu from 'metismenujs/dist/metismenujs';\r\n\r\nimport { initMenu, changeActiveMenuFromLocation } from '../redux/actions';\r\n\r\n\r\nconst MenuItemWithChildren = ({ item, linkClassNames, subMenuClassNames, activatedMenuItemIds }) => {\r\n    const Icon = item.icon || null;\r\n    return (\r\n        <li className={classNames('side-nav-item', { 'active mm-active': activatedMenuItemIds.indexOf(item.id) >= 0 })}>\r\n            <Link\r\n                to=\"/\"\r\n                className={classNames('side-sub-nav-link', linkClassNames)}\r\n                aria-expanded={activatedMenuItemIds.indexOf(item.id) >= 0}>\r\n                {item.icon && <Icon />}\r\n                {item.badge && (\r\n                    <span className={`badge badge-${item.badge.variant} float-right`}>{item.badge.text}</span>\r\n                )}\r\n                <span> {item.name} </span>\r\n                <span className=\"menu-arrow\"></span>\r\n            </Link>\r\n\r\n            <ul\r\n                className={classNames(subMenuClassNames, {\r\n                    'mm-collapse mm-show': activatedMenuItemIds.indexOf(item.id) >= 0,\r\n                })}\r\n                aria-expanded={activatedMenuItemIds.indexOf(item.id) >= 0}>\r\n                {item.children.map((child, i) => {\r\n                    return (\r\n                        <React.Fragment key={i}>\r\n                            {child.children ? (\r\n                                <MenuItemWithChildren\r\n                                    item={child}\r\n                                    linkClassNames={classNames({ active: activatedMenuItemIds.indexOf(child.id) >= 0 })}\r\n                                    activatedMenuItemIds={activatedMenuItemIds}\r\n                                    subMenuClassNames=\"side-nav-third-level\"\r\n                                />\r\n                            ) : (\r\n                                    <MenuItem\r\n                                        item={child}\r\n                                        className={classNames({ active: activatedMenuItemIds.indexOf(child.id) >= 0 })}\r\n                                        linkClassName={classNames({ active: activatedMenuItemIds.indexOf(child.id) >= 0 })}\r\n                                    />\r\n                                )}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItem = ({ item, className, linkClassName }) => {\r\n    return (\r\n        <li className={classNames('side-nav-item', className)}>\r\n            <MenuItemLink item={item} className={linkClassName} />\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItemLink = ({ item, className }) => {\r\n    const Icon = item.icon || null;\r\n    return (\r\n        <Link to={item.path} className={classNames('side-nav-link-ref', 'side-sub-nav-link', className)}>\r\n            {item.icon && <Icon />}\r\n            {item.badge && <span className={`font-size-12 badge badge-${item.badge.variant} float-right`}>{item.badge.text}</span>}\r\n            <span> {item.name} </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\n/**\r\n * Renders the application menu\r\n */\r\n\r\nclass AppMenu extends Component {\r\n    static defaultProps = {\r\n        mode: 'vertical',\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (!this.props.menu.menuItems) this.props.initMenu();\r\n        else this.initMenu();\r\n\r\n        this.props.history.listen((location, action) => {\r\n            this.props.changeActiveMenuFromLocation();\r\n        });\r\n    };\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (\r\n            !prevProps.menu.menuItems ||\r\n            (prevProps.menu.menuItems && prevProps.menu.menuItems !== this.props.menu.menuItems)\r\n        ) {\r\n            this.initMenu();\r\n        }\r\n\r\n        if (!this.props.menu.activatedMenuItemIds) {\r\n            this.props.changeActiveMenuFromLocation();\r\n        }\r\n    };\r\n\r\n    initMenu() {\r\n        if (this.props.mode === 'horizontal') {\r\n            const menuRef = new MetisMenu('#menu-bar').on('shown.metisMenu', function (event) {\r\n                window.addEventListener('click', function menuClick(e) {\r\n                    if (!event.target.contains(e.target)) {\r\n                        menuRef.hide(event.detail.shownElement);\r\n                        window.removeEventListener('click', menuClick);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            new MetisMenu('#menu-bar');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHorizontal = this.props.mode === 'horizontal';\r\n        const activatedKeys = isHorizontal ? [] : this.props.menu ? (this.props.menu.activatedMenuItemIds? this.props.menu.activatedMenuItemIds :[]) : [] || [];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                \r\n                        {this.props.menu && this.props.menu.menuItems && (\r\n                            <ul className=\"metismenu\" id=\"menu-bar\">\r\n                                {this.props.menu.menuItems.map((item, i) => {\r\n                                    return (\r\n                                        <React.Fragment key={item.id}>\r\n                                            {item.header && !isHorizontal && (\r\n                                                <li className=\"menu-title\" key={i + '-el'}>\r\n                                                    {item.header}\r\n                                                </li>\r\n                                            )}\r\n\r\n                                            {item.children ? (\r\n                                                <MenuItemWithChildren\r\n                                                    item={item}\r\n                                                    subMenuClassNames=\"nav-second-level\"\r\n                                                    activatedMenuItemIds={activatedKeys}\r\n                                                    linkClassNames=\"side-nav-link\"\r\n                                                />\r\n                                            ) : (\r\n                                                    <MenuItem\r\n                                                        item={item}\r\n                                                        className={classNames({ 'mm-active': activatedKeys.indexOf(item.id) >= 0 })}\r\n                                                        linkClassName=\"side-nav-link\"\r\n                                                    />\r\n                                                )}\r\n                                        </React.Fragment>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.AppMenu,\r\n    };\r\n};\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        { initMenu, changeActiveMenuFromLocation }\r\n    )(AppMenu)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport AppMenu from './AppMenu';\r\n\r\n/**\r\n * User Widget\r\n */\r\nconst UserProfile = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"media user-profile mt-2 mb-2\">\r\n                <img\r\n                    src={props.user.user.avatar}\r\n                    className=\"avatar-sm rounded-circle mr-2\"\r\n                    alt={props.user.user.username}\r\n                />\r\n                <img\r\n                    src={props.user.user.avatar}\r\n                    className=\"avatar-xs rounded-circle mr-2\"\r\n                    alt={props.user.user.username}\r\n                />\r\n\r\n                <div className=\"media-body\">\r\n                    <h6 className=\"pro-user-name mt-0 mb-0\">{props.user.user.fullname}</h6>\r\n                    <span className=\"pro-user-desc\">{props.user.user.username}</span>\r\n                </div>\r\n\r\n                <UncontrolledDropdown className=\"align-self-center profile-dropdown-menu\">\r\n                    <DropdownToggle\r\n                        data-toggle=\"dropdown\"\r\n                        tag=\"button\"\r\n                        className=\"btn btn-link p-0 dropdown-toggle mr-0\">\r\n                        <FeatherIcon.ChevronDown />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                        <Link to=\"/account/info\" className=\"dropdown-item notify-item\">\r\n                            <FeatherIcon.User className=\"icon-dual icon-xs mr-2\" />\r\n                            <span>My Account</span>\r\n                        </Link>\r\n                        <Link to=\"/account/lock\" className=\"dropdown-item notify-item\">\r\n                            <FeatherIcon.Lock className=\"icon-dual icon-xs mr-2\" />\r\n                            <span>Lock Screen</span>\r\n                        </Link>\r\n                        <DropdownItem divider />\r\n                        <Link to=\"/account/logout\" className=\"dropdown-item notify-item\">\r\n                            <FeatherIcon.LogOut className=\"icon-dual icon-xs mr-2\" />\r\n                            <span>Logout</span>\r\n                        </Link>\r\n                    </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n/**\r\n * Sidenav\r\n */\r\nconst SideNav = () => {\r\n    return (\r\n        <div className=\"sidebar-content\">\r\n            <div id=\"sidebar-menu\">\r\n                <AppMenu />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nclass LeftSidebar extends Component {\r\n    menuNodeRef;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleOtherClick = this.handleOtherClick.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Bind event\r\n     */\r\n    componentDidMount = () => {\r\n        document.addEventListener('mousedown', this.handleOtherClick, false);\r\n    };\r\n\r\n    /**\r\n     * Bind event\r\n     */\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('mousedown', this.handleOtherClick, false);\r\n    };\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    handleOtherClick = (e) => {\r\n        if (this.menuNodeRef.contains(e.target)) return;\r\n        // else hide the menubar\r\n        if (document.body && isMobileOnly) {\r\n            document.body.classList.remove('sidebar-enable');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle click\r\n     * @param {*} e\r\n     * @param {*} item\r\n     */\r\n    handleClick(e) {\r\n        console.log(e);\r\n    }\r\n\r\n    render() {\r\n        const isCondensed = this.props.isCondensed || false;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"left-side-menu\" ref={(node) => (this.menuNodeRef = node)}>\r\n                    <UserProfile user={this.props.user} />\r\n                    {!isCondensed && (\r\n                        <PerfectScrollbar>\r\n                            <SideNav />\r\n                        </PerfectScrollbar>\r\n                    )}\r\n                    {isCondensed && <SideNav />}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { user, loading, error } = state.Auth;\r\n    return { user, loading, error };\r\n};\r\nexport default connect(mapStateToProps, {})(LeftSidebar);\r\n"],"sourceRoot":""}