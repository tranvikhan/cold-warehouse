{"version":3,"sources":["redux/layout/constants.js","redux/appMenu/constants.js","redux/auth/actions.js","constants/layout.js","helpers/authUtils.js","redux/layout/actions.js","redux/appMenu/actions.js","constants/apiConfig.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js"],"names":["CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","loginUser","username","password","type","LOGIN_USER","payload","loginUserSuccess","user","LOGIN_USER_SUCCESS","loginUserFailed","error","LOGIN_USER_FAILED","registerUser","email","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","isUserAuthenticated","getLoggedInUser","decoded","jwtDecode","accessToken","currentTime","Date","now","exp","console","warn","Cookies","get","JSON","parse","changeLayout","layout","changeLayoutWidth","width","changeSidebarTheme","theme","changeSidebarType","sidebarType","showRightSidebar","hideRightSidebar","initMenu","initMenuSuccess","menuItems","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","BASE_URL","AuthLayout","React","lazy","VerticalLayout","HorizontalLayout","withLayout","WrappedComponent","HOC","Component","getLayout","layoutCls","this","props","layoutType","layoutConstants","render","Layout","fallback","connect","state","Login","Logout","Register","ForgetPassword","Confirm","Status","Report","Config","Store","Help","About","PrivateRoute","component","rest","roles","to","pathname","from","location","rootRoute","path","exact","route","statusRoutes","name","icon","FeatherIcon","badge","variant","text","reportRoutes","configRoutes","header","moreRoute","authRoutes","children","Route","flattenRoutes","routes","flatRoutes","forEach","item","push","allRoutes","authProtectedRoutes","allFlattenRoutes","Routes","map","index","key","App","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","loading","Auth","FORGET_PASSWORD","AppMenu","combineReducers","fetchJSON","url","options","a","fetch","then","response","json","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","body","method","headers","call","messageError","put","message","status","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","id","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","window","indexOf","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById"],"mappings":"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","file":"static/js/main.ed2fc220.chunk.js","sourcesContent":["/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (username, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { username, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(user.accessToken);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","export const BASE_URL = \"http://vikhan.herokuapp.com/\"\r\n","// @flow\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\r\nconst VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\r\nconst HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\r\n\r\n\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent\r\n */\r\nconst withLayout = (WrappedComponent) => {\r\n    const HOC = class extends Component {\r\n        /**\r\n         * Returns the layout component based on different properties\r\n         */\r\n        getLayout = () => {\r\n            if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n            let layoutCls = VerticalLayout;\r\n\r\n            switch (this.props.layout.layoutType) {\r\n                case layoutConstants.LAYOUT_HORIZONTAL:\r\n                    layoutCls = HorizontalLayout;\r\n                    break;\r\n                default:\r\n                    layoutCls = VerticalLayout;\r\n                    break;\r\n            }\r\n            return layoutCls;\r\n        };\r\n\r\n        render() {\r\n            const Layout = this.getLayout();\r\n            return (\r\n                <Suspense fallback={loading()}>\r\n                    <Layout {...this.props}>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Layout>\r\n                </Suspense>\r\n            );\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            layout: state.Layout,\r\n        };\r\n    };\r\n\r\n    return connect(\r\n        mapStateToProps,\r\n        null\r\n    )(HOC);\r\n};\r\n\r\nexport default withLayout;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\n\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// status\r\nconst Status = React.lazy(() => import('../pages/status'));\r\n// dashboard\r\nconst Report = React.lazy(() => import('../pages/report'));\r\n// config\r\nconst Config = React.lazy(() => import('../pages/config'));\r\n//more pages\r\nconst Store = React.lazy(() => import('../pages/store'));\r\nconst Help = React.lazy(() => import('../pages/help'));\r\nconst About = React.lazy(() => import('../pages/about'));\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/Status\" />,\r\n    route: PrivateRoute,\r\n};\r\n\r\n//status\r\nconst statusRoutes = {\r\n    path: '/Status',\r\n    name: 'Status',\r\n    icon: FeatherIcon.Activity,\r\n    badge: {\r\n        variant: 'success',\r\n        text: '1',\r\n    },\r\n    component: Status,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n// dashboards\r\nconst reportRoutes = {\r\n    path: '/Report',\r\n    name: 'Report',\r\n    icon: FeatherIcon.Clipboard,\r\n    component: Report,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n\r\n//Config\r\n\r\nconst configRoutes = {\r\n    path: '/Config',\r\n    name: 'Warehouse',\r\n    header: 'Config',\r\n    icon: FeatherIcon.Box,\r\n    component: Config,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n\r\n//More\r\nconst storeRoutes = {\r\n    path: '/More/Store',\r\n    name: 'Store',\r\n    header: 'More',\r\n    icon: FeatherIcon.ShoppingBag,\r\n    component: Store,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\nconst helpRoutes = {\r\n    path: '/More/Help',\r\n    name: 'Help',\r\n    icon: FeatherIcon.HelpCircle,\r\n    component: Help,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\nconst aboutRoutes = {\r\n    path: '/More/About',\r\n    name: 'About',\r\n    icon: FeatherIcon.GitHub,\r\n    component: About,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\nconst moreRoute = [storeRoutes, helpRoutes, aboutRoutes];\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach((item) => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [rootRoute, statusRoutes, reportRoutes, configRoutes, ...moreRoute, authRoutes];\r\n\r\nconst authProtectedRoutes = [statusRoutes, reportRoutes, configRoutes, ...moreRoute];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\n//import { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n//import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n//import './assets/scss/theme-rtl.scss';\r\n\r\n// configure fake backend\r\n//configureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n    render() {\r\n        return <Routes></Routes>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\n\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = async (url, options = {}) => {\r\n    return await fetch(url, options)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .catch((error) => {\r\n            throw error;\r\n        });\r\n};\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\nimport { BASE_URL} from '../../constants/apiConfig.js';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = (user) => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n    try {\r\n        const response = yield call(fetchJSON, BASE_URL + 'api/auth/signin', options);\r\n        if (!response.messageError) {\r\n            setSession(response);\r\n            yield put(loginUserSuccess(response));\r\n        } else {\r\n            setSession(null);\r\n            yield put(loginUserFailed(response.messageError)); //message\r\n        }\r\n    } catch (error) {\r\n        setSession(null);\r\n        yield put(loginUserFailed(error)); //message\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { username, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, BASE_URL + 'api/auth/signup', options);\r\n        if (!response.messageError) {\r\n            yield put(registerUserSuccess(response));\r\n        } else {\r\n            yield put(registerUserFailed(response.messageError));\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserFailed('Erro'));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\n\r\nexport default function* rootSaga(getState) {\r\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n"],"sourceRoot":""}