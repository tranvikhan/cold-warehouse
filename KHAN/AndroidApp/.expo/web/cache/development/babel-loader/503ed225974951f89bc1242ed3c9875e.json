{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_NOTIFICATION_LIST, GET_NOTIFICATION_LIST_SUCCESS, GET_NOTIFICATION_LIST_FAILED, DELETE_NOTIFICATION, DELETE_NOTIFICATION_SUCCESS, DELETE_NOTIFICATION_FAILED, DELETE_ALL_NOTIFICATION, DELETE_ALL_NOTIFICATION_SUCCESS, DELETE_ALL_NOTIFICATION_FAILED, UPDATE_NOTIFICATION, PUSH_NOTIFICATION } from \"./constants\";\nvar INIT_STATE = {};\n\nvar Notification = function Notification() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_NOTIFICATION_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case GET_NOTIFICATION_LIST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: action.payload.list,\n        loading: false,\n        error: null\n      });\n\n    case GET_NOTIFICATION_LIST_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: [],\n        loading: false,\n        error: action.payload.error\n      });\n\n    case DELETE_NOTIFICATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case DELETE_NOTIFICATION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _toConsumableArray(state.list).filter(function (noti) {\n          return noti._id != action.payload.notification_id;\n        }),\n        loading: false,\n        error: null\n      });\n\n    case DELETE_NOTIFICATION_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case DELETE_ALL_NOTIFICATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case DELETE_ALL_NOTIFICATION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: [],\n        loading: false,\n        error: null\n      });\n\n    case DELETE_ALL_NOTIFICATION_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case UPDATE_NOTIFICATION:\n      var newState = _objectSpread({}, state);\n\n      var list = newState.list;\n      if (!list) return newState;\n      var targetIndex = list.findIndex(function (e) {\n        return e._id === action.payload.id;\n      });\n\n      if (targetIndex != -1) {\n        newState.list[targetIndex] = _objectSpread(_objectSpread({}, newState.list[targetIndex]), action.payload.data);\n      }\n\n      return newState;\n\n    case PUSH_NOTIFICATION:\n      var newList = _toConsumableArray(state.list);\n\n      newList.unshift(action.payload.notification);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: newList\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default Notification;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/notification/reducers.js"],"names":["GET_NOTIFICATION_LIST","GET_NOTIFICATION_LIST_SUCCESS","GET_NOTIFICATION_LIST_FAILED","DELETE_NOTIFICATION","DELETE_NOTIFICATION_SUCCESS","DELETE_NOTIFICATION_FAILED","DELETE_ALL_NOTIFICATION","DELETE_ALL_NOTIFICATION_SUCCESS","DELETE_ALL_NOTIFICATION_FAILED","UPDATE_NOTIFICATION","PUSH_NOTIFICATION","INIT_STATE","Notification","state","action","type","loading","error","list","payload","filter","noti","_id","notification_id","newState","targetIndex","findIndex","e","id","data","newList","unshift","notification"],"mappings":"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","sourcesContent":["import {\r\n    GET_NOTIFICATION_LIST,\r\n    GET_NOTIFICATION_LIST_SUCCESS,\r\n    GET_NOTIFICATION_LIST_FAILED,\r\n\r\n    DELETE_NOTIFICATION,\r\n    DELETE_NOTIFICATION_SUCCESS,\r\n    DELETE_NOTIFICATION_FAILED,\r\n\r\n    DELETE_ALL_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    DELETE_ALL_NOTIFICATION_FAILED,\r\n    \r\n    UPDATE_NOTIFICATION,\r\n    PUSH_NOTIFICATION\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n}\r\nconst Notification = (state = INIT_STATE, action) => {\r\n    switch (action.type){\r\n        case GET_NOTIFICATION_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case GET_NOTIFICATION_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload.list,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case GET_NOTIFICATION_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                list:[],\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case DELETE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case DELETE_NOTIFICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: [...state.list].filter((noti) =>(noti._id != action.payload.notification_id)),\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case DELETE_NOTIFICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case DELETE_ALL_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case DELETE_ALL_NOTIFICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list:[],\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case DELETE_ALL_NOTIFICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n\r\n\r\n        case UPDATE_NOTIFICATION:\r\n            const newState = {...state}\r\n            const list = newState.list;\r\n            if (!list) return newState;\r\n            const targetIndex = list.findIndex(e => (e._id === action.payload.id));\r\n            if (targetIndex!=-1){\r\n                newState.list[targetIndex] = {\r\n                    ...newState.list[targetIndex],\r\n                    ...action.payload.data\r\n                }\r\n            } \r\n            return newState;\r\n        \r\n        case PUSH_NOTIFICATION:\r\n            let newList = [...state.list];\r\n            newList.unshift(action.payload.notification)\r\n            return {\r\n                ...state,list: newList\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default Notification;"]},"metadata":{},"sourceType":"module"}