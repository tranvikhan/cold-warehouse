{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\src\\\\screens\\\\sensor\\\\sensor.component.js\";\nimport React from 'react';\nimport { Divider, Icon, Layout, List, ListItem, useTheme, TopNavigationAction, TopNavigation, Text } from '@ui-kitten/components';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar data = new Array(13).fill({\n  title: 'Cảm biến',\n  description: 'SENSOR0000',\n  value: -Math.random() * 100\n});\nexport default function Sensor(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      state = _ref.state;\n  var theme = useTheme();\n\n  var TemperatureValue = function TemperatureValue(props) {\n    return React.createElement(Text, {\n      category: \"s1\",\n      style: styles.temperature,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, Math.round(props.value * 100) / 100, \"\\xB0C\");\n  };\n\n  var renderItemIcon = function renderItemIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"info\",\n      fill: theme['color-primary-default'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCheckIcon = function renderCheckIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"funnel-outline\",\n      fill: theme['color-primary-default'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var renderTopBar = function renderTopBar() {\n    return React.createElement(TopNavigationAction, {\n      icon: renderCheckIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var styles = StyleSheet.create({\n    temperature: {\n      marginRight: 10\n    }\n  });\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return React.createElement(ListItem, {\n      title: item.title + \" \" + (index + 1),\n      description: item.description + \" \" + (index + 1),\n      accessoryLeft: renderItemIcon,\n      accessoryRight: function accessoryRight() {\n        return React.createElement(TemperatureValue, {\n          value: item.value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return React.createElement(Layout, {\n    style: {\n      flex: 1\n    },\n    level: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(TopNavigation, {\n    alignment: \"center\",\n    title: \"Danh s\\xE1ch c\\u1EA3m bi\\u1EBFn\",\n    accessoryRight: renderTopBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(List, {\n    data: data,\n    renderItem: renderItem,\n    ItemSeparatorComponent: Divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n}\n;","map":{"version":3,"sources":["D:/ReactNative/myapp/src/screens/sensor/sensor.component.js"],"names":["React","Divider","Icon","Layout","List","ListItem","useTheme","TopNavigationAction","TopNavigation","Text","data","Array","fill","title","description","value","Math","random","Sensor","navigation","state","theme","TemperatureValue","props","styles","temperature","round","renderItemIcon","renderCheckIcon","renderTopBar","StyleSheet","create","marginRight","renderItem","item","index","flex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Divider, Icon, Layout, List, ListItem,useTheme,  TopNavigationAction, TopNavigation, Text } from '@ui-kitten/components';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst data = new Array(13).fill({\r\n  title: 'Cảm biến',\r\n  description: 'SENSOR0000',\r\n  value: -Math.random()*100\r\n\r\n});\r\n\r\n\r\n\r\nexport default function Sensor({ navigation, state }) {\r\n    const theme = useTheme();\r\n\r\n    const TemperatureValue =(props) =>{\r\n        return(<Text category='s1' style={styles.temperature}>{Math.round(props.value*100)/100}°C</Text>);\r\n        \r\n    }\r\n    const renderItemIcon = (props) => (\r\n        <Icon {...props} name='info' fill={theme['color-primary-default']}/>\r\n    );\r\n    \r\n    const renderCheckIcon = (props) => (\r\n      <Icon {...props} name='funnel-outline' fill={theme['color-primary-default']}/>\r\n    );\r\n\r\n    const renderTopBar = () => (\r\n      <TopNavigationAction  icon={renderCheckIcon}/>\r\n    );\r\n    const styles = StyleSheet.create({\r\n        temperature:{\r\n            marginRight:10\r\n        }\r\n    })\r\n\r\n  const renderItem = ({ item, index }) => (\r\n        <ListItem\r\n            title={`${item.title} ${index + 1}`}\r\n            description={`${item.description} ${index + 1}`}\r\n            accessoryLeft={renderItemIcon}\r\n            accessoryRight={()=>(\r\n                <TemperatureValue value={item.value} />\r\n            )}\r\n        />\r\n         \r\n    \r\n  );\r\n\r\n  return (\r\n    <Layout style={{flex: 1}} level='2'>\r\n    <TopNavigation\r\n              alignment='center'\r\n              title='Danh sách cảm biến'\r\n              accessoryRight={renderTopBar}\r\n          />\r\n    <Divider />\r\n    <List\r\n      data={data}\r\n      renderItem={renderItem}\r\n      ItemSeparatorComponent={Divider}\r\n    />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}