{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GIT HUB\\\\NCKH2020\\\\KHAN\\\\AndroidApp\\\\src\\\\screens\\\\sensor\\\\sensor.component.js\";\nimport React from \"react\";\nimport { Divider, Icon, Layout, List, ListItem, useTheme, TopNavigationAction, TopNavigation, Text } from \"@ui-kitten/components\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigationState } from \"@react-navigation/native\";\nexport default function Sensor(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      state = _ref.state;\n  var theme = useTheme();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var sensorData = useSelector(function (state) {\n    return state.RoomData.sensorData;\n  });\n  var screenName = useNavigationState(function (state) {\n    return state.routes[state.index].name;\n  });\n  React.useEffect(function () {\n    if (sensorData && sensorData.datas && screenName && screenName === \"Sensor\") {\n      setData(_toConsumableArray(sensorData.datas).map(function (sr) {\n        return {\n          title: sr.name,\n          status: sr.status,\n          value: Math.round(sr.value * 100) / 100\n        };\n      }));\n    }\n  }, [sensorData, screenName]);\n\n  var TemperatureValue = function TemperatureValue(props) {\n    return React.createElement(Text, {\n      category: \"s1\",\n      style: styles.temperature,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, Math.round(props.value * 100) / 100, \" \\xB0C\");\n  };\n\n  var RenderItemIcon = function RenderItemIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      pack: \"feather\",\n      name: \"cpu\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  var renderCheckIcon = function renderCheckIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"funnel-outline\",\n      fill: theme[\"color-primary-default\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  var renderTopBar = function renderTopBar() {\n    return React.createElement(TopNavigationAction, {\n      icon: renderCheckIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 30\n      }\n    });\n  };\n\n  var styles = StyleSheet.create({\n    temperature: {\n      marginRight: 10\n    }\n  });\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    var mapStatus = {\n      RUNNING: {\n        name: \"Đang chạy\",\n        color: \"success\"\n      },\n      ON: {\n        name: \"Đang bật\",\n        color: \"primary\"\n      },\n      OFF: {\n        name: \"Đang tắt\",\n        color: \"danger\"\n      },\n      USSING: {\n        name: \"Đã thêm vào kho\",\n        color: \"warning\"\n      }\n    };\n    return React.createElement(ListItem, {\n      title: function title() {\n        return React.createElement(Text, {\n          category: \"s1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 22\n          }\n        }, item.title);\n      },\n      description: function description() {\n        return React.createElement(Text, {\n          category: \"p2\",\n          status: mapStatus[item.status].color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }, mapStatus[item.status].name);\n      },\n      accessoryLeft: RenderItemIcon,\n      accessoryRight: function accessoryRight() {\n        return React.createElement(TemperatureValue, {\n          value: item.value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 31\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(Layout, {\n    style: {\n      flex: 1\n    },\n    level: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(TopNavigation, {\n    alignment: \"center\",\n    title: \"Danh s\\xE1ch c\\u1EA3m bi\\u1EBFn\",\n    accessoryRight: renderTopBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), React.createElement(List, {\n    data: data,\n    renderItem: renderItem,\n    ItemSeparatorComponent: Divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/screens/sensor/sensor.component.js"],"names":["React","Divider","Icon","Layout","List","ListItem","useTheme","TopNavigationAction","TopNavigation","Text","useSelector","useNavigationState","Sensor","navigation","state","theme","useState","data","setData","sensorData","RoomData","screenName","routes","index","name","useEffect","datas","map","sr","title","status","value","Math","round","TemperatureValue","props","styles","temperature","RenderItemIcon","renderCheckIcon","renderTopBar","StyleSheet","create","marginRight","renderItem","item","mapStatus","RUNNING","color","ON","OFF","USSING","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Icon,\r\n  Layout,\r\n  List,\r\n  ListItem,\r\n  useTheme,\r\n  TopNavigationAction,\r\n  TopNavigation,\r\n  Text,\r\n} from \"@ui-kitten/components\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigationState } from \"@react-navigation/native\";\r\n\r\nexport default function Sensor({ navigation, state }) {\r\n  const theme = useTheme();\r\n  const [data, setData] = React.useState([]);\r\n  const sensorData = useSelector((state) => state.RoomData.sensorData);\r\n  const screenName = useNavigationState(\r\n    (state) => state.routes[state.index].name\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      sensorData &&\r\n      sensorData.datas &&\r\n      screenName &&\r\n      screenName === \"Sensor\"\r\n    ) {\r\n      setData(\r\n        [...sensorData.datas].map((sr) => ({\r\n          title: sr.name,\r\n          status: sr.status,\r\n          value: Math.round(sr.value * 100) / 100,\r\n        }))\r\n      );\r\n    }\r\n  }, [sensorData, screenName]);\r\n\r\n  const TemperatureValue = (props) => {\r\n    return (\r\n      <Text category=\"s1\" style={styles.temperature}>\r\n        {Math.round(props.value * 100) / 100} °C\r\n      </Text>\r\n    );\r\n  };\r\n  const RenderItemIcon = (props) => {\r\n    return <Icon {...props} pack=\"feather\" name=\"cpu\" />;\r\n  };\r\n\r\n  const renderCheckIcon = (props) => (\r\n    <Icon\r\n      {...props}\r\n      name=\"funnel-outline\"\r\n      fill={theme[\"color-primary-default\"]}\r\n    />\r\n  );\r\n\r\n  const renderTopBar = () => <TopNavigationAction icon={renderCheckIcon} />;\r\n  const styles = StyleSheet.create({\r\n    temperature: {\r\n      marginRight: 10,\r\n    },\r\n  });\r\n\r\n  const renderItem = ({ item, index }) => {\r\n    const mapStatus = {\r\n      RUNNING: { name: \"Đang chạy\", color: \"success\" },\r\n      ON: { name: \"Đang bật\", color: \"primary\" },\r\n      OFF: { name: \"Đang tắt\", color: \"danger\" },\r\n      USSING: { name: \"Đã thêm vào kho\", color: \"warning\" },\r\n    };\r\n\r\n    return (\r\n      <ListItem\r\n        title={() => <Text category=\"s1\">{item.title}</Text>}\r\n        description={() => (\r\n          <Text category=\"p2\" status={mapStatus[item.status].color}>\r\n            {mapStatus[item.status].name}\r\n          </Text>\r\n        )}\r\n        accessoryLeft={RenderItemIcon}\r\n        accessoryRight={() => <TemperatureValue value={item.value} />}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }} level=\"2\">\r\n      <TopNavigation\r\n        alignment=\"center\"\r\n        title=\"Danh sách cảm biến\"\r\n        accessoryRight={renderTopBar}\r\n      />\r\n      <Divider />\r\n      <List\r\n        data={data}\r\n        renderItem={renderItem}\r\n        ItemSeparatorComponent={Divider}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}