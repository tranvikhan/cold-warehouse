{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = _regeneratorRuntime.mark(GetAreasApi),\n    _marked2 = _regeneratorRuntime.mark(GetAreaInfoApi),\n    _marked3 = _regeneratorRuntime.mark(AddAreaApi),\n    _marked4 = _regeneratorRuntime.mark(UpdateAreaApi),\n    _marked5 = _regeneratorRuntime.mark(DeleteAreaApi),\n    _marked6 = _regeneratorRuntime.mark(AddMonitorApi),\n    _marked7 = _regeneratorRuntime.mark(UpdateMonitorApi),\n    _marked8 = _regeneratorRuntime.mark(DeleteMonitorApi),\n    _marked9 = _regeneratorRuntime.mark(watchGetAreas),\n    _marked10 = _regeneratorRuntime.mark(watchGetAreaInfo),\n    _marked11 = _regeneratorRuntime.mark(watchAddArea),\n    _marked12 = _regeneratorRuntime.mark(watchUpdateArea),\n    _marked13 = _regeneratorRuntime.mark(watchDeleteArea),\n    _marked14 = _regeneratorRuntime.mark(watchAddMonitor),\n    _marked15 = _regeneratorRuntime.mark(watchUpdateMonitor),\n    _marked16 = _regeneratorRuntime.mark(watchDeleteMonitor),\n    _marked17 = _regeneratorRuntime.mark(roomAreaSaga);\n\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\nimport { ADD_AREA, ADD_MONITOR, DELETE_AREA, DELETE_MONITOR, GET_AREAS, GET_AREA_INFO, UPDATE_AREA, UPDATE_MONITOR } from \"../constants\";\nimport { addAreaFailed, addAreaSuccess, addMonitorFailed, addMonitorSuccess, deleteAreaFailed, deleteAreaSuccess, deleteMonitorFailed, deleteMonitorSuccess, getAreaInfoFailed, getAreaInfoSuccess, getAreasFailed, getAreasSuccess, updateAreaFailed, updateAreaSuccess, updateMonitorFailed, updateMonitorSuccess } from \"../actions\";\nimport { requestApi } from \"../../helpers/api\";\n\nfunction GetAreasApi(_ref) {\n  var _ref$payload, user, room_id, response;\n\n  return _regeneratorRuntime.wrap(function GetAreasApi$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref$payload = _ref.payload, user = _ref$payload.user, room_id = _ref$payload.room_id;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(requestApi, {\n            method: \"get\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/area/all\",\n            params: {\n              room_id: room_id\n            }\n          });\n\n        case 4:\n          response = _context.sent;\n\n          if (!(response.status == \"success\")) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getAreasSuccess(response.result.areas));\n\n        case 8:\n          _context.next = 12;\n          break;\n\n        case 10:\n          _context.next = 12;\n          return put(getAreasFailed(response.result));\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 18;\n          return put(getAreasFailed(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n\nfunction GetAreaInfoApi(_ref2) {\n  var _ref2$payload, user, room_id, area_id, response;\n\n  return _regeneratorRuntime.wrap(function GetAreaInfoApi$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref2$payload = _ref2.payload, user = _ref2$payload.user, room_id = _ref2$payload.room_id, area_id = _ref2$payload.area_id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(requestApi, {\n            method: \"get\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/area/\",\n            params: {\n              room_id: room_id,\n              area_id: area_id\n            }\n          });\n\n        case 4:\n          response = _context2.sent;\n\n          if (!(response.status == \"success\")) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(getAreaInfoSuccess(response.result.area));\n\n        case 8:\n          _context2.next = 12;\n          break;\n\n        case 10:\n          _context2.next = 12;\n          return put(getAreaInfoFailed(response.result));\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(getAreaInfoFailed(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 14]]);\n}\n\nfunction AddAreaApi(_ref3) {\n  var _ref3$payload, user, room_id, area, options, response;\n\n  return _regeneratorRuntime.wrap(function AddAreaApi$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _ref3$payload = _ref3.payload, user = _ref3$payload.user, room_id = _ref3$payload.room_id, area = _ref3$payload.area;\n          options = {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: _objectSpread({\n              room_id: room_id\n            }, area),\n            url: \"api/room/area/create\"\n          };\n          _context3.prev = 2;\n          _context3.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context3.sent;\n\n          if (!(response.status === \"success\")) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 9;\n          return put(addAreaSuccess(response.result.area));\n\n        case 9:\n          _context3.next = 13;\n          break;\n\n        case 11:\n          _context3.next = 13;\n          return put(addAreaFailed(response.result));\n\n        case 13:\n          _context3.next = 19;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](2);\n          _context3.next = 19;\n          return put(addAreaFailed(_context3.t0));\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 15]]);\n}\n\nfunction UpdateAreaApi(_ref4) {\n  var _ref4$payload, user, room_id, area_id, area, options, response;\n\n  return _regeneratorRuntime.wrap(function UpdateAreaApi$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _ref4$payload = _ref4.payload, user = _ref4$payload.user, room_id = _ref4$payload.room_id, area_id = _ref4$payload.area_id, area = _ref4$payload.area;\n          options = {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: _objectSpread({\n              room_id: room_id,\n              area_id: area_id\n            }, area),\n            url: \"api/room/area/edit\"\n          };\n          _context4.prev = 2;\n          _context4.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context4.sent;\n\n          if (!(response.status === \"success\")) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 9;\n          return put(updateAreaSuccess(response.result.area));\n\n        case 9:\n          _context4.next = 13;\n          break;\n\n        case 11:\n          _context4.next = 13;\n          return put(updateAreaFailed(response.result));\n\n        case 13:\n          _context4.next = 19;\n          break;\n\n        case 15:\n          _context4.prev = 15;\n          _context4.t0 = _context4[\"catch\"](2);\n          _context4.next = 19;\n          return put(updateAreaFailed(_context4.t0));\n\n        case 19:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 15]]);\n}\n\nfunction DeleteAreaApi(_ref5) {\n  var _ref5$payload, user, room_id, area_id, options, response;\n\n  return _regeneratorRuntime.wrap(function DeleteAreaApi$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _ref5$payload = _ref5.payload, user = _ref5$payload.user, room_id = _ref5$payload.room_id, area_id = _ref5$payload.area_id;\n          options = {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: {\n              room_id: room_id,\n              area_id: area_id\n            },\n            url: \"api/room/area/\"\n          };\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context5.sent;\n\n          if (!(response.status === \"success\")) {\n            _context5.next = 11;\n            break;\n          }\n\n          _context5.next = 9;\n          return put(deleteAreaSuccess(area_id));\n\n        case 9:\n          _context5.next = 13;\n          break;\n\n        case 11:\n          _context5.next = 13;\n          return put(deleteAreaFailed(response.result));\n\n        case 13:\n          _context5.next = 19;\n          break;\n\n        case 15:\n          _context5.prev = 15;\n          _context5.t0 = _context5[\"catch\"](2);\n          _context5.next = 19;\n          return put(deleteAreaFailed(_context5.t0));\n\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 15]]);\n}\n\nfunction AddMonitorApi(_ref6) {\n  var _ref6$payload, user, room_id, area_id, monitor, options, response;\n\n  return _regeneratorRuntime.wrap(function AddMonitorApi$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _ref6$payload = _ref6.payload, user = _ref6$payload.user, room_id = _ref6$payload.room_id, area_id = _ref6$payload.area_id, monitor = _ref6$payload.monitor;\n          options = {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: {\n              room_id: room_id,\n              area_id: area_id,\n              monitor: monitor\n            },\n            url: \"api/room/area/monitor/add\"\n          };\n          _context6.prev = 2;\n          _context6.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context6.sent;\n\n          if (!(response.status === \"success\")) {\n            _context6.next = 11;\n            break;\n          }\n\n          _context6.next = 9;\n          return put(addMonitorSuccess(response.result.monitors));\n\n        case 9:\n          _context6.next = 13;\n          break;\n\n        case 11:\n          _context6.next = 13;\n          return put(addMonitorFailed(response.result));\n\n        case 13:\n          _context6.next = 19;\n          break;\n\n        case 15:\n          _context6.prev = 15;\n          _context6.t0 = _context6[\"catch\"](2);\n          _context6.next = 19;\n          return put(addMonitorFailed(_context6.t0));\n\n        case 19:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[2, 15]]);\n}\n\nfunction UpdateMonitorApi(_ref7) {\n  var _ref7$payload, user, room_id, area_id, monitor_id, monitor, options, response;\n\n  return _regeneratorRuntime.wrap(function UpdateMonitorApi$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _ref7$payload = _ref7.payload, user = _ref7$payload.user, room_id = _ref7$payload.room_id, area_id = _ref7$payload.area_id, monitor_id = _ref7$payload.monitor_id, monitor = _ref7$payload.monitor;\n          options = {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: {\n              room_id: room_id,\n              area_id: area_id,\n              monitor_id: monitor_id,\n              monitor: monitor\n            },\n            url: \"api/room/area/monitor/edit\"\n          };\n          _context7.prev = 2;\n          _context7.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context7.sent;\n\n          if (!(response.status === \"success\")) {\n            _context7.next = 11;\n            break;\n          }\n\n          _context7.next = 9;\n          return put(updateMonitorSuccess(response.result.monitor));\n\n        case 9:\n          _context7.next = 13;\n          break;\n\n        case 11:\n          _context7.next = 13;\n          return put(updateMonitorFailed(response.result));\n\n        case 13:\n          _context7.next = 19;\n          break;\n\n        case 15:\n          _context7.prev = 15;\n          _context7.t0 = _context7[\"catch\"](2);\n          _context7.next = 19;\n          return put(updateMonitorFailed(_context7.t0));\n\n        case 19:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[2, 15]]);\n}\n\nfunction DeleteMonitorApi(_ref8) {\n  var _ref8$payload, user, room_id, area_id, monitor_id, options, response;\n\n  return _regeneratorRuntime.wrap(function DeleteMonitorApi$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _ref8$payload = _ref8.payload, user = _ref8$payload.user, room_id = _ref8$payload.room_id, area_id = _ref8$payload.area_id, monitor_id = _ref8$payload.monitor_id;\n          options = {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: {\n              room_id: room_id,\n              area_id: area_id,\n              monitor_id: monitor_id\n            },\n            url: \"api/room/area/monitor/\"\n          };\n          _context8.prev = 2;\n          _context8.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context8.sent;\n\n          if (!(response.status === \"success\")) {\n            _context8.next = 11;\n            break;\n          }\n\n          _context8.next = 9;\n          return put(deleteMonitorSuccess(response.result.monitors));\n\n        case 9:\n          _context8.next = 13;\n          break;\n\n        case 11:\n          _context8.next = 13;\n          return put(deleteMonitorFailed(response.result));\n\n        case 13:\n          _context8.next = 19;\n          break;\n\n        case 15:\n          _context8.prev = 15;\n          _context8.t0 = _context8[\"catch\"](2);\n          _context8.next = 19;\n          return put(deleteMonitorFailed(_context8.t0));\n\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[2, 15]]);\n}\n\nfunction watchGetAreas() {\n  return _regeneratorRuntime.wrap(function watchGetAreas$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(GET_AREAS, GetAreasApi);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchGetAreaInfo() {\n  return _regeneratorRuntime.wrap(function watchGetAreaInfo$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(GET_AREA_INFO, GetAreaInfoApi);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchAddArea() {\n  return _regeneratorRuntime.wrap(function watchAddArea$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(ADD_AREA, AddAreaApi);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchUpdateArea() {\n  return _regeneratorRuntime.wrap(function watchUpdateArea$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UPDATE_AREA, UpdateAreaApi);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchDeleteArea() {\n  return _regeneratorRuntime.wrap(function watchDeleteArea$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(DELETE_AREA, DeleteAreaApi);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchAddMonitor() {\n  return _regeneratorRuntime.wrap(function watchAddMonitor$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(ADD_MONITOR, AddMonitorApi);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchUpdateMonitor() {\n  return _regeneratorRuntime.wrap(function watchUpdateMonitor$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeEvery(UPDATE_MONITOR, UpdateMonitorApi);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchDeleteMonitor() {\n  return _regeneratorRuntime.wrap(function watchDeleteMonitor$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(DELETE_MONITOR, DeleteMonitorApi);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction roomAreaSaga() {\n  return _regeneratorRuntime.wrap(function roomAreaSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return all([fork(watchGetAreas), fork(watchGetAreaInfo), fork(watchAddArea), fork(watchUpdateArea), fork(watchDeleteArea), fork(watchAddMonitor), fork(watchUpdateMonitor), fork(watchDeleteMonitor)]);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nexport default roomAreaSaga;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomArea/saga.js"],"names":["GetAreasApi","GetAreaInfoApi","AddAreaApi","UpdateAreaApi","DeleteAreaApi","AddMonitorApi","UpdateMonitorApi","DeleteMonitorApi","watchGetAreas","watchGetAreaInfo","watchAddArea","watchUpdateArea","watchDeleteArea","watchAddMonitor","watchUpdateMonitor","watchDeleteMonitor","roomAreaSaga","all","call","fork","takeEvery","put","ADD_AREA","ADD_MONITOR","DELETE_AREA","DELETE_MONITOR","GET_AREAS","GET_AREA_INFO","UPDATE_AREA","UPDATE_MONITOR","addAreaFailed","addAreaSuccess","addMonitorFailed","addMonitorSuccess","deleteAreaFailed","deleteAreaSuccess","deleteMonitorFailed","deleteMonitorSuccess","getAreaInfoFailed","getAreaInfoSuccess","getAreasFailed","getAreasSuccess","updateAreaFailed","updateAreaSuccess","updateMonitorFailed","updateMonitorSuccess","requestApi","payload","user","room_id","method","headers","accessToken","url","params","response","status","result","areas","area_id","area","options","data","monitor","monitors","monitor_id"],"mappings":"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","sourcesContent":["import { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_AREA,\r\n  ADD_MONITOR,\r\n  DELETE_AREA,\r\n  DELETE_MONITOR,\r\n  GET_AREAS,\r\n  GET_AREA_INFO,\r\n  UPDATE_AREA,\r\n  UPDATE_MONITOR,\r\n} from \"../constants\";\r\n\r\nimport {\r\n  addAreaFailed,\r\n  addAreaSuccess,\r\n  addMonitorFailed,\r\n  addMonitorSuccess,\r\n  deleteAreaFailed,\r\n  deleteAreaSuccess,\r\n  deleteMonitorFailed,\r\n  deleteMonitorSuccess,\r\n  getAreaInfoFailed,\r\n  getAreaInfoSuccess,\r\n  getAreasFailed,\r\n  getAreasSuccess,\r\n  updateAreaFailed,\r\n  updateAreaSuccess,\r\n  updateMonitorFailed,\r\n  updateMonitorSuccess,\r\n} from \"../actions\";\r\nimport { requestApi } from \"../../helpers/api\";\r\n\r\nfunction* GetAreasApi({ payload: { user, room_id } }) {\r\n  try {\r\n    const response = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/area/all\",\r\n      params: { room_id },\r\n    });\r\n    if (response.status == \"success\") {\r\n      yield put(getAreasSuccess(response.result.areas));\r\n    } else {\r\n      yield put(getAreasFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getAreasFailed(error));\r\n  }\r\n}\r\n\r\nfunction* GetAreaInfoApi({ payload: { user, room_id, area_id } }) {\r\n  try {\r\n    const response = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/area/\",\r\n      params: {\r\n        room_id,\r\n        area_id,\r\n      },\r\n    });\r\n    if (response.status == \"success\") {\r\n      yield put(getAreaInfoSuccess(response.result.area));\r\n    } else {\r\n      yield put(getAreaInfoFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getAreaInfoFailed(error));\r\n  }\r\n}\r\n\r\nfunction* AddAreaApi({ payload: { user, room_id, area } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: {\r\n      room_id,\r\n      ...area,\r\n    },\r\n    url: \"api/room/area/create\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(addAreaSuccess(response.result.area));\r\n    } else {\r\n      yield put(addAreaFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(addAreaFailed(error));\r\n  }\r\n}\r\n\r\nfunction* UpdateAreaApi({ payload: { user, room_id, area_id, area } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id, ...area },\r\n    url: \"api/room/area/edit\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(updateAreaSuccess(response.result.area));\r\n    } else {\r\n      yield put(updateAreaFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(updateAreaFailed(error));\r\n  }\r\n}\r\nfunction* DeleteAreaApi({ payload: { user, room_id, area_id } }) {\r\n  const options = {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id },\r\n    url: \"api/room/area/\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(deleteAreaSuccess(area_id));\r\n    } else {\r\n      yield put(deleteAreaFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteAreaFailed(error));\r\n  }\r\n}\r\n\r\n////\r\n\r\nfunction* AddMonitorApi({ payload: { user, room_id, area_id, monitor } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: {\r\n      room_id,\r\n      area_id,\r\n      monitor: monitor,\r\n    },\r\n    url: \"api/room/area/monitor/add\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(addMonitorSuccess(response.result.monitors));\r\n    } else {\r\n      yield put(addMonitorFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(addMonitorFailed(error));\r\n  }\r\n}\r\n\r\nfunction* UpdateMonitorApi({\r\n  payload: { user, room_id, area_id, monitor_id, monitor },\r\n}) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id, monitor_id, monitor: monitor },\r\n    url: \"api/room/area/monitor/edit\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(updateMonitorSuccess(response.result.monitor));\r\n    } else {\r\n      yield put(updateMonitorFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(updateMonitorFailed(error));\r\n  }\r\n}\r\nfunction* DeleteMonitorApi({\r\n  payload: { user, room_id, area_id, monitor_id },\r\n}) {\r\n  const options = {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id, monitor_id },\r\n    url: \"api/room/area/monitor/\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(deleteMonitorSuccess(response.result.monitors));\r\n    } else {\r\n      yield put(deleteMonitorFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteMonitorFailed(error));\r\n  }\r\n}\r\n\r\nfunction* watchGetAreas() {\r\n  yield takeEvery(GET_AREAS, GetAreasApi);\r\n}\r\n\r\nfunction* watchGetAreaInfo() {\r\n  yield takeEvery(GET_AREA_INFO, GetAreaInfoApi);\r\n}\r\n\r\nfunction* watchAddArea() {\r\n  yield takeEvery(ADD_AREA, AddAreaApi);\r\n}\r\n\r\nfunction* watchUpdateArea() {\r\n  yield takeEvery(UPDATE_AREA, UpdateAreaApi);\r\n}\r\nfunction* watchDeleteArea() {\r\n  yield takeEvery(DELETE_AREA, DeleteAreaApi);\r\n}\r\n\r\nfunction* watchAddMonitor() {\r\n  yield takeEvery(ADD_MONITOR, AddMonitorApi);\r\n}\r\n\r\nfunction* watchUpdateMonitor() {\r\n  yield takeEvery(UPDATE_MONITOR, UpdateMonitorApi);\r\n}\r\nfunction* watchDeleteMonitor() {\r\n  yield takeEvery(DELETE_MONITOR, DeleteMonitorApi);\r\n}\r\n\r\nfunction* roomAreaSaga() {\r\n  yield all([\r\n    fork(watchGetAreas),\r\n    fork(watchGetAreaInfo),\r\n    fork(watchAddArea),\r\n    fork(watchUpdateArea),\r\n    fork(watchDeleteArea),\r\n    fork(watchAddMonitor),\r\n    fork(watchUpdateMonitor),\r\n    fork(watchDeleteMonitor),\r\n  ]);\r\n}\r\n\r\nexport default roomAreaSaga;\r\n"]},"metadata":{},"sourceType":"module"}