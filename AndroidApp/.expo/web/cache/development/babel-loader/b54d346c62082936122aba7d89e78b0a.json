{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_AREA_DATA, GET_AREA_DATA_SUCCESS, GET_AREA_DATA_FAILED, GET_CURRENT_DATA, GET_CURRENT_DATA_SUCCESS, GET_CURRENT_DATA_FAILED, GET_SENSOR_DATA, GET_SENSOR_DATA_SUCCESS, GET_SENSOR_DATA_FAILED, GET_CUBE_DATA, GET_CUBE_DATA_SUCCESS, GET_CUBE_DATA_FAILED } from \"./constants\";\nvar INIT_STATE = {\n  areaData: null,\n  sensorData: null,\n  cubeData: null,\n  currentData: null,\n  loading: false,\n  error: null\n};\n\nvar RoomData = function RoomData() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_AREA_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        areaData: null\n      });\n\n    case GET_AREA_DATA_SUCCESS:\n      var cr = state.areaData ? _toConsumableArray(state.areaData) : new Array();\n      cr.push(action.payload.data);\n\n      if (cr.length > 5) {\n        cr.shift();\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        areaData: cr,\n        loading: false,\n        error: null\n      });\n\n    case GET_AREA_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error,\n        areaData: null\n      });\n\n    case GET_CURRENT_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        cubeData: null\n      });\n\n    case GET_CURRENT_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentData: action.payload.data,\n        loading: false,\n        error: null\n      });\n\n    case GET_CURRENT_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentData: null,\n        loading: false,\n        error: action.payload.error\n      });\n\n    case GET_SENSOR_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case GET_SENSOR_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sensorData: action.payload.data,\n        loading: false,\n        error: null\n      });\n\n    case GET_SENSOR_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sensorData: null,\n        loading: false,\n        error: action.payload.error\n      });\n\n    case GET_CUBE_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        cubeData: null\n      });\n\n    case GET_CUBE_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cubeData: action.payload.data,\n        loading: false,\n        error: null\n      });\n\n    case GET_CUBE_DATA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cubeData: null,\n        loading: false,\n        error: action.payload.error\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default RoomData;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomData/reducers.js"],"names":["GET_AREA_DATA","GET_AREA_DATA_SUCCESS","GET_AREA_DATA_FAILED","GET_CURRENT_DATA","GET_CURRENT_DATA_SUCCESS","GET_CURRENT_DATA_FAILED","GET_SENSOR_DATA","GET_SENSOR_DATA_SUCCESS","GET_SENSOR_DATA_FAILED","GET_CUBE_DATA","GET_CUBE_DATA_SUCCESS","GET_CUBE_DATA_FAILED","INIT_STATE","areaData","sensorData","cubeData","currentData","loading","error","RoomData","state","action","type","cr","Array","push","payload","data","length","shift"],"mappings":"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","sourcesContent":["import {\r\n  GET_AREA_DATA,\r\n  GET_AREA_DATA_SUCCESS,\r\n  GET_AREA_DATA_FAILED,\r\n  GET_CURRENT_DATA,\r\n  GET_CURRENT_DATA_SUCCESS,\r\n  GET_CURRENT_DATA_FAILED,\r\n  GET_SENSOR_DATA,\r\n  GET_SENSOR_DATA_SUCCESS,\r\n  GET_SENSOR_DATA_FAILED,\r\n  GET_CUBE_DATA,\r\n  GET_CUBE_DATA_SUCCESS,\r\n  GET_CUBE_DATA_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  areaData: null,\r\n  sensorData: null,\r\n  cubeData: null,\r\n  currentData: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\nconst RoomData = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_AREA_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        areaData: null,\r\n      };\r\n    case GET_AREA_DATA_SUCCESS:\r\n      let cr = state.areaData ? [...state.areaData] : new Array();\r\n      cr.push(action.payload.data);\r\n      if (cr.length > 5) {\r\n        cr.shift();\r\n      }\r\n      return {\r\n        ...state,\r\n        areaData: cr,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_AREA_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        areaData: null,\r\n      };\r\n    case GET_CURRENT_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        cubeData: null,\r\n      };\r\n    case GET_CURRENT_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentData: action.payload.data,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_CURRENT_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        currentData: null,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case GET_SENSOR_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case GET_SENSOR_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sensorData: action.payload.data,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_SENSOR_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        sensorData: null,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case GET_CUBE_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        cubeData: null,\r\n      };\r\n    case GET_CUBE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cubeData: action.payload.data,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_CUBE_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        cubeData: null,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\nexport default RoomData;\r\n"]},"metadata":{},"sourceType":"module"}