{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_AREA_INFO, GET_AREA_INFO_SUCCESS, GET_AREA_INFO_FAILED, GET_AREAS, GET_AREAS_SUCCESS, GET_AREAS_FAILED, ADD_AREA, ADD_AREA_SUCCESS, ADD_AREA_FAILED, ADD_MONITOR, ADD_MONITOR_SUCCESS, ADD_MONITOR_FAILED, UPDATE_AREA, UPDATE_AREA_SUCCESS, UPDATE_AREA_FAILED, UPDATE_MONITOR, UPDATE_MONITOR_SUCCESS, UPDATE_MONITOR_FAILED, DELETE_AREA, DELETE_AREA_SUCCESS, DELETE_AREA_FAILED, DELETE_MONITOR, DELETE_MONITOR_SUCCESS, DELETE_MONITOR_FAILED } from \"./constants\";\nvar INIT_STATE = {\n  loading: false,\n  error: null,\n  areas: [],\n  currentArea: null\n};\n\nvar RoomArea = function RoomArea() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_AREAS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null,\n        currentArea: null\n      });\n\n    case GET_AREAS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        areas: action.payload.areas\n      });\n\n    case GET_AREAS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error,\n        areas: []\n      });\n\n    case GET_AREA_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case GET_AREA_INFO_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        currentArea: action.payload.area\n      });\n\n    case GET_AREA_INFO_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error,\n        currentArea: null\n      });\n\n    case ADD_AREA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case ADD_AREA_SUCCESS:\n      var newAreas = _toConsumableArray(state.areas);\n\n      newAreas.push({\n        _id: action.payload.area._id,\n        name: action.payload.area.name\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        areas: newAreas,\n        currentArea: action.payload.area\n      });\n\n    case ADD_AREA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case UPDATE_AREA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case UPDATE_AREA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        areas: _toConsumableArray(state.areas).map(function (area) {\n          return area._id === action.payload.area._id ? {\n            _id: area._id,\n            name: action.payload.area.name\n          } : area;\n        }),\n        currentArea: action.payload.area\n      });\n\n    case UPDATE_AREA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case DELETE_AREA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case DELETE_AREA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        areas: _toConsumableArray(state.areas).filter(function (area) {\n          return area._id != action.payload.area_id;\n        }),\n        currentArea: null\n      });\n\n    case DELETE_AREA_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case ADD_MONITOR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case ADD_MONITOR_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        currentArea: _objectSpread(_objectSpread({}, state.currentArea), {}, {\n          monitors: action.payload.monitors\n        })\n      });\n\n    case ADD_MONITOR_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case UPDATE_MONITOR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case UPDATE_MONITOR_SUCCESS:\n      var newMonitors = _toConsumableArray(state.currentArea.monitors);\n\n      newMonitors = newMonitors.map(function (monitor) {\n        return monitor._id === action.payload.monitor._id ? action.payload.monitor : monitor;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        currentArea: _objectSpread(_objectSpread({}, state.currentArea), {}, {\n          monitors: newMonitors\n        })\n      });\n\n    case UPDATE_MONITOR_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    case DELETE_MONITOR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n\n    case DELETE_MONITOR_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: null,\n        currentArea: _objectSpread(_objectSpread({}, state.currentArea), {}, {\n          monitors: action.payload.monitors\n        })\n      });\n\n    case DELETE_MONITOR_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default RoomArea;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomArea/reducers.js"],"names":["GET_AREA_INFO","GET_AREA_INFO_SUCCESS","GET_AREA_INFO_FAILED","GET_AREAS","GET_AREAS_SUCCESS","GET_AREAS_FAILED","ADD_AREA","ADD_AREA_SUCCESS","ADD_AREA_FAILED","ADD_MONITOR","ADD_MONITOR_SUCCESS","ADD_MONITOR_FAILED","UPDATE_AREA","UPDATE_AREA_SUCCESS","UPDATE_AREA_FAILED","UPDATE_MONITOR","UPDATE_MONITOR_SUCCESS","UPDATE_MONITOR_FAILED","DELETE_AREA","DELETE_AREA_SUCCESS","DELETE_AREA_FAILED","DELETE_MONITOR","DELETE_MONITOR_SUCCESS","DELETE_MONITOR_FAILED","INIT_STATE","loading","error","areas","currentArea","RoomArea","state","action","type","payload","area","newAreas","push","_id","name","map","filter","area_id","monitors","newMonitors","monitor"],"mappings":"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","sourcesContent":["import {\r\n  GET_AREA_INFO,\r\n  GET_AREA_INFO_SUCCESS,\r\n  GET_AREA_INFO_FAILED,\r\n  GET_AREAS,\r\n  GET_AREAS_SUCCESS,\r\n  GET_AREAS_FAILED,\r\n  ADD_AREA,\r\n  ADD_AREA_SUCCESS,\r\n  ADD_AREA_FAILED,\r\n  ADD_MONITOR,\r\n  ADD_MONITOR_SUCCESS,\r\n  ADD_MONITOR_FAILED,\r\n  UPDATE_AREA,\r\n  UPDATE_AREA_SUCCESS,\r\n  UPDATE_AREA_FAILED,\r\n  UPDATE_MONITOR,\r\n  UPDATE_MONITOR_SUCCESS,\r\n  UPDATE_MONITOR_FAILED,\r\n  DELETE_AREA,\r\n  DELETE_AREA_SUCCESS,\r\n  DELETE_AREA_FAILED,\r\n  DELETE_MONITOR,\r\n  DELETE_MONITOR_SUCCESS,\r\n  DELETE_MONITOR_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  loading: false,\r\n  error: null,\r\n  areas: [],\r\n  currentArea: null,\r\n};\r\n\r\nconst RoomArea = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_AREAS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        currentArea: null,\r\n      };\r\n\r\n    case GET_AREAS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: action.payload.areas,\r\n      };\r\n\r\n    case GET_AREAS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        areas: [],\r\n      };\r\n\r\n    case GET_AREA_INFO:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case GET_AREA_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: action.payload.area,\r\n      };\r\n    case GET_AREA_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        currentArea: null,\r\n      };\r\n\r\n    case ADD_AREA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ADD_AREA_SUCCESS:\r\n      let newAreas = [...state.areas];\r\n      newAreas.push({\r\n        _id: action.payload.area._id,\r\n        name: action.payload.area.name,\r\n      });\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: newAreas,\r\n        currentArea: action.payload.area,\r\n      };\r\n    case ADD_AREA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case UPDATE_AREA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case UPDATE_AREA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: [...state.areas].map((area) =>\r\n          area._id === action.payload.area._id\r\n            ? {\r\n                _id: area._id,\r\n                name: action.payload.area.name,\r\n              }\r\n            : area\r\n        ),\r\n        currentArea: action.payload.area,\r\n      };\r\n    case UPDATE_AREA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case DELETE_AREA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_AREA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: [...state.areas].filter(\r\n          (area) => area._id != action.payload.area_id\r\n        ),\r\n        currentArea: null,\r\n      };\r\n    case DELETE_AREA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case ADD_MONITOR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ADD_MONITOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: {\r\n          ...state.currentArea,\r\n          monitors: action.payload.monitors,\r\n        },\r\n      };\r\n    case ADD_MONITOR_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case UPDATE_MONITOR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case UPDATE_MONITOR_SUCCESS:\r\n      let newMonitors = [...state.currentArea.monitors];\r\n      newMonitors = newMonitors.map((monitor) =>\r\n        monitor._id === action.payload.monitor._id\r\n          ? action.payload.monitor\r\n          : monitor\r\n      );\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: {\r\n          ...state.currentArea,\r\n          monitors: newMonitors,\r\n        },\r\n      };\r\n    case UPDATE_MONITOR_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case DELETE_MONITOR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_MONITOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: {\r\n          ...state.currentArea,\r\n          monitors: action.payload.monitors,\r\n        },\r\n      };\r\n    case DELETE_MONITOR_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default RoomArea;\r\n"]},"metadata":{},"sourceType":"module"}