{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\src\\\\screens\\\\status\\\\TChart.js\";\nimport { ExpoWebGLRenderingContext, GLView } from 'expo-gl';\nimport { Renderer, TextureLoader } from 'expo-three';\nimport OrbitControls from 'expo-three-orbit-controls';\nimport * as React from 'react';\nimport * as THREE from 'three';\nexport default function TChart(props) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      camera = _React$useState2[0],\n      setCamera = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      animate = _React$useState4[0],\n      setAnimate = _React$useState4[1];\n\n  var world = React.useRef(null);\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      mainFrame = _React$useState6[0],\n      setFrame = _React$useState6[1];\n\n  var _React$useState7 = React.useState(props.data),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      data = _React$useState8[0],\n      setData = _React$useState8[1];\n\n  React.useEffect(function () {\n    return function () {\n      return clearTimeout(animate);\n    };\n  }, []);\n\n  var initWorld = function initWorld(context, defaultSceneColor) {\n    var width = context.drawingBufferWidth,\n        height = context.drawingBufferHeight;\n    console.info(\"makeWorld\");\n    var scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xaaffaa);\n    var camera = new THREE.PerspectiveCamera(60, width / height, 1, 1000);\n    camera.up.set(0, 0, 1);\n    camera.position.set(350, 350, 350);\n    setCamera(camera);\n    var renderer = new Renderer({\n      context: context\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(defaultSceneColor);\n    var axesHelper = new THREE.AxesHelper(7749);\n    scene.add(axesHelper);\n\n    var animate = function animate() {\n      var hHandle = requestAnimationFrame(animate);\n      setAnimate(hHandle);\n      context.endFrameEXP();\n      renderer.render(scene, camera);\n    };\n\n    animate();\n    return {\n      scene: scene,\n      camera: camera,\n      renderer: renderer\n    };\n  };\n\n  var makeDoor = function makeDoor() {\n    var oConfig = props.config;\n    console.info(\"makeDoor\");\n    var oSettings = oConfig.door;\n    if (!oSettings.show || !world.current.scene) return;\n    var oCSize = oConfig.size;\n    var oSize = {\n      x: oCSize.x * oCSize.tilesize,\n      y: oCSize.y * oCSize.tilesize,\n      z: oCSize.z * oCSize.tilesize,\n      e: 20 * oCSize.tilesize\n    };\n    var oDirection = {\n      A: {\n        x0: oSize.x / 2,\n        y0: -oSize.e,\n        z0: oSize.z / 2,\n        x1: oSize.x / 2,\n        y1: oSize.y,\n        z1: oSize.z / 2\n      },\n      B: {\n        x0: oSize.x / 2,\n        y0: oSize.y + oSize.e,\n        z0: oSize.z / 2,\n        x1: oSize.x / 2,\n        y1: oSize.y,\n        z1: oSize.z / 2\n      },\n      C: {\n        x0: -oSize.e,\n        y0: oSize.y / 2,\n        z0: oSize.z / 2,\n        x1: oSize.x,\n        y1: oSize.y / 2,\n        z1: oSize.z / 2\n      },\n      D: {\n        x0: oSize.x + oSize.e,\n        y0: oSize.y / 2,\n        z0: oSize.z / 2,\n        x1: oSize.x,\n        y1: oSize.y / 2,\n        z1: oSize.z / 2\n      }\n    };\n    var oVector = oDirection[oSettings.direction];\n    var vDirection = new THREE.Vector3(oVector.x1 - oVector.x0, oVector.y1 - oVector.y0, oVector.z1 - oVector.z0);\n    var vOrigin = new THREE.Vector3(oVector.x0, oVector.y0, oVector.z0);\n    var iTileSize = oCSize.tilesize;\n    var oDoor = new THREE.ArrowHelper(vDirection.normalize(), vOrigin, 8 * iTileSize, 0x000000, 2 * iTileSize, 1 * iTileSize);\n    oDoor.up.set(0, 0, 1);\n    world.current.scene.add(oDoor);\n  };\n\n  var makeWireFrame = function makeWireFrame(oConfig) {\n    console.info(\"makeWireFrame\");\n    var oMaterial = new THREE.LineBasicMaterial({\n      color: 0x000000,\n      linewidth: 2\n    });\n    var oSize = oConfig.size;\n    var x = oSize.x * oSize.tilesize;\n    var y = oSize.y * oSize.tilesize;\n    var z = oSize.z * oSize.tilesize;\n    var aPoints = [];\n    aPoints.push(new THREE.Vector3(0, 0, 0));\n    aPoints.push(new THREE.Vector3(x, 0, 0));\n    aPoints.push(new THREE.Vector3(x, y, 0));\n    aPoints.push(new THREE.Vector3(0, y, 0));\n    aPoints.push(new THREE.Vector3(0, 0, 0));\n    aPoints.push(new THREE.Vector3(0, 0, z));\n    aPoints.push(new THREE.Vector3(x, 0, z));\n    aPoints.push(new THREE.Vector3(x, y, z));\n    aPoints.push(new THREE.Vector3(0, y, z));\n    aPoints.push(new THREE.Vector3(0, 0, z));\n    var oGeometry1 = new THREE.BufferGeometry().setFromPoints(aPoints);\n    aPoints = [];\n    aPoints.push(new THREE.Vector3(x, 0, 0));\n    aPoints.push(new THREE.Vector3(x, 0, z));\n    aPoints.push(new THREE.Vector3(x, y, z));\n    aPoints.push(new THREE.Vector3(x, y, 0));\n    aPoints.push(new THREE.Vector3(0, y, 0));\n    aPoints.push(new THREE.Vector3(0, y, z));\n    var oGeometry2 = new THREE.BufferGeometry().setFromPoints(aPoints);\n    var oLine1 = new THREE.Line(oGeometry1, oMaterial);\n    world.current.scene.add(oLine1);\n    var oLine2 = new THREE.Line(oGeometry2, oMaterial);\n    world.current.scene.add(oLine2);\n  };\n\n  var calcSize = function calcSize() {\n    var result = {\n      x: props.config.size.x,\n      y: props.config.size.y,\n      z: props.config.size.z,\n\n      get smallerThanZero() {\n        return this.x * this.y * this.z < 0;\n      }\n\n    };\n    result[props.slice.axis.toLowerCase()] -= props.slice.level;\n    if (result.smallerThanZero) return props.config.size;\n    return result;\n  };\n\n  var makeFrame = function makeFrame(oConfig, oSlice) {\n    console.info(\"makeFrame\");\n    var tileSize = oConfig.size.tilesize;\n    var cube = new THREE.Object3D();\n\n    for (var ii = 0; ii < 6; ii++) {\n      cube.add(createAFace(ii));\n    }\n\n    world.current.scene.add(cube);\n    return cube;\n\n    function createAFace(order) {\n      var fPi = Math.PI;\n      var size = calcSize(oConfig, oSlice);\n      var oFaceInfo = {\n        0: {\n          width: 'x',\n          height: 'z',\n          angle: new THREE.Vector3(3 * fPi / 2, 0, 0),\n\n          get position() {\n            return new THREE.Vector3(size[this.width] * tileSize / 2, 0, size[this.height] * tileSize / 2);\n          },\n\n          side: THREE.BackSide\n        },\n        1: {\n          width: 'x',\n          height: 'z',\n          angle: new THREE.Vector3(3 * fPi / 2, 0, 0),\n\n          get position() {\n            return new THREE.Vector3(size[this.width] * tileSize / 2, size.y * tileSize, size[this.height] * tileSize / 2);\n          },\n\n          side: THREE.FrontSide\n        },\n        2: {\n          width: 'y',\n          height: 'z',\n          angle: new THREE.Vector3(3 * fPi / 2, 3 * fPi / 2, 0),\n\n          get position() {\n            return new THREE.Vector3(0, size[this.width] * tileSize / 2, size[this.height] * tileSize / 2);\n          },\n\n          side: THREE.FrontSide\n        },\n        3: {\n          width: 'y',\n          height: 'z',\n          angle: new THREE.Vector3(3 * fPi / 2, 3 * fPi / 2, 0),\n\n          get position() {\n            return new THREE.Vector3(size.x * tileSize, size[this.width] * tileSize / 2, size[this.height] * tileSize / 2);\n          },\n\n          side: THREE.BackSide\n        },\n        4: {\n          width: 'x',\n          height: 'y',\n          angle: new THREE.Vector3(fPi, 0, 0),\n\n          get position() {\n            return new THREE.Vector3(size[this.width] * tileSize / 2, size[this.height] * tileSize / 2, 0);\n          },\n\n          side: THREE.FrontSide\n        },\n        5: {\n          width: 'x',\n          height: 'y',\n          angle: new THREE.Vector3(fPi, 0, 0),\n\n          get position() {\n            return new THREE.Vector3(size[this.width] * tileSize / 2, size[this.height] * tileSize / 2, size.z * tileSize);\n          },\n\n          side: THREE.BackSide\n        }\n      };\n      var oCurrFI = oFaceInfo[order];\n      var tileGeometry = new THREE.PlaneGeometry(size[oCurrFI.width] * tileSize, size[oCurrFI.height] * tileSize, size[oCurrFI.width], size[oCurrFI.height]);\n      var tileMaterial = new THREE.MeshBasicMaterial({\n        vertexColors: THREE.FaceColors,\n        side: oCurrFI.side\n      });\n      var boxMesh = new THREE.Mesh(tileGeometry, tileMaterial);\n      boxMesh.rotation.setFromVector3(oCurrFI.angle);\n      boxMesh.position.copy(oCurrFI.position);\n      tileGeometry.dispose();\n      tileMaterial.dispose();\n      return boxMesh;\n    }\n  };\n\n  var writeNumber = function writeNumber(oConfig) {\n    var tilesize = oConfig.size.tilesize;\n\n    var makeTextSprite = function makeTextSprite(message) {\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = canvas.height = tilesize * 2;\n      context.font = 'Bold ' + tilesize * 2 + 'px Roboto';\n      context.fillStyle = \"#7F007F\";\n      context.textAlign = \"center\";\n      context.fillText(message, tilesize, tilesize * 1.74591293182);\n      var texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      var spriteMaterial = new THREE.SpriteMaterial({\n        map: texture\n      });\n      var sprite = new THREE.Sprite(spriteMaterial);\n      sprite.scale.set(canvas.width, canvas.width, canvas.width);\n      return sprite;\n    };\n\n    var writeN = function writeN(n, x, y, z) {\n      var mul = function mul(n) {\n        return (n - 0.5) * tilesize;\n      };\n\n      var sp = makeTextSprite(String(n));\n      sp.position.set(mul(x), mul(y), mul(z));\n      world.current.scene.add(sp);\n    };\n\n    var oLabel = oConfig[\"axis-labels\"];\n\n    if (oLabel) {\n      if (oLabel[\"axis-x\"].show) oLabel[\"axis-x\"].list.forEach(function (e) {\n        writeN(e, e, 0, 0);\n      });\n      if (oLabel[\"axis-y\"].show) oLabel[\"axis-y\"].list.forEach(function (e) {\n        writeN(e, 0, e, 0);\n      });\n      if (oLabel[\"axis-z\"].show) oLabel[\"axis-z\"].list.forEach(function (e) {\n        writeN(e, 0, 0, e);\n      });\n    }\n  };\n\n  var updateChart = function updateChart(oFrame, oConfig, oSlice, oData) {\n    var aData = oData.values;\n    var size = calcSize(oConfig, oSlice);\n    var aFace = new Array(6).fill(0);\n    var iMin = oData.min;\n    var iMax = oData.max;\n\n    for (var iit = 0; iit < size.z; iit++) {\n      for (var iis = 0; iis < size.y; iis++) {\n        for (var iif = 0; iif < size.x; iif++) {\n          if (iis === 0) push2Face(0, aData[iif][iis][iit]);\n          if (iis === size.y - 1) push2Face(1, aData[iif][iis][iit]);\n          if (iif === 0) push2Face(2, aData[iif][iis][iit]);\n          if (iif === size.x - 1) push2Face(3, aData[iif][iis][iit]);\n          if (iit === 0) push2Face(4, aData[iif][iis][iit]);\n          if (iit === size.z - 1) push2Face(5, aData[iif][iis][iit]);\n        }\n      }\n    }\n\n    for (var ii = 0; ii < 6; ii++) {\n      oFrame.children[ii].geometry.elementsNeedUpdate = true;\n    }\n\n    function push2Face(order, value) {\n      var hue = tempToHSL(iMin, iMax, value);\n      var currFace = oFrame.children[order].geometry.faces;\n      var idx = aFace[order];\n      currFace[idx * 2].color.setHSL(hue, 1, 0.5);\n      currFace[idx * 2 + 1].color.setHSL(hue, 1, 0.5);\n      aFace[order]++;\n    }\n\n    function tempToHSL(min, max, temp) {\n      return (240 - (temp - min) * 240 / (max - min)) / 360;\n    }\n  };\n\n  React.useEffect(function () {\n    if (mainFrame == null) return;\n    updateChart(mainFrame, props.config, props.slice, data);\n    camera.position.setLength((Math.sqrt(props.config.size.x ^ 2 + props.config.size.y ^ 2 + props.config.size.z ^ 2) + 20) * props.config.size.tilesize);\n  }, [data]);\n\n  var onContextCreate = function onContextCreate(gl) {\n    var sceneColor;\n    return _regeneratorRuntime.async(function onContextCreate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sceneColor = 0x6ad6f0;\n            world.current = initWorld(gl, sceneColor);\n            makeDoor(props.config);\n            makeWireFrame(props.config);\n            setFrame(makeFrame(props.config, props.slice));\n            setData(props.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(OrbitControls, {\n    style: {\n      flex: 1\n    },\n    camera: camera,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 5\n    }\n  }, React.createElement(GLView, {\n    style: {\n      flex: 1\n    },\n    onContextCreate: onContextCreate,\n    key: \"d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/ReactNative/myapp/src/screens/status/TChart.js"],"names":["ExpoWebGLRenderingContext","GLView","Renderer","TextureLoader","OrbitControls","React","THREE","TChart","props","useState","camera","setCamera","animate","setAnimate","world","useRef","mainFrame","setFrame","data","setData","useEffect","clearTimeout","initWorld","context","defaultSceneColor","width","drawingBufferWidth","height","drawingBufferHeight","console","info","scene","Scene","background","Color","PerspectiveCamera","up","set","position","renderer","setSize","setClearColor","axesHelper","AxesHelper","add","hHandle","requestAnimationFrame","endFrameEXP","render","makeDoor","oConfig","config","oSettings","door","show","current","oCSize","size","oSize","x","tilesize","y","z","e","oDirection","A","x0","y0","z0","x1","y1","z1","B","C","D","oVector","direction","vDirection","Vector3","vOrigin","iTileSize","oDoor","ArrowHelper","normalize","makeWireFrame","oMaterial","LineBasicMaterial","color","linewidth","aPoints","push","oGeometry1","BufferGeometry","setFromPoints","oGeometry2","oLine1","Line","oLine2","calcSize","result","smallerThanZero","slice","axis","toLowerCase","level","makeFrame","oSlice","tileSize","cube","Object3D","ii","createAFace","order","fPi","Math","PI","oFaceInfo","angle","side","BackSide","FrontSide","oCurrFI","tileGeometry","PlaneGeometry","tileMaterial","MeshBasicMaterial","vertexColors","FaceColors","boxMesh","Mesh","rotation","setFromVector3","copy","dispose","writeNumber","makeTextSprite","message","canvas","document","createElement","getContext","font","fillStyle","textAlign","fillText","texture","Texture","needsUpdate","spriteMaterial","SpriteMaterial","map","sprite","Sprite","scale","writeN","n","mul","sp","String","oLabel","list","forEach","updateChart","oFrame","oData","aData","values","aFace","Array","fill","iMin","min","iMax","max","iit","iis","iif","push2Face","children","geometry","elementsNeedUpdate","value","hue","tempToHSL","currFace","faces","idx","setHSL","temp","setLength","sqrt","onContextCreate","gl","sceneColor","flex"],"mappings":"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","sourcesContent":["import { ExpoWebGLRenderingContext, GLView } from 'expo-gl';\r\nimport { Renderer, TextureLoader } from 'expo-three';\r\nimport OrbitControls from 'expo-three-orbit-controls';\r\nimport * as React from 'react';\r\nimport * as THREE from 'three';\r\n\r\nexport default function TChart(props) {\r\n    const [camera, setCamera] = React.useState(null);\r\n    const [animate, setAnimate] = React.useState(null);\r\n    const world = React.useRef(null);\r\n    const [mainFrame, setFrame] = React.useState(null);\r\n    const [data, setData] = React.useState(props.data);\r\n\r\n  React.useEffect(() => {\r\n    return () => clearTimeout(animate); // Clear the animation loop when the component unmounts\r\n  }, []);\r\n\r\n  const initWorld = (context, defaultSceneColor) =>{\r\n    const { drawingBufferWidth: width, drawingBufferHeight: height } = context;\r\n    console.info(\"makeWorld\");\r\n    let scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xaaffaa);\r\n    let camera = new THREE.PerspectiveCamera(\r\n        60,\r\n        width/ height,\r\n        1,\r\n        1000\r\n    );\r\n    camera.up.set(0, 0, 1);\r\n    camera.position.set(350, 350, 350);\r\n    setCamera(camera);\r\n\r\n    // Create a WebGLRenderer without a DOM element\r\n    const renderer = new Renderer({ context });\r\n    renderer.setSize(width, height);\r\n    renderer.setClearColor(defaultSceneColor);\r\n\r\n    let axesHelper = new THREE.AxesHelper(7749);\r\n    scene.add(axesHelper);\r\n\r\n    let animate = function () {\r\n        let hHandle = requestAnimationFrame(animate);\r\n        setAnimate(hHandle);\r\n        context.endFrameEXP();\r\n        renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n    return {\r\n        scene: scene,\r\n        camera: camera,\r\n        renderer: renderer\r\n    };\r\n  }\r\n\r\n  const makeDoor = () => {\r\n        let oConfig = props.config;\r\n        console.info(\"makeDoor\");\r\n        let oSettings = oConfig.door;\r\n        if (!oSettings.show || !world.current.scene) return;\r\n        let oCSize = oConfig.size;\r\n        let oSize = {\r\n            x: oCSize.x * oCSize.tilesize,\r\n            y: oCSize.y * oCSize.tilesize,\r\n            z: oCSize.z * oCSize.tilesize,\r\n            e: 20 * oCSize.tilesize\r\n        }\r\n\r\n        let oDirection = {\r\n            A: {\r\n                x0: oSize.x/2, y0: -oSize.e, z0: oSize.z/2,\r\n                x1: oSize.x/2, y1: oSize.y, z1: oSize.z/2,\r\n            },\r\n            B: {\r\n                x0: oSize.x/2, y0: oSize.y+oSize.e, z0: oSize.z/2,\r\n                x1: oSize.x/2, y1: oSize.y, z1: oSize.z/2,\r\n            },\r\n            C: {\r\n                x0: -oSize.e, y0: oSize.y/2, z0: oSize.z/2,\r\n                x1: oSize.x, y1: oSize.y/2, z1: oSize.z/2,\r\n            },\r\n            D: {\r\n                x0: oSize.x+oSize.e, y0: oSize.y/2, z0: oSize.z/2,\r\n                x1: oSize.x, y1: oSize.y/2, z1: oSize.z/2,\r\n            }\r\n        }\r\n\r\n        let oVector = oDirection[oSettings.direction];\r\n\r\n        let vDirection = new THREE.Vector3( oVector.x1-oVector.x0, oVector.y1-oVector.y0, oVector.z1-oVector.z0);\r\n        let vOrigin = new THREE.Vector3( oVector.x0, oVector.y0, oVector.z0);\r\n\r\n        let iTileSize = oCSize.tilesize;\r\n        let oDoor = new THREE.ArrowHelper(vDirection.normalize(), vOrigin, 8*iTileSize, 0x000000, 2*iTileSize, 1*iTileSize);\r\n        oDoor.up.set(0,0,1);\r\n\r\n        world.current.scene.add(oDoor);\r\n  }\r\n\r\n  const makeWireFrame = (oConfig) => {\r\n        console.info(\"makeWireFrame\");\r\n        let oMaterial = new THREE.LineBasicMaterial({\r\n            color: 0x000000,\r\n            linewidth: 2\r\n        });\r\n        let oSize = oConfig.size;\r\n        let x = oSize.x * oSize.tilesize;\r\n        let y = oSize.y * oSize.tilesize;\r\n        let z = oSize.z * oSize.tilesize;\r\n        let aPoints = [];\r\n        aPoints.push( new THREE.Vector3( 0, 0, 0 ) );\r\n        aPoints.push( new THREE.Vector3( x, 0, 0 ) );\r\n        aPoints.push( new THREE.Vector3( x, y, 0 ) );\r\n        aPoints.push( new THREE.Vector3( 0, y, 0 ) );\r\n        aPoints.push( new THREE.Vector3( 0, 0, 0 ) );\r\n        aPoints.push( new THREE.Vector3( 0, 0, z ) );\r\n        aPoints.push( new THREE.Vector3( x, 0, z ) );\r\n        aPoints.push( new THREE.Vector3( x, y, z ) );\r\n        aPoints.push( new THREE.Vector3( 0, y, z ) );\r\n        aPoints.push( new THREE.Vector3( 0, 0, z ) );\r\n        let oGeometry1 = new THREE.BufferGeometry().setFromPoints( aPoints );\r\n\r\n        aPoints = [];\r\n        aPoints.push( new THREE.Vector3( x, 0, 0 ) );\r\n        aPoints.push( new THREE.Vector3( x, 0, z ) );\r\n        aPoints.push( new THREE.Vector3( x, y, z ) );\r\n        aPoints.push( new THREE.Vector3( x, y, 0 ) );\r\n        aPoints.push( new THREE.Vector3( 0, y, 0 ) );\r\n        aPoints.push( new THREE.Vector3( 0, y, z ) );\r\n        let oGeometry2 = new THREE.BufferGeometry().setFromPoints( aPoints );\r\n\r\n        let oLine1 = new THREE.Line( oGeometry1, oMaterial );\r\n        world.current.scene.add(oLine1);\r\n        let oLine2 = new THREE.Line( oGeometry2, oMaterial );\r\n        world.current.scene.add(oLine2);\r\n  }\r\n\r\n  const calcSize = () => {\r\n    let result = {\r\n        x: props.config.size.x,\r\n        y: props.config.size.y,\r\n        z: props.config.size.z,\r\n        get smallerThanZero(){\r\n            return this.x*this.y*this.z<0\r\n        }\r\n    }\r\n\r\n    result[props.slice.axis.toLowerCase()] -= props.slice.level;\r\n    if (result.smallerThanZero) return props.config.size;\r\n    return result;\r\n  }\r\n\r\n  const makeFrame = (oConfig, oSlice) => {\r\n        console.info(\"makeFrame\");\r\n        let tileSize = oConfig.size.tilesize;\r\n        let cube = new THREE.Object3D();\r\n\r\n        for (let ii = 0; ii < 6; ii++) {\r\n            cube.add(createAFace(ii));\r\n        }\r\n\r\n        world.current.scene.add(cube);\r\n        return cube;\r\n\r\n        function createAFace(order) {\r\n            let fPi = Math.PI;\r\n            let size = calcSize(oConfig, oSlice);\r\n            let oFaceInfo = {\r\n                0: {\r\n                    width: 'x',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(size[this.width] * tileSize / 2, 0, size[this.height] * tileSize / 2)\r\n                    },\r\n                    side: THREE.BackSide\r\n                },\r\n                1: {\r\n                    width: 'x',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(size[this.width] * tileSize / 2, size.y * tileSize, size[this.height] * tileSize / 2)\r\n                    },\r\n                    side: THREE.FrontSide\r\n                },\r\n                2: {\r\n                    width: 'y',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 3 * fPi / 2, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(0, size[this.width] * tileSize / 2, size[this.height] * tileSize / 2)\r\n                    },\r\n                    side: THREE.FrontSide\r\n                },\r\n                3: {\r\n                    width: 'y',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 3 * fPi / 2, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(size.x * tileSize, size[this.width] * tileSize / 2, size[this.height] * tileSize / 2)\r\n                    },\r\n                    side: THREE.BackSide\r\n                },\r\n                4: {\r\n                    width: 'x',\r\n                    height: 'y',\r\n                    angle: new THREE.Vector3(fPi, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(size[this.width] * tileSize / 2, size[this.height] * tileSize / 2, 0)\r\n                    },\r\n                    side: THREE.FrontSide\r\n                },\r\n                5: {\r\n                    width: 'x',\r\n                    height: 'y',\r\n                    angle: new THREE.Vector3(fPi, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(size[this.width] * tileSize / 2, size[this.height] * tileSize / 2, size.z * tileSize)\r\n                    },\r\n                    side: THREE.BackSide\r\n                }\r\n            }\r\n\r\n            let oCurrFI = oFaceInfo[order];\r\n            let tileGeometry = new THREE.PlaneGeometry(\r\n                size[oCurrFI.width] * tileSize,\r\n                size[oCurrFI.height] * tileSize,\r\n                size[oCurrFI.width], size[oCurrFI.height]\r\n            );\r\n\r\n            let tileMaterial = new THREE.MeshBasicMaterial({\r\n                vertexColors: THREE.FaceColors,\r\n                side: oCurrFI.side\r\n            });\r\n            let boxMesh = new THREE.Mesh(tileGeometry, tileMaterial);\r\n            boxMesh.rotation.setFromVector3(oCurrFI.angle);\r\n            boxMesh.position.copy(oCurrFI.position);\r\n            tileGeometry.dispose();\r\n            tileMaterial.dispose();\r\n            return boxMesh;\r\n        }\r\n  }\r\n\r\n  const writeNumber = (oConfig) => {\r\n    const tilesize = oConfig.size.tilesize;\r\n\r\n    const makeTextSprite = ( message) => {\r\n        let canvas = document.createElement('canvas');\r\n        let context = canvas.getContext('2d');\r\n        canvas.width = canvas.height = tilesize*2;\r\n\r\n        context.font = 'Bold '+tilesize*2+'px Roboto';\r\n        context.fillStyle = \"#7F007F\";\r\n        context.textAlign = \"center\";\r\n        context.fillText(message, tilesize, tilesize*1.74591293182);\r\n\r\n        let texture = new THREE.Texture(canvas)\r\n        texture.needsUpdate = true;\r\n\r\n        var spriteMaterial = new THREE.SpriteMaterial( { map: texture } );\r\n        var sprite = new THREE.Sprite(spriteMaterial);\r\n        sprite.scale.set(canvas.width, canvas.width, canvas.width);\r\n        return sprite;\r\n    }\r\n\r\n    const writeN = (n, x, y, z) => {\r\n        const mul = (n) => {return (n-0.5)*tilesize};\r\n        let sp = makeTextSprite(String(n));\r\n        sp.position.set( mul(x), mul(y), mul(z) );\r\n        world.current.scene.add(sp);\r\n    }\r\n\r\n    let oLabel = oConfig[\"axis-labels\"];\r\n    if (oLabel){\r\n\r\n    if (oLabel[\"axis-x\"].show)\r\n        oLabel[\"axis-x\"].list.forEach((e) => {\r\n            writeN(e,e,0,0);\r\n    })\r\n    if (oLabel[\"axis-y\"].show)\r\n        oLabel[\"axis-y\"].list.forEach((e) => {\r\n            writeN(e,0,e,0);\r\n    })\r\n    if (oLabel[\"axis-z\"].show)\r\n        oLabel[\"axis-z\"].list.forEach((e) => {\r\n            writeN(e,0,0,e);\r\n    })\r\n    }\r\n  }\r\n\r\n  const updateChart = (oFrame, oConfig, oSlice, oData) => {\r\n    let aData = oData.values;\r\n    let size = calcSize(oConfig, oSlice);\r\n\r\n    let aFace = new Array(6).fill(0);\r\n\r\n    //Find lowest and greatest temperature\r\n    let iMin = oData.min;\r\n    let iMax = oData.max;\r\n    for(let iit=0;iit<size.z;iit++){\r\n        for(let iis=0;iis<size.y;iis++){\r\n            for(let iif=0;iif<size.x;iif++){\r\n                if (iis === 0)\r\n                    push2Face(0, aData[iif][iis][iit])\r\n                if (iis === size.y - 1)\r\n                    push2Face(1, aData[iif][iis][iit])\r\n                if (iif === 0)\r\n                    push2Face(2, aData[iif][iis][iit])\r\n                if (iif === size.x - 1)\r\n                    push2Face(3, aData[iif][iis][iit])\r\n                if (iit === 0)\r\n                    push2Face(4, aData[iif][iis][iit])\r\n                if (iit === size.z - 1)\r\n                    push2Face(5, aData[iif][iis][iit])\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let ii=0;ii<6;ii++)\r\n        oFrame.children[ ii ].geometry.elementsNeedUpdate = true;\r\n\r\n    function push2Face(order, value){\r\n        let hue = tempToHSL(iMin, iMax, value);\r\n        let currFace = oFrame.children[order].geometry.faces;\r\n        let idx = aFace[order];\r\n        currFace[idx * 2].color.setHSL( hue, 1, 0.5);\r\n        currFace[idx * 2 + 1].color.setHSL( hue, 1, 0.5);\r\n        aFace[order]++;\r\n    }\r\n\r\n    function tempToHSL(min, max, temp) {\r\n        return (240 - (temp - min) * 240 / (max - min))/360; //hue\r\n    }\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (mainFrame == null) return\r\n    updateChart(mainFrame, props.config, props.slice, data);\r\n    camera.position.setLength((Math.sqrt(props.config.size.x^2+props.config.size.y^2+props.config.size.z^2)+20)*props.config.size.tilesize);\r\n  },[data])\r\n\r\n  const onContextCreate = async (gl) => {\r\n    const sceneColor = 0x6ad6f0;\r\n\r\n    world.current = initWorld(gl, sceneColor);\r\n    makeDoor(props.config);\r\n    makeWireFrame(props.config);\r\n    setFrame(makeFrame(props.config, props.slice));\r\n    //writeNumber(props.config);\r\n    setData(props.data);\r\n  };\r\n\r\n  return (\r\n    <OrbitControls style={{ flex: 1 }} camera={camera}>\r\n      <GLView style={{ flex: 1 }} onContextCreate={onContextCreate} key=\"d\"/>\r\n    </OrbitControls>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}