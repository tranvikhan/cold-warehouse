{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\src\\\\views\\\\threeChart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { View as GraphicsView } from \"expo-graphics\";\nimport ExpoTHREE, { THREE } from \"expo-three\";\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar ThreeChart = function (_React$Component) {\n  _inherits(ThreeChart, _React$Component);\n\n  var _super = _createSuper(ThreeChart);\n\n  function ThreeChart() {\n    var _this;\n\n    _classCallCheck(this, ThreeChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onContextCreate = function _callee(_ref) {\n      var gl, canvas, width, height, pixelRatio, geometry, material, light;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              gl = _ref.gl, canvas = _ref.canvas, width = _ref.width, height = _ref.height, pixelRatio = _ref.scale;\n              _this.renderer = new ExpoTHREE.Renderer({\n                gl: gl,\n                pixelRatio: pixelRatio,\n                width: width,\n                height: height\n              });\n\n              _this.renderer.setClearColor(0x000000);\n\n              _this.scene = new THREE.Scene();\n              _this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n              _this.camera.position.z = 5;\n              geometry = new THREE.BoxGeometry(1, 1, 1);\n              material = new THREE.MeshPhongMaterial({\n                color: 0x2ecc71\n              });\n              _this.cube = new THREE.Mesh(geometry, material);\n\n              _this.scene.add(_this.cube);\n\n              _this.scene.add(new THREE.AmbientLight(0x404040));\n\n              light = new THREE.DirectionalLight(0xffffff, 0.7);\n              light.position.set(3, 3, 3);\n\n              _this.scene.add(light);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onRender = function (delta) {\n      _this.cube.rotation.x += 2 * delta;\n      _this.cube.rotation.y += 1 * delta;\n\n      _this.renderer.render(_this.scene, _this.camera);\n    };\n\n    return _this;\n  }\n\n  _createClass(ThreeChart, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      THREE.suppressExpoWarnings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        styles: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your ThreeChart usable by everyone.\"), React.createElement(Button, {\n        title: \"Press me\",\n        onPress: function onPress() {\n          return Alert.alert(\"Simple Button pressed\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      })), React.createElement(GraphicsView, {\n        onContextCreate: this.onContextCreate,\n        onRender: this.onRender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Tr\\u1EA7n Vi Khan\"));\n    }\n  }]);\n\n  return ThreeChart;\n}(React.Component);\n\nexport { ThreeChart as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16,\n    backgroundColor: \"#00000\"\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 50,\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth\n  }\n});","map":{"version":3,"sources":["D:/ReactNative/myapp/src/views/threeChart.js"],"names":["View","GraphicsView","ExpoTHREE","THREE","React","ThreeChart","onContextCreate","gl","canvas","width","height","pixelRatio","scale","renderer","Renderer","setClearColor","scene","Scene","camera","PerspectiveCamera","position","z","geometry","BoxGeometry","material","MeshPhongMaterial","color","cube","Mesh","add","AmbientLight","light","DirectionalLight","set","onRender","delta","rotation","x","y","render","suppressExpoWarnings","styles","container","Alert","alert","title","Component","StyleSheet","create","flex","justifyContent","marginHorizontal","backgroundColor","textAlign","fontSize","marginVertical","fixToText","flexDirection","separator","borderBottomColor","borderBottomWidth","hairlineWidth"],"mappings":"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","sourcesContent":["import { View as GraphicsView } from \"expo-graphics\";\r\nimport ExpoTHREE, { THREE } from \"expo-three\";\r\nimport React from \"react\";\r\nimport { Button, Alert, Text, View, StyleSheet } from \"react-native\";\r\n\r\nexport default class ThreeChart extends React.Component {\r\n  UNSAFE_componentWillMount() {\r\n    THREE.suppressExpoWarnings();\r\n  }\r\n\r\n  render() {\r\n    // Create an `ExpoGraphics.View` covering the whole screen, tell it to call our\r\n    // `onContextCreate` function once it's initialized.\r\n    return (\r\n      <>\r\n        <View styles={styles.container}>\r\n          <Text>\r\n            The title and onPress handler are required. It is recommended to set\r\n            accessibilityLabel to help make your ThreeChart usable by everyone.\r\n          </Text>\r\n          <Button\r\n            title=\"Press me\"\r\n            onPress={() => Alert.alert(\"Simple Button pressed\")}\r\n          />\r\n        </View>\r\n        <GraphicsView\r\n          onContextCreate={this.onContextCreate}\r\n          onRender={this.onRender}\r\n        />\r\n        <Text style={styles.title}>Trần Vi Khan</Text>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // This is called by the `ExpoGraphics.View` once it's initialized\r\n  onContextCreate = async ({\r\n    gl,\r\n    canvas,\r\n    width,\r\n    height,\r\n    scale: pixelRatio,\r\n  }) => {\r\n    this.renderer = new ExpoTHREE.Renderer({ gl, pixelRatio, width, height });\r\n    this.renderer.setClearColor(0x000000);\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    this.camera.position.z = 5;\r\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n\r\n    const material = new THREE.MeshPhongMaterial({\r\n      color: 0x2ecc71,\r\n    });\r\n\r\n    this.cube = new THREE.Mesh(geometry, material);\r\n    this.scene.add(this.cube);\r\n\r\n    this.scene.add(new THREE.AmbientLight(0x404040));\r\n\r\n    const light = new THREE.DirectionalLight(0xffffff, 0.7);\r\n    light.position.set(3, 3, 3);\r\n    this.scene.add(light);\r\n  };\r\n\r\n  onRender = (delta) => {\r\n    this.cube.rotation.x += 2 * delta;\r\n    this.cube.rotation.y += 1 * delta;\r\n    this.renderer.render(this.scene, this.camera);\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 16,\r\n    backgroundColor: \"#00000\"\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 50,\r\n    marginVertical: 8,\r\n  },\r\n  fixToText: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  separator: {\r\n    marginVertical: 8,\r\n    borderBottomColor: \"#737373\",\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}