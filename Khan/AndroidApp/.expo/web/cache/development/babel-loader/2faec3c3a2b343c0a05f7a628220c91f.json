{"ast":null,"code":"import { AMFLoader } from 'three/examples/jsm/loaders/AMFLoader';\nimport { AssimpLoader } from 'three/examples/jsm/loaders/AssimpLoader';\nimport { BVHLoader } from 'three/examples/jsm/loaders/BVHLoader';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { PCDLoader } from 'three/examples/jsm/loaders/PCDLoader';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { TTFLoader } from 'three/examples/jsm/loaders/TTFLoader';\nimport { XLoader } from 'three/examples/jsm/loaders/XLoader';\n\nfunction getExtension(uri) {\n  var lastUriComponent = uri.split('.').pop();\n  return lastUriComponent.split('?')[0].split('#')[0];\n}\n\nexport function loaderClassForUri(uri) {\n  var extension = getExtension(uri);\n  return loaderClassForExtension(extension);\n}\nexport function loaderClassForExtension(extension) {\n  if (typeof extension !== 'string') {\n    throw new Error('Supplied extension is not a valid string');\n  }\n\n  switch (extension.toLowerCase()) {\n    case '3mf':\n      return TTFLoader;\n\n    case 'amf':\n      return AMFLoader;\n\n    case 'assimp':\n      return AssimpLoader;\n\n    case 'bvh':\n      return BVHLoader;\n\n    case 'ctm':\n      throw new Error('CTMLoader is deprecated. Please load it manually with three.js');\n\n    case 'fbx':\n      return FBXLoader;\n\n    case 'glb':\n    case 'gltf':\n      return GLTFLoader;\n\n    case 'max':\n    case '3ds':\n      return TDSLoader;\n\n    case 'pcd':\n      return PCDLoader;\n\n    case 'ply':\n      return PLYLoader;\n\n    case 'obj':\n      return OBJLoader;\n\n    case 'mtl':\n      return MTLLoader;\n\n    case 'dae':\n      return ColladaLoader;\n\n    case 'stl':\n      return STLLoader;\n\n    case 'vtk':\n    case 'vtp':\n      throw new Error('VRMLoader is deprecated. Please load it manually with three.js');\n\n    case 'x':\n      return XLoader;\n\n    default:\n      throw new Error('ExpoTHREE.loaderClassForExtension(): Unrecognized file type ' + extension);\n  }\n}","map":{"version":3,"sources":["../src/loaderClassForExtension.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,YAAT,QAA6B,yCAA7B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,aAAT,QAA8B,0CAA9B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,UAAT,QAA2B,uCAA3B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,SAAT,QAA0B,sCAA1B;AACA,SAAS,OAAT,QAAwB,oCAAxB;;AAEA,SAAS,YAAT,CAAsB,GAAtB,EAAiC;AAC/B,MAAM,gBAAgB,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAzB;AACA,SAAO,gBAAgB,CAAC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,EAA+B,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAP;AACD;;AAED,OAAM,SAAU,iBAAV,CAA4B,GAA5B,EAAuC;AAC3C,MAAM,SAAS,GAAG,YAAY,CAAC,GAAD,CAA9B;AACA,SAAO,uBAAuB,CAAC,SAAD,CAA9B;AACD;AAED,OAAM,SAAU,uBAAV,CAAkC,SAAlC,EAAmD;AACvD,MAAI,OAAO,SAAP,KAAqB,QAAzB,EAAmC;AACjC,UAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AACD;;AACD,UAAQ,SAAS,CAAC,WAAV,EAAR;AACE,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,QAAL;AACE,aAAO,YAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,YAAM,IAAI,KAAJ,CACJ,gEADI,CAAN;;AAGF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACA,SAAK,MAAL;AACE,aAAO,UAAP;;AACF,SAAK,KAAL;AACA,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,aAAP;;AACF,SAAK,KAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACA,SAAK,KAAL;AACE,YAAM,IAAI,KAAJ,CACJ,gEADI,CAAN;;AAGF,SAAK,GAAL;AACE,aAAO,OAAP;;AAKF;AACE,YAAM,IAAI,KAAJ,CACJ,iEACE,SAFE,CAAN;AA7CJ;AAkDD","sourcesContent":["import { AMFLoader } from 'three/examples/jsm/loaders/AMFLoader';\nimport { AssimpLoader } from 'three/examples/jsm/loaders/AssimpLoader';\nimport { BVHLoader } from 'three/examples/jsm/loaders/BVHLoader';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { PCDLoader } from 'three/examples/jsm/loaders/PCDLoader';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { TTFLoader } from 'three/examples/jsm/loaders/TTFLoader';\nimport { XLoader } from 'three/examples/jsm/loaders/XLoader';\n\nfunction getExtension(uri: string): string {\n  const lastUriComponent = uri.split('.').pop() as string;\n  return lastUriComponent.split('?')[0].split('#')[0];\n}\n\nexport function loaderClassForUri(uri: string): string {\n  const extension = getExtension(uri);\n  return loaderClassForExtension(extension);\n}\n\nexport function loaderClassForExtension(extension: string): any {\n  if (typeof extension !== 'string') {\n    throw new Error('Supplied extension is not a valid string');\n  }\n  switch (extension.toLowerCase()) {\n    case '3mf':\n      return TTFLoader;\n    case 'amf':\n      return AMFLoader;\n    case 'assimp':\n      return AssimpLoader;\n    case 'bvh':\n      return BVHLoader;\n    case 'ctm':\n      throw new Error(\n        'CTMLoader is deprecated. Please load it manually with three.js'\n      );\n    case 'fbx':\n      return FBXLoader;\n    case 'glb':\n    case 'gltf':\n      return GLTFLoader;\n    case 'max':\n    case '3ds':\n      return TDSLoader;\n    case 'pcd':\n      return PCDLoader;\n    case 'ply':\n      return PLYLoader;\n    case 'obj':\n      return OBJLoader;\n    case 'mtl':\n      return MTLLoader;\n    case 'dae':\n      return ColladaLoader;\n    case 'stl':\n      return STLLoader;\n    case 'vtk':\n    case 'vtp':\n      throw new Error(\n        'VRMLoader is deprecated. Please load it manually with three.js'\n      );\n    case 'x':\n      return XLoader;\n\n    // case 'drc':\n    //   if (!THREE.DRACOLoader) require('three/examples/js/loaders/draco/DRACOLoader');\n    //   return THREE.DRACOLoader;\n    default:\n      throw new Error(\n        'ExpoTHREE.loaderClassForExtension(): Unrecognized file type ' +\n          extension\n      );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}