{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GIT HUB\\\\NCKH2020\\\\KHAN\\\\AndroidApp\\\\src\\\\screens\\\\user\\\\user.component.js\";\nimport { Avatar, Icon, Layout, ListItem, Text, Toggle, useTheme } from '@ui-kitten/components';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from \"../../redux/actions\";\nimport { toggleTheme } from \"../../redux/actions\";\nexport default function User() {\n  var _this = this;\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkNotification = _React$useState2[0],\n      setCheckNotification = _React$useState2[1];\n\n  var state = useSelector(function (state) {\n    return state.Auth;\n  });\n  var themeColor = useSelector(function (state) {\n    return state.Layout.theme;\n  });\n  var dispatch = useDispatch();\n\n  var getTheme = function getTheme() {\n    return themeColor == \"dark\";\n  };\n\n  var _React$useState3 = React.useState(getTheme),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checkDarkMode = _React$useState4[0],\n      setCheckDarkMode = _React$useState4[1];\n\n  var toggleThemeColor = function toggleThemeColor(isDark) {\n    dispatch(toggleTheme(isDark ? \"dark\" : \"light\"));\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    listItem: {\n      margin: 5,\n      borderRadius: 10,\n      minHeight: 55\n    },\n    category: {\n      marginTop: 10,\n      marginLeft: 8\n    },\n    userAvatar: {\n      margin: 15\n    },\n    onPress: {\n      backgroundColor: 'red'\n    }\n  });\n  return React.createElement(Layout, {\n    style: styles.container,\n    level: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(ListItem, {\n    disabled: true,\n    style: styles.listItem,\n    title: state.user.user.fullname,\n    description: state.user.user.email,\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Avatar, {\n        size: \"giant\",\n        source: {\n          uri: state.user.user.avatar\n        },\n        style: styles.userAvatar,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.category,\n    category: \"p2\",\n    appearance: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"T\\xE0i kho\\u1EA3n\"), React.createElement(ListItem, {\n    onPress: function onPress() {\n      Alert.alert(String(state.user.user));\n    },\n    style: styles.listItem,\n    title: \"Th\\xF4ng tin\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"info-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(ListItem, {\n    style: styles.listItem,\n    title: \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"unlock-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(ListItem, {\n    onPress: function onPress() {\n      dispatch(logoutUser());\n    },\n    style: styles.listItem,\n    title: \"\\u0110\\u0103ng xu\\u1EA5t\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"log-out-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.category,\n    category: \"p2\",\n    appearance: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Giao di\\u1EC7n\"), React.createElement(ListItem, {\n    style: styles.listItem,\n    title: \"Ch\\u1EBF \\u0111\\u1ED9 t\\u1ED1i\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"globe-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }));\n    },\n    accessoryRight: function accessoryRight(props) {\n      return React.createElement(Toggle, {\n        checked: checkDarkMode,\n        onChange: function onChange() {\n          setCheckDarkMode(!checkDarkMode);\n          toggleThemeColor(!checkDarkMode);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.category,\n    category: \"p2\",\n    appearance: \"hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Th\\xF4ng b\\xE1o\"), React.createElement(ListItem, {\n    style: styles.listItem,\n    title: \"Th\\xF4ng b\\xE1o\",\n    accessoryLeft: function accessoryLeft(props) {\n      return React.createElement(Icon, _extends({\n        name: \"moon-outline\"\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }));\n    },\n    accessoryRight: function accessoryRight(props) {\n      return React.createElement(Toggle, {\n        checked: checkNotification,\n        onChange: function onChange() {\n          setCheckNotification(!checkNotification);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/screens/user/user.component.js"],"names":["Avatar","Icon","Layout","ListItem","Text","Toggle","useTheme","React","useSelector","useDispatch","logoutUser","toggleTheme","User","theme","useState","checkNotification","setCheckNotification","state","Auth","themeColor","dispatch","getTheme","checkDarkMode","setCheckDarkMode","toggleThemeColor","isDark","styles","StyleSheet","create","container","flex","listItem","margin","borderRadius","minHeight","category","marginTop","marginLeft","userAvatar","onPress","backgroundColor","user","fullname","email","props","uri","avatar","Alert","alert","String"],"mappings":"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","sourcesContent":["import { Avatar,  Icon, Layout, ListItem, Text ,Toggle,useTheme} from '@ui-kitten/components';\r\nimport {StyleSheet,ScrollView,Alert} from 'react-native';\r\nimport React from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { logoutUser } from '../../redux/actions';\r\nimport { toggleTheme } from '../../redux/actions';\r\n\r\nexport default function User() {\r\n    const theme = useTheme();\r\n    const [checkNotification, setCheckNotification] = React.useState(true);\r\n    const state = useSelector(state => state.Auth);\r\n    const themeColor = useSelector(state => state.Layout.theme);\r\n    const dispatch = useDispatch();\r\n    \r\n    const getTheme = ()=>{\r\n        return themeColor ==\"dark\";\r\n    }\r\n    const [checkDarkMode, setCheckDarkMode] = React.useState(getTheme);\r\n    const toggleThemeColor =(isDark) =>{\r\n        dispatch(toggleTheme(isDark?\"dark\":\"light\"));\r\n    }\r\n\r\n\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        listItem:{\r\n            margin:5,\r\n            borderRadius:10,\r\n            minHeight:55\r\n        },\r\n        category:{\r\n            marginTop:10,\r\n            marginLeft:8\r\n        },\r\n        userAvatar:{\r\n            margin:15\r\n        },\r\n        onPress:{\r\n            backgroundColor:'red'\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <Layout style={styles.container} level='2'>\r\n            <ScrollView showsHorizontalScrollIndicator={false}>\r\n                <ListItem\r\n                    disabled\r\n                    style={styles.listItem}\r\n                    title={state.user.user.fullname}\r\n                    description={state.user.user.email}\r\n                    accessoryLeft={(props)=>(\r\n                        <Avatar size='giant' source={{uri:state.user.user.avatar}} style={styles.userAvatar}></Avatar>\r\n                    )}\r\n                />\r\n                <Text style={styles.category}category='p2' appearance='hint'>Tài khoản</Text>\r\n                <ListItem\r\n                    onPress={()=>{Alert.alert(String(state.user.user))}}\r\n                    style={styles.listItem}\r\n                    title='Thông tin'\r\n                    accessoryLeft={(props)=>(\r\n                        <Icon name='info-outline'{...props} />\r\n                    )}\r\n                />\r\n                <ListItem\r\n                    style={styles.listItem}\r\n                    title='Đổi mật khẩu'\r\n                    accessoryLeft={(props)=>(\r\n                        <Icon name='unlock-outline'{...props} />\r\n                    )}\r\n                />\r\n                <ListItem\r\n                 onPress={()=>{dispatch(logoutUser())}}\r\n                    style={styles.listItem}\r\n                    title='Đăng xuất'\r\n                    accessoryLeft={(props)=>(\r\n                        <Icon name='log-out-outline'{...props} />\r\n                    )}\r\n                />\r\n                <Text style={styles.category}category='p2' appearance='hint'>Giao diện</Text>\r\n                <ListItem\r\n                    style={styles.listItem}\r\n                    title='Chế độ tối'\r\n                    accessoryLeft={(props)=>(\r\n                        <Icon name='globe-outline' {...props} />\r\n                    )}\r\n                    accessoryRight={(props)=>(\r\n                        <Toggle checked={checkDarkMode} onChange={()=>{setCheckDarkMode(!checkDarkMode);toggleThemeColor(!checkDarkMode)}}></Toggle>\r\n                    )}\r\n                />        \r\n                <Text style={styles.category}category='p2' appearance='hint'>Thông báo</Text>\r\n                <ListItem\r\n                    style={styles.listItem}\r\n                    title='Thông báo'\r\n                    accessoryLeft={(props)=>(\r\n                        <Icon name='moon-outline'{...props} />\r\n                    )}\r\n                    accessoryRight={(props)=>(\r\n                        <Toggle checked={checkNotification} onChange={()=>{setCheckNotification(!checkNotification)}}></Toggle>\r\n                    )}\r\n                />\r\n                        \r\n            </ScrollView>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}