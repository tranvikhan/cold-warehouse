{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\myapp\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useState } from \"react\";\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport AppNavigator from \"./src/Navigators/app.navigator\";\nimport { default as theme } from \"./src/assets/theme/custom-theme.json\";\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { ThemeContext } from \"./src/assets/theme/theme-context\";\nexport default function App() {\n  var _useState = useState('dark'),\n      _useState2 = _slicedToArray(_useState, 2),\n      themeDefault = _useState2[0],\n      setTheme = _useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    var nextTheme = themeDefault === 'light' ? 'dark' : 'light';\n    setTheme(nextTheme);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(IconRegistry, {\n    icons: EvaIconsPack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), React.createElement(ThemeContext.Provider, {\n    value: {\n      themeDefault: themeDefault,\n      toggleTheme: toggleTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, React.createElement(ApplicationProvider, _extends({}, eva, {\n    theme: _objectSpread(_objectSpread({}, eva[themeDefault]), {}, {\n      theme: theme\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/ReactNative/myapp/App.js"],"names":["React","useState","eva","ApplicationProvider","IconRegistry","AppNavigator","default","theme","EvaIconsPack","ThemeContext","App","themeDefault","setTheme","toggleTheme","nextTheme"],"mappings":";;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,mBAAT,EAA6BC,YAA7B,QAAgD,uBAAhD;AACA,OAAOC,YAAP;AACA,SAASC,OAAO,IAAIC,KAApB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,YAAT;AAIA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACOT,QAAQ,CAAC,MAAD,CADf;AAAA;AAAA,MACnBU,YADmB;AAAA,MACLC,QADK;;AAG1B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,SAAS,GAAGH,YAAY,KAAK,OAAjB,GAA2B,MAA3B,GAAoC,OAAtD;AACAC,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACD,GAHD;;AAID,SACE,0CACD,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,EAEK,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEG,MAAAA,YAAY,EAAZA,YAAF;AAAgBE,MAAAA,WAAW,EAAXA;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD,eAAyBX,GAAzB;AAA8B,IAAA,KAAK,kCAAOA,GAAG,CAACS,YAAD,CAAV;AAA0BJ,MAAAA,KAAK,EAALA;AAA1B,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFL,CADF;AAUF","sourcesContent":["import 'react-native-gesture-handler';\nimport React,{useState} from \"react\";\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider,IconRegistry} from '@ui-kitten/components';\nimport AppNavigator from './src/Navigators/app.navigator';\nimport { default as theme } from './src/assets/theme/custom-theme.json';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { ThemeContext } from './src/assets/theme/theme-context';\n\n\n\nexport default function App() {\n    const [themeDefault, setTheme] = useState('dark');\n\n    const toggleTheme = () => {\n      const nextTheme = themeDefault === 'light' ? 'dark' : 'light';\n      setTheme(nextTheme);\n    };\n   return(\n     <>\n    <IconRegistry icons={EvaIconsPack}/>\n          <ThemeContext.Provider value={{ themeDefault, toggleTheme }}>\n            <ApplicationProvider {...eva} theme={{ ...eva[themeDefault], theme }}>\n              <AppNavigator />\n            </ApplicationProvider>\n          </ThemeContext.Provider>   \n     </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}