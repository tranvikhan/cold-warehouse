{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOGGLE_THEME } from \"../constants\";\nvar INIT_STATE = {\n  theme: \"dark\"\n};\n\nvar Layout = function Layout() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_THEME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        theme: action.payload.color\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default Layout;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/layout/reducers.js"],"names":["TOGGLE_THEME","INIT_STATE","theme","Layout","state","action","type","payload","color"],"mappings":";;;;;;AACA,SAASA,YAAT;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBH,UAAuB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAL;AACE,6CAAYI,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAAzC;;AACF;AACE,+BAAYJ,KAAZ;AAJJ;AAMD,CAPD;;AASA,eAAeD,MAAf","sourcesContent":["// @flow\r\nimport { TOGGLE_THEME } from \"../constants\";\r\n\r\nconst INIT_STATE = {\r\n  theme: \"dark\",\r\n};\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_THEME:\r\n      return { ...state, theme: action.payload.color };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}