{"version":3,"sources":["components/Loader.js","components/StatisticsWidget.js","pages/report/Statistics.js","pages/report/RevenueChart.js","pages/report/index.js"],"names":["PreLoaderWidget","className","role","Component","StatisticsWidget","props","Icon","icon","Card","classNames","bgClass","CardBody","Media","body","description","title","iconClass","Statistics","Fragment","Row","Col","md","xl","FeatherIcon","RevenueChart","now","Date","apexLineChartWithLables","chart","height","type","toolbar","show","parentHeightOffset","grid","padding","left","right","dataLabels","enabled","stroke","curve","width","zoom","legend","colors","xaxis","categories","month","year","date","days","idx","getMonth","d","push","getDate","toLocaleString","setDate","getDaysInMonth","getFullYear","tooltip","axisBorder","labels","yaxis","formatter","val","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","theme","x","Nav","NavItem","NavLink","href","active","options","series","name","data","Report","oneWeekAgo","state","user","getLoggedInUser","filterDate","this","loading","Loader","sm","classNamePrefix","value","label","onChange","setState","mode","UncontrolledButtonDropdown","DropdownToggle","color","DropdownMenu","DropdownItem","divider"],"mappings":"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","file":"static/js/26.a2c5c2e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n/**\r\n * Renders the preloader\r\n */\r\nclass PreLoaderWidget extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"preloader\">\r\n                <div className=\"status\">\r\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreLoaderWidget;","import React from 'react';\r\nimport { Card, CardBody, Media } from 'reactstrap';\r\nimport classNames from 'classnames';\r\n\r\nconst StatisticsWidget = (props) => {\r\n\r\n    const Icon = props.icon;\r\n    return (\r\n        <Card className={classNames(props.bgClass)}>\r\n            <CardBody className=\"p-0\">\r\n                <Media className=\"p-3\">\r\n                    <Media body>\r\n                        <span className=\"text-muted text-uppercase font-size-12 font-weight-bold\">{props.description}</span>\r\n                        <h2 className=\"mb-0\">{props.title}</h2>\r\n                    </Media>\r\n                    <div className=\"align-self-center\">\r\n                        {Icon && <Icon className={classNames(\"icon-lg\", props.iconClass)}></Icon>}\r\n                    </div>\r\n                </Media>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StatisticsWidget;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport StatisticsWidget from '../../components/StatisticsWidget';\r\n\r\nconst Statistics = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={6} xl={3}>\r\n                    <StatisticsWidget\r\n                        description=\"Today Sensor\"\r\n                        title=\"1\"\r\n                        icon={FeatherIcon.Cpu}\r\n                        iconClass=\"icon-dual-primary\"></StatisticsWidget>\r\n                </Col>\r\n                <Col md={6} xl={3}>\r\n                    <StatisticsWidget\r\n                        description=\"Manager\"\r\n                        title=\"4\"\r\n                        icon={FeatherIcon.Users}\r\n                        iconClass=\"icon-dual-warning\"></StatisticsWidget>\r\n                </Col>\r\n                <Col md={6} xl={3}>\r\n                    <StatisticsWidget\r\n                        description=\"Total Cels\"\r\n                        title=\"1000\"\r\n                        icon={FeatherIcon.Grid}\r\n                        iconClass=\"icon-dual-success\"></StatisticsWidget>\r\n                </Col>\r\n                <Col md={6} xl={3}>\r\n                    <StatisticsWidget\r\n                        description=\"Warning Temperature\"\r\n                        title=\"7\"\r\n                        icon={FeatherIcon.Bell}\r\n                        iconClass=\"icon-dual-info\"></StatisticsWidget>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { Card, CardBody, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nconst RevenueChart = () => {\r\n    const getDaysInMonth = (month, year) => {\r\n        var date = new Date(year, month, 1);\r\n        var days = [];\r\n        var idx = 0;\r\n        while (date.getMonth() === month && idx < 15) {\r\n            var d = new Date(date);\r\n            days.push(d.getDate() + ' ' + d.toLocaleString('en-us', { month: 'short' }));\r\n            date.setDate(date.getDate() + 1);\r\n            idx += 1;\r\n        }\r\n        return days;\r\n    };\r\n\r\n    var now = new Date();\r\n    var labels = getDaysInMonth(now.getMonth(), now.getFullYear());\r\n\r\n    const apexLineChartWithLables = {\r\n        chart: {\r\n            height: 296,\r\n            type: 'area',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n            parentHeightOffset: 0,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 4,\r\n        },\r\n        zoom: {\r\n            enabled: false,\r\n        },\r\n        legend: {\r\n            show: false,\r\n        },\r\n        colors: ['#43d39e'],\r\n        xaxis: {\r\n            type: 'string',\r\n            categories: labels,\r\n            tooltip: {\r\n                enabled: false,\r\n            },\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            labels: {},\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: function (val) {\r\n                    return val + '°C';\r\n                },\r\n            },\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                type: 'vertical',\r\n                shadeIntensity: 1,\r\n                inverseColors: false,\r\n                opacityFrom: 0.45,\r\n                opacityTo: 0.05,\r\n                stops: [45, 100],\r\n            },\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            x: { show: false },\r\n        },\r\n    };\r\n\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'Revenue',\r\n            data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody className=\"pb-0\">\r\n                <Nav className=\"card-nav float-right\">\r\n                    <NavItem>\r\n                        <NavLink className=\"text-muted\" href=\"#\">\r\n                            Today\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"text-muted\" href=\"#\">\r\n                            7d\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"\" active href=\"#\">\r\n                            15d\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"text-muted\" href=\"#\">\r\n                            1m\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"text-muted\" href=\"#\">\r\n                            1y\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n\r\n                <h5 className=\"card-title mb-0 header-title\">Temperature Chart</h5>\r\n\r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"area\"\r\n                    className=\"apex-charts mt-3\"\r\n                    height={400}\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RevenueChart;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport { ChevronDown, Mail, Printer, File } from 'react-feather';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport Statistics from './Statistics';\r\nimport RevenueChart from './RevenueChart';\r\n\r\nimport Select from 'react-select';\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var oneWeekAgo = new Date();\r\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 15);\r\n\r\n        this.state = {\r\n            user: getLoggedInUser(),\r\n            filterDate: [oneWeekAgo, new Date()],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"\">\r\n                    {/* preloader */}\r\n                    {this.props.loading && <Loader />}\r\n\r\n                    <Row className=\"page-title align-items-center\">\r\n                        <Col sm={2} xl={1}>\r\n                            <h4 className=\"mb-1 mt-0 inline\">Report</h4>\r\n                        </Col>\r\n                        <Col sm={4} xl={2}>\r\n                            <Select\r\n                                className=\"react-select bg-white\"\r\n                                classNamePrefix=\"react-select\"\r\n                                options={[\r\n                                    { value: 'WH0001', label: 'Ware House 1' },\r\n                                    { value: 'WH0002', label: 'Ware House 2' },\r\n                                    { value: 'WH0003', label: 'Ware House 3' },\r\n                                ]}></Select>\r\n                        </Col>\r\n\r\n                        <Col sm={6} xl={9}>\r\n                            <form className=\"form-inline float-sm-right mt-3 mt-sm-0\">\r\n                                <div className=\"form-group mb-sm-0 mr-2\">\r\n                                    <Flatpickr\r\n                                        value={this.state.filterDate}\r\n                                        onChange={(date) => {\r\n                                            this.setState({ filterDate: date });\r\n                                        }}\r\n                                        options={{ mode: 'range' }}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <UncontrolledButtonDropdown>\r\n                                    <DropdownToggle color=\"primary\" className=\"dropdown-toggle\">\r\n                                        <i className=\"uil uil-file-alt mr-1\"></i>Download\r\n                                        <i className=\"icon ml-1\">\r\n                                            <ChevronDown />\r\n                                        </i>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu right>\r\n                                        <DropdownItem>\r\n                                            <Mail className=\"icon-dual icon-xs mr-2\"></Mail>\r\n                                            <span>Email</span>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem>\r\n                                            <Printer className=\"icon-dual icon-xs mr-2\"></Printer>\r\n                                            <span>Print</span>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem divider />\r\n                                        <DropdownItem>\r\n                                            <File className=\"icon-dual icon-xs mr-2\"></File>\r\n                                            <span>Re-Generate</span>\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </UncontrolledButtonDropdown>\r\n                            </form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* stats */}\r\n                    <Statistics></Statistics>\r\n\r\n                    {/* charts */}\r\n                    <Row>\r\n                        <Col xl={12}>\r\n                            <RevenueChart />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Report;\r\n"],"sourceRoot":""}