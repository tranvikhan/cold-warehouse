{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = _regeneratorRuntime.mark(getRoomList),\n    _marked2 = _regeneratorRuntime.mark(getRoomInfo),\n    _marked3 = _regeneratorRuntime.mark(newRoom),\n    _marked4 = _regeneratorRuntime.mark(updateRoom),\n    _marked5 = _regeneratorRuntime.mark(deleteRoom),\n    _marked6 = _regeneratorRuntime.mark(watchGetRoomList),\n    _marked7 = _regeneratorRuntime.mark(watchGetCurrentRoomInfo),\n    _marked8 = _regeneratorRuntime.mark(watchCreateRoom),\n    _marked9 = _regeneratorRuntime.mark(watchUpdateRoom),\n    _marked10 = _regeneratorRuntime.mark(watchDeleteRooms),\n    _marked11 = _regeneratorRuntime.mark(RoomListSaga);\n\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\nimport { requestApi } from \"../../helpers/api\";\nimport { CREATE_ROOM, CREATE_ROOM_SUCCESS, DELETE_ROOM, GET_CURR_ROOM_INFO, GET_ROOM_LIST, SET_CURR_ROOM, UPDATE_ROOM } from \"../constants\";\nimport { getRoomListSuccess, getRoomListFailed, createRoomSuccess, createRoomFailed, updateRoomFailed, updateRoomSuccess, deleteRoomSuccess, deleteRoomFailed, getCurrentRoomInfoSuccess, getCurrentRoomInfoFailed } from \"../actions\";\n\nfunction getRoomList(_ref) {\n  var user, response;\n  return _regeneratorRuntime.wrap(function getRoomList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          user = _ref.payload.user;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(requestApi, {\n            method: \"get\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/access/all\"\n          });\n\n        case 4:\n          response = _context.sent;\n\n          if (!(response.status == \"success\")) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return put(getRoomListSuccess(response.result.accesses));\n\n        case 8:\n          _context.next = 12;\n          break;\n\n        case 10:\n          _context.next = 12;\n          return put(getRoomListFailed(response.result));\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 18;\n          return put(getRoomListFailed(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n\nfunction getRoomInfo(_ref2) {\n  var _ref2$payload, user, room_id, response;\n\n  return _regeneratorRuntime.wrap(function getRoomInfo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref2$payload = _ref2.payload, user = _ref2$payload.user, room_id = _ref2$payload.room_id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(requestApi, {\n            method: \"get\",\n            headers: {\n              \"x-access-token\": user.accessToken\n            },\n            url: \"api/room/\",\n            params: {\n              room_id: room_id\n            }\n          });\n\n        case 4:\n          response = _context2.sent;\n\n          if (!(response.status == \"success\")) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(getCurrentRoomInfoSuccess(response.result.room));\n\n        case 8:\n          _context2.next = 12;\n          break;\n\n        case 10:\n          _context2.next = 12;\n          return put(getCurrentRoomInfoFailed(response.result));\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(getCurrentRoomInfoFailed(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 14]]);\n}\n\nfunction newRoom(_ref3) {\n  var _ref3$payload, user, room, options, response;\n\n  return _regeneratorRuntime.wrap(function newRoom$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _ref3$payload = _ref3.payload, user = _ref3$payload.user, room = _ref3$payload.room;\n          options = {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: room,\n            url: \"api/room/create\"\n          };\n          _context3.prev = 2;\n          _context3.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context3.sent;\n\n          if (!(response.status === \"success\")) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 9;\n          return put(createRoomSuccess(response.result.room));\n\n        case 9:\n          _context3.next = 13;\n          break;\n\n        case 11:\n          _context3.next = 13;\n          return put(createRoomFailed(response.result));\n\n        case 13:\n          _context3.next = 19;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](2);\n          _context3.next = 19;\n          return put(createRoomFailed(_context3.t0));\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 15]]);\n}\n\nfunction updateRoom(_ref4) {\n  var _ref4$payload, user, room_id, room_info, options, response;\n\n  return _regeneratorRuntime.wrap(function updateRoom$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _ref4$payload = _ref4.payload, user = _ref4$payload.user, room_id = _ref4$payload.room_id, room_info = _ref4$payload.room_info;\n          options = {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: _objectSpread({\n              room_id: room_id\n            }, room_info),\n            url: \"api/room/edit\"\n          };\n          _context4.prev = 2;\n          _context4.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context4.sent;\n\n          if (!(response.status === \"success\")) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 9;\n          return put(updateRoomSuccess(response.result.room));\n\n        case 9:\n          _context4.next = 13;\n          break;\n\n        case 11:\n          _context4.next = 13;\n          return put(updateRoomFailed(response.result));\n\n        case 13:\n          _context4.next = 19;\n          break;\n\n        case 15:\n          _context4.prev = 15;\n          _context4.t0 = _context4[\"catch\"](2);\n          _context4.next = 19;\n          return put(updateRoomFailed(_context4.t0));\n\n        case 19:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 15]]);\n}\n\nfunction deleteRoom(_ref5) {\n  var _ref5$payload, user, room_id, options, response;\n\n  return _regeneratorRuntime.wrap(function deleteRoom$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _ref5$payload = _ref5.payload, user = _ref5$payload.user, room_id = _ref5$payload.room_id;\n          options = {\n            method: \"delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": user.accessToken\n            },\n            data: {\n              room_id: room_id\n            },\n            url: \"api/room/\"\n          };\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(requestApi, options);\n\n        case 5:\n          response = _context5.sent;\n\n          if (!(response.status === \"success\")) {\n            _context5.next = 11;\n            break;\n          }\n\n          _context5.next = 9;\n          return put(deleteRoomSuccess(room_id));\n\n        case 9:\n          _context5.next = 13;\n          break;\n\n        case 11:\n          _context5.next = 13;\n          return put(deleteRoomFailed(response.result));\n\n        case 13:\n          _context5.next = 19;\n          break;\n\n        case 15:\n          _context5.prev = 15;\n          _context5.t0 = _context5[\"catch\"](2);\n          _context5.next = 19;\n          return put(deleteRoomFailed(_context5.t0));\n\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 15]]);\n}\n\nfunction watchGetRoomList() {\n  return _regeneratorRuntime.wrap(function watchGetRoomList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(GET_ROOM_LIST, getRoomList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchGetCurrentRoomInfo() {\n  return _regeneratorRuntime.wrap(function watchGetCurrentRoomInfo$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(GET_CURR_ROOM_INFO, getRoomInfo);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchCreateRoom() {\n  return _regeneratorRuntime.wrap(function watchCreateRoom$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(CREATE_ROOM, newRoom);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchUpdateRoom() {\n  return _regeneratorRuntime.wrap(function watchUpdateRoom$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(UPDATE_ROOM, updateRoom);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchDeleteRooms() {\n  return _regeneratorRuntime.wrap(function watchDeleteRooms$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(DELETE_ROOM, deleteRoom);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction RoomListSaga() {\n  return _regeneratorRuntime.wrap(function RoomListSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchGetRoomList), fork(watchCreateRoom), fork(watchUpdateRoom), fork(watchDeleteRooms), fork(watchGetCurrentRoomInfo)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nexport default RoomListSaga;","map":{"version":3,"sources":["D:/GIT HUB/NCKH2020/KHAN/AndroidApp/src/redux/roomList/saga.js"],"names":["getRoomList","getRoomInfo","newRoom","updateRoom","deleteRoom","watchGetRoomList","watchGetCurrentRoomInfo","watchCreateRoom","watchUpdateRoom","watchDeleteRooms","RoomListSaga","all","call","fork","takeEvery","put","requestApi","CREATE_ROOM","CREATE_ROOM_SUCCESS","DELETE_ROOM","GET_CURR_ROOM_INFO","GET_ROOM_LIST","SET_CURR_ROOM","UPDATE_ROOM","getRoomListSuccess","getRoomListFailed","createRoomSuccess","createRoomFailed","updateRoomFailed","updateRoomSuccess","deleteRoomSuccess","deleteRoomFailed","getCurrentRoomInfoSuccess","getCurrentRoomInfoFailed","user","payload","method","headers","accessToken","url","response","status","result","accesses","room_id","params","room","options","data","room_info"],"mappings":"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","sourcesContent":["import { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\r\nimport { requestApi } from \"../../helpers/api\";\r\nimport {\r\n  CREATE_ROOM,\r\n  CREATE_ROOM_SUCCESS,\r\n  DELETE_ROOM,\r\n  GET_CURR_ROOM_INFO,\r\n  GET_ROOM_LIST,\r\n  SET_CURR_ROOM,\r\n  UPDATE_ROOM,\r\n} from \"../constants\";\r\n\r\nimport {\r\n  getRoomListSuccess,\r\n  getRoomListFailed,\r\n  createRoomSuccess,\r\n  createRoomFailed,\r\n  updateRoomFailed,\r\n  updateRoomSuccess,\r\n  deleteRoomSuccess,\r\n  deleteRoomFailed,\r\n  getCurrentRoomInfoSuccess,\r\n  getCurrentRoomInfoFailed,\r\n} from \"../actions\";\r\n\r\nfunction* getRoomList({ payload: { user } }) {\r\n  try {\r\n    const response = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/access/all\",\r\n    });\r\n    if (response.status == \"success\") {\r\n      yield put(getRoomListSuccess(response.result.accesses));\r\n    } else {\r\n      yield put(getRoomListFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getRoomListFailed(error));\r\n  }\r\n}\r\n\r\nfunction* getRoomInfo({ payload: { user, room_id } }) {\r\n  try {\r\n    const response = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/\",\r\n      params: {\r\n        room_id,\r\n      },\r\n    });\r\n    if (response.status == \"success\") {\r\n      yield put(getCurrentRoomInfoSuccess(response.result.room));\r\n    } else {\r\n      yield put(getCurrentRoomInfoFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getCurrentRoomInfoFailed(error));\r\n  }\r\n}\r\n\r\nfunction* newRoom({ payload: { user, room } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: room,\r\n    url: \"api/room/create\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(createRoomSuccess(response.result.room));\r\n    } else {\r\n      yield put(createRoomFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(createRoomFailed(error));\r\n  }\r\n}\r\n\r\nfunction* updateRoom({ payload: { user, room_id, room_info } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id: room_id, ...room_info },\r\n    url: \"api/room/edit\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(updateRoomSuccess(response.result.room));\r\n    } else {\r\n      yield put(updateRoomFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(updateRoomFailed(error));\r\n  }\r\n}\r\nfunction* deleteRoom({ payload: { user, room_id } }) {\r\n  const options = {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id },\r\n    url: \"api/room/\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(deleteRoomSuccess(room_id));\r\n    } else {\r\n      yield put(deleteRoomFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteRoomFailed(error));\r\n  }\r\n}\r\n\r\nfunction* watchGetRoomList() {\r\n  yield takeEvery(GET_ROOM_LIST, getRoomList);\r\n}\r\n\r\nfunction* watchGetCurrentRoomInfo() {\r\n  yield takeEvery(GET_CURR_ROOM_INFO, getRoomInfo);\r\n}\r\n\r\nfunction* watchCreateRoom() {\r\n  yield takeEvery(CREATE_ROOM, newRoom);\r\n}\r\nfunction* watchUpdateRoom() {\r\n  yield takeEvery(UPDATE_ROOM, updateRoom);\r\n}\r\nfunction* watchDeleteRooms() {\r\n  yield takeEvery(DELETE_ROOM, deleteRoom);\r\n}\r\n\r\nfunction* RoomListSaga() {\r\n  yield all([\r\n    fork(watchGetRoomList),\r\n    fork(watchCreateRoom),\r\n    fork(watchUpdateRoom),\r\n    fork(watchDeleteRooms),\r\n    fork(watchGetCurrentRoomInfo),\r\n  ]);\r\n}\r\n\r\nexport default RoomListSaga;\r\n"]},"metadata":{},"sourceType":"module"}